{"id":"893a4d066af04a04b74ffcf7427a8b99","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./TransparentUpgradeableProxy.sol\";\nimport \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev Returns the current implementation of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"implementation()\")) == 0x5c60da1b\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"5c60da1b\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Returns the current admin of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"admin()\")) == 0xf851a440\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"f851a440\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Changes the admin of `proxy` to `newAdmin`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the current admin of `proxy`.\n     */\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\n        proxy.changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\n        proxy.upgradeTo(implementation);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function admin() external view returns (address);\n\n    function implementation() external view returns (address);\n\n    function changeAdmin(address) external;\n\n    function upgradeTo(address) external;\n\n    function upgradeToAndCall(address, bytes memory) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     *\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n     * implementation provides a function with the same selector.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _getAdmin()) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\n                ret = _dispatchUpgradeTo();\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                ret = _dispatchUpgradeToAndCall();\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\n                ret = _dispatchChangeAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\n                ret = _dispatchAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\n                ret = _dispatchImplementation();\n            } else {\n                revert(\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n            }\n            assembly {\n                return(add(ret, 0x20), mload(ret))\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function _dispatchAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address admin = _getAdmin();\n        return abi.encode(admin);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _dispatchImplementation() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address implementation = _implementation();\n        return abi.encode(implementation);\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _dispatchChangeAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newAdmin = abi.decode(msg.data[4:], (address));\n        _changeAdmin(newAdmin);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     */\n    function _dispatchUpgradeTo() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newImplementation = abi.decode(msg.data[4:], (address));\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     */\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        _upgradeToAndCall(newImplementation, data, true);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\n     */\n    function _requireZeroValue() private {\n        require(msg.value == 0);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/MonadSwapAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IERC20 {\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ninterface IBeanRouter {\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\n}\n\ncontract MonadSwapAggregator {\n    // Events\n    event TokenSwapped(\n        address indexed user,\n        address indexed fromToken,\n        address indexed toToken,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    // Constants\n    IBeanRouter public constant BEAN_ROUTER = IBeanRouter(0xCa810D095e90Daae6e867c19DF6D9A8C56db2c89);\n    address public constant WMON = 0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701;\n    address private constant NATIVE = address(0);\n\n    // Function untuk mendapatkan estimasi output\n    function getAmountOut(\n        address fromToken,\n        address toToken,\n        uint256 amountIn\n    ) public view returns (uint256 amountOut) {\n        address[] memory path;\n\n        // Handle native MON\n        if (fromToken == NATIVE) fromToken = WMON;\n        if (toToken == NATIVE) toToken = WMON;\n\n        if (fromToken == WMON || toToken == WMON) {\n            path = new address[](2);\n            path[0] = fromToken;\n            path[1] = toToken;\n        } else {\n            // Jika bukan WMON, gunakan WMON sebagai perantara\n            path = new address[](3);\n            path[0] = fromToken;\n            path[1] = WMON;\n            path[2] = toToken;\n        }\n\n        uint256[] memory amounts = BEAN_ROUTER.getAmountsOut(amountIn, path);\n        return amounts[amounts.length - 1];\n    }\n\n    // Main swap function\n    function swap(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) external payable returns (uint256 amountOut) {\n        // Check input\n        require(amountIn > 0, \"Amount must be > 0\");\n        require(fromToken != toToken, \"Same tokens\");\n\n        // Handle native MON swaps\n        if (fromToken == NATIVE) {\n            require(msg.value == amountIn, \"Invalid MON amount\");\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\n        } else if (toToken == NATIVE) {\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\n        } else {\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\n        }\n    }\n\n    // Internal function untuk swap MON ke token\n    function _swapMonForTokens(\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Setup path\n        address[] memory path = new address[](2);\n        path[0] = WMON;\n        path[1] = toToken;\n\n        // Swap MON ke token\n        uint256[] memory amounts = BEAN_ROUTER.swapExactETHForTokens{value: amountIn}(\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\n        return amountOut;\n    }\n\n    // Internal function untuk swap token ke MON\n    function _swapTokensForMon(\n        address fromToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Transfer tokens from user\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\n            \"Transfer from failed\"\n        );\n\n        // Approve router\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\n\n        // Setup path\n        address[] memory path = new address[](2);\n        path[0] = fromToken;\n        path[1] = WMON;\n\n        // Swap token ke MON\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForETH(\n            amountIn,\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\n        return amountOut;\n    }\n\n    // Internal function untuk swap antar token\n    function _swapTokens(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Transfer tokens from user\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\n            \"Transfer from failed\"\n        );\n\n        // Approve router\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\n\n        // Setup path\n        address[] memory path;\n        if (fromToken == WMON || toToken == WMON) {\n            path = new address[](2);\n            path[0] = fromToken;\n            path[1] = toToken;\n        } else {\n            path = new address[](3);\n            path[0] = fromToken;\n            path[1] = WMON;\n            path[2] = toToken;\n        }\n\n        // Execute swap\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForTokens(\n            amountIn,\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\n        return amountOut;\n    }\n\n    // Function untuk menerima MON\n    receive() external payable {}\n}"},"contracts/MonadSwapAggregatorProxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\";\n\ncontract MonadSwapAggregatorProxy is TransparentUpgradeableProxy {\n    constructor(\n        address _logic,\n        address admin_,\n        bytes memory _data\n    ) TransparentUpgradeableProxy(_logic, admin_, _data) {}\n}"},"contracts/MonadSwapAggregatorProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\";\n\ncontract MonadSwapAggregatorProxyAdmin is ProxyAdmin {\n    constructor() ProxyAdmin() {}\n}"},"contracts/MonadSwapAggregatorV1.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\ninterface IERC20 {\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ninterface IBeanRouter {\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\n}\n\ncontract MonadSwapAggregatorV1 is Initializable, OwnableUpgradeable {\n    // Events\n    event TokenSwapped(\n        address indexed user,\n        address indexed fromToken,\n        address indexed toToken,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    // State variables\n    IBeanRouter public beanRouter;\n    address public wmon;\n    address private constant NATIVE = address(0);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address _beanRouter, address _wmon) public initializer {\n        __Ownable_init();\n        beanRouter = IBeanRouter(_beanRouter);\n        wmon = _wmon;\n    }\n\n    // Function untuk mendapatkan estimasi output\n    function getAmountOut(\n        address fromToken,\n        address toToken,\n        uint256 amountIn\n    ) public view returns (uint256 amountOut) {\n        address[] memory path;\n\n        // Handle native MON\n        if (fromToken == NATIVE) fromToken = wmon;\n        if (toToken == NATIVE) toToken = wmon;\n\n        if (fromToken == wmon || toToken == wmon) {\n            path = new address[](2);\n            path[0] = fromToken;\n            path[1] = toToken;\n        } else {\n            // Jika bukan WMON, gunakan WMON sebagai perantara\n            path = new address[](3);\n            path[0] = fromToken;\n            path[1] = wmon;\n            path[2] = toToken;\n        }\n\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\n        return amounts[amounts.length - 1];\n    }\n\n    // Main swap function\n    function swap(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) external payable returns (uint256 amountOut) {\n        require(amountIn > 0, \"Amount must be > 0\");\n        require(fromToken != toToken, \"Same tokens\");\n\n        if (fromToken == NATIVE) {\n            require(msg.value == amountIn, \"Invalid MON amount\");\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\n        } else if (toToken == NATIVE) {\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\n        } else {\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\n        }\n    }\n\n    // Internal function untuk swap MON ke token\n    function _swapMonForTokens(\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Setup path\n        address[] memory path = new address[](2);\n        path[0] = wmon;\n        path[1] = toToken;\n\n        // Swap MON ke token\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\n        return amountOut;\n    }\n\n    // Internal function untuk swap token ke MON\n    function _swapTokensForMon(\n        address fromToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Transfer tokens from user\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\n            \"Transfer from failed\"\n        );\n\n        // Approve router\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\n\n        // Setup path\n        address[] memory path = new address[](2);\n        path[0] = fromToken;\n        path[1] = wmon;\n\n        // Swap token ke MON\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\n            amountIn,\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\n        return amountOut;\n    }\n\n    // Internal function untuk swap antar token\n    function _swapTokens(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Transfer tokens from user\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\n            \"Transfer from failed\"\n        );\n\n        // Approve router\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\n\n        // Setup path\n        address[] memory path;\n        if (fromToken == wmon || toToken == wmon) {\n            path = new address[](2);\n            path[0] = fromToken;\n            path[1] = toToken;\n        } else {\n            path = new address[](3);\n            path[0] = fromToken;\n            path[1] = wmon;\n            path[2] = toToken;\n        }\n\n        // Execute swap\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\n            amountIn,\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\n        return amountOut;\n    }\n\n    // Function untuk menerima MON\n    receive() external payable {}\n\n    // Fungsi upgrade (hanya owner)\n    function updateBeanRouter(address _newRouter) external onlyOwner {\n        require(_newRouter != address(0), \"Invalid router address\");\n        beanRouter = IBeanRouter(_newRouter);\n    }\n\n    function updateWMON(address _newWMON) external onlyOwner {\n        require(_newWMON != address(0), \"Invalid WMON address\");\n        wmon = _newWMON;\n    }\n}"},"contracts/MonadSwapAggregatorV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\ninterface IERC20 {\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ninterface IBeanRouter {\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\n}\n\ncontract MonadSwapAggregatorV2 is Initializable, OwnableUpgradeable {\n    // Events\n    event TokenSwapped(\n        address indexed user,\n        address indexed fromToken,\n        address indexed toToken,\n        uint256 amountIn,\n        uint256 amountOut,\n        uint256 fee\n    );\n\n    event FeeUpdated(uint256 newFee);\n    event FeeCollectorUpdated(address newCollector);\n\n    // State variables\n    IBeanRouter public beanRouter;\n    address public wmon;\n    address private constant NATIVE = address(0);\n\n    // New V2 variables\n    uint256 public swapFee; // dalam basis points (1 = 0.01%)\n    address public feeCollector;\n    mapping(address => bool) public preferredPairs; // Pairs yang bisa di-swap langsung\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address _beanRouter, address _wmon) public initializer {\n        __Ownable_init();\n        beanRouter = IBeanRouter(_beanRouter);\n        wmon = _wmon;\n        swapFee = 30; // 0.3% fee default\n        feeCollector = msg.sender;\n    }\n\n    // New V2 functions\n    function setSwapFee(uint256 _newFee) external onlyOwner {\n        require(_newFee <= 100, \"Fee too high\"); // Max 1%\n        swapFee = _newFee;\n        emit FeeUpdated(_newFee);\n    }\n\n    function setFeeCollector(address _newCollector) external onlyOwner {\n        require(_newCollector != address(0), \"Invalid address\");\n        feeCollector = _newCollector;\n        emit FeeCollectorUpdated(_newCollector);\n    }\n\n    function setPreferredPair(address token0, address token1, bool status) external onlyOwner {\n        bytes32 pairKey = _getPairKey(token0, token1);\n        preferredPairs[address(uint160(uint256(pairKey)))] = status;\n    }\n\n    function _getPairKey(address token0, address token1) internal pure returns (bytes32) {\n        return token0 < token1\n            ? keccak256(abi.encodePacked(token0, token1))\n            : keccak256(abi.encodePacked(token1, token0));\n    }\n\n    // Updated V2 functions\n    function getAmountOut(\n        address fromToken,\n        address toToken,\n        uint256 amountIn\n    ) public view returns (uint256 amountOut) {\n        address[] memory path = _getOptimalPath(fromToken, toToken);\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\n        amountOut = amounts[amounts.length - 1];\n\n        // Apply fee\n        amountOut = amountOut * (10000 - swapFee) / 10000;\n    }\n\n    function _getOptimalPath(address fromToken, address toToken) internal view returns (address[] memory) {\n        if (fromToken == NATIVE) fromToken = wmon;\n        if (toToken == NATIVE) toToken = wmon;\n\n        // Check if direct swap is possible\n        bytes32 pairKey = _getPairKey(fromToken, toToken);\n        if (preferredPairs[address(uint160(uint256(pairKey)))]) {\n            address[] memory directPath = new address[](2);\n            directPath[0] = fromToken;\n            directPath[1] = toToken;\n            return directPath;\n        }\n\n        // Default to WMON routing\n        if (fromToken == wmon || toToken == wmon) {\n            address[] memory path = new address[](2);\n            path[0] = fromToken;\n            path[1] = toToken;\n            return path;\n        } else {\n            address[] memory path = new address[](3);\n            path[0] = fromToken;\n            path[1] = wmon;\n            path[2] = toToken;\n            return path;\n        }\n    }\n\n    // Main swap function (updated with fee)\n    function swap(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) external payable returns (uint256 amountOut) {\n        require(amountIn > 0, \"Amount must be > 0\");\n        require(fromToken != toToken, \"Same tokens\");\n\n        if (fromToken == NATIVE) {\n            require(msg.value == amountIn, \"Invalid MON amount\");\n            amountOut = _swapMonForTokens(toToken, amountIn, amountOutMin);\n        } else if (toToken == NATIVE) {\n            amountOut = _swapTokensForMon(fromToken, amountIn, amountOutMin);\n        } else {\n            amountOut = _swapTokens(fromToken, toToken, amountIn, amountOutMin);\n        }\n\n        // Collect fee\n        uint256 fee = amountOut * swapFee / 10000;\n        if (fee > 0 && toToken != NATIVE) {\n            IERC20(toToken).transfer(feeCollector, fee);\n        }\n\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut, fee);\n    }\n\n    // Internal function untuk swap MON ke token\n    function _swapMonForTokens(\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Setup path\n        address[] memory path = new address[](2);\n        path[0] = wmon;\n        path[1] = toToken;\n\n        // Swap MON ke token\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        return amountOut;\n    }\n\n    // Internal function untuk swap token ke MON\n    function _swapTokensForMon(\n        address fromToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Transfer tokens from user\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\n            \"Transfer from failed\"\n        );\n\n        // Approve router\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\n\n        // Setup path\n        address[] memory path = new address[](2);\n        path[0] = fromToken;\n        path[1] = wmon;\n\n        // Swap token ke MON\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\n            amountIn,\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        return amountOut;\n    }\n\n    // Internal function untuk swap antar token\n    function _swapTokens(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        uint256 amountOutMin\n    ) internal returns (uint256) {\n        // Transfer tokens from user\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\n            \"Transfer from failed\"\n        );\n\n        // Approve router\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\n\n        // Setup path\n        address[] memory path = _getOptimalPath(fromToken, toToken);\n\n        // Execute swap\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\n            amountIn,\n            amountOutMin,\n            path,\n            msg.sender,\n            block.timestamp + 1200\n        );\n\n        uint256 amountOut = amounts[amounts.length - 1];\n        return amountOut;\n    }\n\n    receive() external payable {}\n\n    // Admin functions\n    function updateBeanRouter(address _newRouter) external onlyOwner {\n        require(_newRouter != address(0), \"Invalid router address\");\n        beanRouter = IBeanRouter(_newRouter);\n    }\n\n    function updateWMON(address _newWMON) external onlyOwner {\n        require(_newWMON != address(0), \"Invalid WMON address\");\n        wmon = _newWMON;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","useLiteralContent":true},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[630],"ContextUpgradeable":[672],"Initializable":[300],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":673,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":301,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nameLocations":["748:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nameLocations":["763:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,672,300],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["1038:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1149:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2118:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2128:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2128:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nameLocations":["2108:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2108:9:0"},"nodeType":"ModifierInvocation","src":"2108:9:0"}],"name":"renounceOwnership","nameLocation":"2073:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2090:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2118:0:0"},"scope":131,"src":"2064:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2384:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2402:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2394:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2496:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2477:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2477:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2171:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2374:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2374:9:0"},"nodeType":"ModifierInvocation","src":"2374:9:0"}],"name":"transferOwnership","nameLocation":"2323:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2341:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2384:0:0"},"scope":131,"src":"2314:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2729:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2739:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2758:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2774:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2783:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2774:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2827:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2837:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2806:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2801:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2518:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2694:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2729:0:0"},"scope":131,"src":"2666:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2859:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3118:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2438:0","usedErrors":[],"usedEvents":[16,146]}],"src":"102:3045:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[630],"Initializable":[300]},"id":301,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":301,"sourceUnit":631,"src":"138:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"184:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":300,"linearizedBaseContracts":[300],"name":"Initializable","nameLocation":"2412:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"2432:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":138,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:1","nodeType":"VariableDeclaration","scope":300,"src":"2546:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":137,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2579:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":141,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:1","nodeType":"VariableDeclaration","scope":300,"src":"2675:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":140,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"2708:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":146,"name":"Initialized","nameLocation":"2809:11:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":146,"src":"2821:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":143,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:1"},"src":"2803:33:1"},{"body":{"id":201,"nodeType":"Block","src":"3269:483:1","statements":[{"assignments":[150],"declarations":[{"constant":false,"id":150,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:1","nodeType":"VariableDeclaration","scope":201,"src":"3279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":153,"initialValue":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:1","subExpression":{"id":151,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3302:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":155,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3347:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":156,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3365:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:1","subExpression":{"arguments":[{"arguments":[{"id":165,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$300","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$300","typeString":"contract Initializable"}],"id":164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:1","typeDescriptions":{}}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":161,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"3388:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$630_$","typeString":"type(library AddressUpgradeable)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":318,"src":"3388:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3436:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"3325:201:1"},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":178,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3536:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":181,"nodeType":"ExpressionStatement","src":"3536:16:1"},{"condition":{"id":182,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3566:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"IfStatement","src":"3562:65:1","trueBody":{"id":187,"nodeType":"Block","src":"3582:45:1","statements":[{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3596:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":186,"nodeType":"ExpressionStatement","src":"3596:20:1"}]}},{"id":189,"nodeType":"PlaceholderStatement","src":"3636:1:1"},{"condition":{"id":190,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3651:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":200,"nodeType":"IfStatement","src":"3647:99:1","trueBody":{"id":199,"nodeType":"Block","src":"3667:79:1","statements":[{"expression":{"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":191,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3681:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":194,"nodeType":"ExpressionStatement","src":"3681:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":195,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3721:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"EmitStatement","src":"3716:19:1"}]}}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"2842:399:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":202,"name":"initializer","nameLocation":"3255:11:1","nodeType":"ModifierDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"3266:2:1"},"src":"3246:506:1","virtual":false,"visibility":"internal"},{"body":{"id":234,"nodeType":"Block","src":"4863:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:1","subExpression":{"id":208,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4882:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4899:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":211,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4914:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"4873:99:1"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4982:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4997:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":220,"nodeType":"ExpressionStatement","src":"4982:22:1"},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5014:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"ExpressionStatement","src":"5014:20:1"},{"id":225,"nodeType":"PlaceholderStatement","src":"5044:1:1"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5055:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"ExpressionStatement","src":"5055:21:1"},{"eventCall":{"arguments":[{"id":231,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5103:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":230,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5091:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"EmitStatement","src":"5086:25:1"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"3758:1062:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":235,"name":"reinitializer","nameLocation":"4834:13:1","nodeType":"ModifierDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"version","nameLocation":"4854:7:1","nodeType":"VariableDeclaration","scope":235,"src":"4848:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":204,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:1"},"src":"4825:293:1","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"5356:97:1","statements":[{"expression":{"arguments":[{"id":239,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5374:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"5366:69:1"},{"id":243,"nodeType":"PlaceholderStatement","src":"5445:1:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"5124:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":245,"name":"onlyInitializing","nameLocation":"5337:16:1","nodeType":"ModifierDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"5353:2:1"},"src":"5328:125:1","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"5988:231:1","statements":[{"expression":{"arguments":[{"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:1","subExpression":{"id":250,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6007:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"5998:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6078:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":257,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:1","memberName":"max","nodeType":"MemberAccess","src":"6094:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"IfStatement","src":"6074:139:1","trueBody":{"id":278,"nodeType":"Block","src":"6111:102:1","statements":[{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":262,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6125:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":264,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:1","memberName":"max","nodeType":"MemberAccess","src":"6140:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":269,"nodeType":"ExpressionStatement","src":"6125:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:1","memberName":"max","nodeType":"MemberAccess","src":"6186:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":270,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"6174:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"EmitStatement","src":"6169:33:1"}]}}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"5459:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:1","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"5968:2:1"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"5988:0:1"},"scope":300,"src":"5939:280:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":289,"nodeType":"Block","src":"6393:36:1","statements":[{"expression":{"id":287,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6410:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":286,"id":288,"nodeType":"Return","src":"6403:19:1"}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"6225:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":290,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:1","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[],"src":"6360:2:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":290,"src":"6386:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":284,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:1"},"scope":300,"src":"6329:100:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"6601:37:1","statements":[{"expression":{"id":296,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6618:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":295,"id":297,"nodeType":"Return","src":"6611:20:1"}]},"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"6435:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:1","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"6569:2:1"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"6595:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:1"},"scope":300,"src":"6545:93:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":301,"src":"2394:4246:1","usedErrors":[],"usedEvents":[146]}],"src":"113:6528:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":302,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"126:67:2","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":630,"linearizedBaseContracts":[630],"name":"AddressUpgradeable","nameLocation":"202:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":317,"nodeType":"Block","src":"1489:254:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":311,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1713:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:2","memberName":"code","nodeType":"MemberAccess","src":"1713:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:2","memberName":"length","nodeType":"MemberAccess","src":"1713:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":310,"id":316,"nodeType":"Return","src":"1706:30:2"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"227:1191:2","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:2","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"account","nameLocation":"1451:7:2","nodeType":"VariableDeclaration","scope":318,"src":"1443:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:2"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":318,"src":"1483:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":308,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:2"},"scope":630,"src":"1423:320:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"2729:241:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":329,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$630","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$630","typeString":"library AddressUpgradeable"}],"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:2","typeDescriptions":{}}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:2","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":332,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"2772:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"2739:73:2"},{"assignments":[338,null],"declarations":[{"constant":false,"id":338,"mutability":"mutable","name":"success","nameLocation":"2829:7:2","nodeType":"VariableDeclaration","scope":351,"src":"2824:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":337,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":345,"initialValue":{"arguments":[{"hexValue":"","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":339,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2842:9:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:2","memberName":"call","nodeType":"MemberAccess","src":"2842:14:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":341,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"2864:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:2"},{"expression":{"arguments":[{"id":347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2893:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"ExpressionStatement","src":"2885:78:2"}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"1749:904:2","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":352,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:2","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:2","nodeType":"VariableDeclaration","scope":352,"src":"2677:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"amount","nameLocation":"2712:6:2","nodeType":"VariableDeclaration","scope":352,"src":"2704:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:2"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"2729:0:2"},"scope":630,"src":"2658:312:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"3801:96:2","statements":[{"expression":{"arguments":[{"id":363,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"3840:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3848:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":362,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[410,454],"referencedDeclaration":454,"src":"3818:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":361,"id":368,"nodeType":"Return","src":"3811:79:2"}]},"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"2976:731:2","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:2","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"target","nameLocation":"3742:6:2","nodeType":"VariableDeclaration","scope":370,"src":"3734:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"data","nameLocation":"3763:4:2","nodeType":"VariableDeclaration","scope":370,"src":"3750:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":356,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:2"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"3787:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:2"},"scope":630,"src":"3712:185:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":389,"nodeType":"Block","src":"4266:76:2","statements":[{"expression":{"arguments":[{"id":383,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4305:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4313:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":386,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4322:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":382,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[410,454],"referencedDeclaration":454,"src":"4283:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":381,"id":388,"nodeType":"Return","src":"4276:59:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"3903:211:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":390,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:2","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"target","nameLocation":"4158:6:2","nodeType":"VariableDeclaration","scope":390,"src":"4150:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"data","nameLocation":"4187:4:2","nodeType":"VariableDeclaration","scope":390,"src":"4174:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":374,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:2","nodeType":"VariableDeclaration","scope":390,"src":"4201:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"4252:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":379,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:2"},"scope":630,"src":"4119:223:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"4817:111:2","statements":[{"expression":{"arguments":[{"id":403,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"4856:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":404,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4864:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4870:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":402,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[410,454],"referencedDeclaration":454,"src":"4834:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":401,"id":408,"nodeType":"Return","src":"4827:94:2"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"4348:351:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":410,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:2","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"target","nameLocation":"4743:6:2","nodeType":"VariableDeclaration","scope":410,"src":"4735:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"data","nameLocation":"4764:4:2","nodeType":"VariableDeclaration","scope":410,"src":"4751:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"value","nameLocation":"4778:5:2","nodeType":"VariableDeclaration","scope":410,"src":"4770:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"4803:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":399,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:2"},"scope":630,"src":"4704:224:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":453,"nodeType":"Block","src":"5355:267:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":427,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$630","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$630","typeString":"library AddressUpgradeable"}],"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:2","typeDescriptions":{}}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:2","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5398:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5365:81:2"},{"assignments":[436,438],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"success","nameLocation":"5462:7:2","nodeType":"VariableDeclaration","scope":453,"src":"5457:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":435,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:2","nodeType":"VariableDeclaration","scope":453,"src":"5471:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":437,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":445,"initialValue":{"arguments":[{"id":443,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5524:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":439,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5498:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:2","memberName":"call","nodeType":"MemberAccess","src":"5498:11:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5517:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:2"},{"expression":{"arguments":[{"id":447,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5573:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"5581:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":449,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5590:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":450,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5602:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":446,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"5546:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":423,"id":452,"nodeType":"Return","src":"5539:76:2"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"4934:237:2","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":454,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:2","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"target","nameLocation":"5224:6:2","nodeType":"VariableDeclaration","scope":454,"src":"5216:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"data","nameLocation":"5253:4:2","nodeType":"VariableDeclaration","scope":454,"src":"5240:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"value","nameLocation":"5275:5:2","nodeType":"VariableDeclaration","scope":454,"src":"5267:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:2","nodeType":"VariableDeclaration","scope":454,"src":"5290:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":418,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":454,"src":"5341:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:2"},"scope":630,"src":"5176:446:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":470,"nodeType":"Block","src":"5899:97:2","statements":[{"expression":{"arguments":[{"id":465,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5935:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":466,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5943:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":464,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[471,500],"referencedDeclaration":500,"src":"5916:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":463,"id":469,"nodeType":"Return","src":"5909:80:2"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"5628:166:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:2","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"target","nameLocation":"5835:6:2","nodeType":"VariableDeclaration","scope":471,"src":"5827:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"data","nameLocation":"5856:4:2","nodeType":"VariableDeclaration","scope":471,"src":"5843:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:2"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":471,"src":"5885:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:2"},"scope":630,"src":"5799:197:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":499,"nodeType":"Block","src":"6338:168:2","statements":[{"assignments":[484,486],"declarations":[{"constant":false,"id":484,"mutability":"mutable","name":"success","nameLocation":"6354:7:2","nodeType":"VariableDeclaration","scope":499,"src":"6349:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:2","nodeType":"VariableDeclaration","scope":499,"src":"6363:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":485,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[{"id":489,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6408:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":487,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6390:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:2","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:2","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:2"},{"expression":{"arguments":[{"id":493,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6457:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"6465:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":495,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6474:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":496,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6486:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":492,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6430:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":482,"id":498,"nodeType":"Return","src":"6423:76:2"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"6002:173:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:2","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"target","nameLocation":"6225:6:2","nodeType":"VariableDeclaration","scope":500,"src":"6217:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"data","nameLocation":"6254:4:2","nodeType":"VariableDeclaration","scope":500,"src":"6241:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":475,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:2","nodeType":"VariableDeclaration","scope":500,"src":"6268:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":477,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:2"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"6324:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:2"},"scope":630,"src":"6180:326:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6782:101:2","statements":[{"expression":{"arguments":[{"id":511,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6820:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6828:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":510,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[517,546],"referencedDeclaration":546,"src":"6799:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":509,"id":515,"nodeType":"Return","src":"6792:84:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"6512:168:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":517,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"target","nameLocation":"6723:6:2","nodeType":"VariableDeclaration","scope":517,"src":"6715:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"data","nameLocation":"6744:4:2","nodeType":"VariableDeclaration","scope":517,"src":"6731:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:2"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":517,"src":"6768:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":507,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:2"},"scope":630,"src":"6685:198:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":545,"nodeType":"Block","src":"7224:170:2","statements":[{"assignments":[530,532],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"success","nameLocation":"7240:7:2","nodeType":"VariableDeclaration","scope":545,"src":"7235:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:2","nodeType":"VariableDeclaration","scope":545,"src":"7249:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":531,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[{"id":535,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7296:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":533,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:2","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:2","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:2"},{"expression":{"arguments":[{"id":539,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7345:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7353:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":541,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7362:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":542,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"7374:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":538,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"7318:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":528,"id":544,"nodeType":"Return","src":"7311:76:2"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6889:175:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:2","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"target","nameLocation":"7116:6:2","nodeType":"VariableDeclaration","scope":546,"src":"7108:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"data","nameLocation":"7145:4:2","nodeType":"VariableDeclaration","scope":546,"src":"7132:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:2","nodeType":"VariableDeclaration","scope":546,"src":"7159:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":523,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:2"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"7210:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:2"},"scope":630,"src":"7069:325:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"7876:434:2","statements":[{"condition":{"id":560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"7890:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":582,"nodeType":"Block","src":"8246:58:2","statements":[{"expression":{"arguments":[{"id":578,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"8268:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":579,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8280:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":577,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8260:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"8260:33:2"}]},"id":583,"nodeType":"IfStatement","src":"7886:418:2","trueBody":{"id":576,"nodeType":"Block","src":"7899:341:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":561,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"7917:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:2","memberName":"length","nodeType":"MemberAccess","src":"7917:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":573,"nodeType":"IfStatement","src":"7913:286:2","trueBody":{"id":572,"nodeType":"Block","src":"7941:258:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":567,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"8143:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":566,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8132:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":565,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"ExpressionStatement","src":"8124:60:2"}]}},{"expression":{"id":574,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"8219:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":559,"id":575,"nodeType":"Return","src":"8212:17:2"}]}}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"7400:277:2","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:2","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"target","nameLocation":"7735:6:2","nodeType":"VariableDeclaration","scope":585,"src":"7727:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"success","nameLocation":"7756:7:2","nodeType":"VariableDeclaration","scope":585,"src":"7751:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:2","nodeType":"VariableDeclaration","scope":585,"src":"7773:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":552,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:2","nodeType":"VariableDeclaration","scope":585,"src":"7806:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":554,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:2"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"7862:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":557,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:2"},"scope":630,"src":"7682:628:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":608,"nodeType":"Block","src":"8691:135:2","statements":[{"condition":{"id":597,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8705:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":606,"nodeType":"Block","src":"8762:58:2","statements":[{"expression":{"arguments":[{"id":602,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"8784:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":603,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"8796:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":601,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8776:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"8776:33:2"}]},"id":607,"nodeType":"IfStatement","src":"8701:119:2","trueBody":{"id":600,"nodeType":"Block","src":"8714:42:2","statements":[{"expression":{"id":598,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"8735:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":596,"id":599,"nodeType":"Return","src":"8728:17:2"}]}}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"8316:210:2","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":609,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:2","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"success","nameLocation":"8571:7:2","nodeType":"VariableDeclaration","scope":609,"src":"8566:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":587,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:2","nodeType":"VariableDeclaration","scope":609,"src":"8588:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":589,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:2","nodeType":"VariableDeclaration","scope":609,"src":"8621:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":591,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:2"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":609,"src":"8677:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":594,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:2"},"scope":630,"src":"8531:295:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"8915:457:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":616,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8991:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:2","memberName":"length","nodeType":"MemberAccess","src":"8991:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":626,"nodeType":"Block","src":"9321:45:2","statements":[{"expression":{"arguments":[{"id":623,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"9342:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":622,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"9335:20:2"}]},"id":627,"nodeType":"IfStatement","src":"8987:379:2","trueBody":{"id":621,"nodeType":"Block","src":"9014:301:2","statements":[{"AST":{"nativeSrc":"9172:133:2","nodeType":"YulBlock","src":"9172:133:2","statements":[{"nativeSrc":"9190:40:2","nodeType":"YulVariableDeclaration","src":"9190:40:2","value":{"arguments":[{"name":"returndata","nativeSrc":"9219:10:2","nodeType":"YulIdentifier","src":"9219:10:2"}],"functionName":{"name":"mload","nativeSrc":"9213:5:2","nodeType":"YulIdentifier","src":"9213:5:2"},"nativeSrc":"9213:17:2","nodeType":"YulFunctionCall","src":"9213:17:2"},"variables":[{"name":"returndata_size","nativeSrc":"9194:15:2","nodeType":"YulTypedName","src":"9194:15:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9258:2:2","nodeType":"YulLiteral","src":"9258:2:2","type":"","value":"32"},{"name":"returndata","nativeSrc":"9262:10:2","nodeType":"YulIdentifier","src":"9262:10:2"}],"functionName":{"name":"add","nativeSrc":"9254:3:2","nodeType":"YulIdentifier","src":"9254:3:2"},"nativeSrc":"9254:19:2","nodeType":"YulFunctionCall","src":"9254:19:2"},{"name":"returndata_size","nativeSrc":"9275:15:2","nodeType":"YulIdentifier","src":"9275:15:2"}],"functionName":{"name":"revert","nativeSrc":"9247:6:2","nodeType":"YulIdentifier","src":"9247:6:2"},"nativeSrc":"9247:44:2","nodeType":"YulFunctionCall","src":"9247:44:2"},"nativeSrc":"9247:44:2","nodeType":"YulExpressionStatement","src":"9247:44:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":611,"isOffset":false,"isSlot":false,"src":"9219:10:2","valueSize":1},{"declaration":611,"isOffset":false,"isSlot":false,"src":"9262:10:2","valueSize":1}],"id":620,"nodeType":"InlineAssembly","src":"9163:142:2"}]}}]},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:2","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:2","nodeType":"VariableDeclaration","scope":629,"src":"8849:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:2","nodeType":"VariableDeclaration","scope":629,"src":"8874:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":612,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:2"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"8915:0:2"},"scope":630,"src":"8832:540:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":631,"src":"194:9180:2","usedErrors":[],"usedEvents":[]}],"src":"101:9274:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[630],"ContextUpgradeable":[672],"Initializable":[300]},"id":673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":673,"sourceUnit":301,"src":"110:42:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":635,"name":"Initializable","nameLocations":["691:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"691:13:3"},"id":636,"nodeType":"InheritanceSpecifier","src":"691:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"154:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":672,"linearizedBaseContracts":[672,300],"name":"ContextUpgradeable","nameLocation":"669:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":641,"nodeType":"Block","src":"763:7:3","statements":[]},"id":642,"implemented":true,"kind":"function","modifiers":[{"id":639,"kind":"modifierInvocation","modifierName":{"id":638,"name":"onlyInitializing","nameLocations":["746:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"746:16:3"},"nodeType":"ModifierInvocation","src":"746:16:3"}],"name":"__Context_init","nameLocation":"720:14:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"734:2:3"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[],"src":"763:0:3"},"scope":672,"src":"711:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"838:7:3","statements":[]},"id":648,"implemented":true,"kind":"function","modifiers":[{"id":645,"kind":"modifierInvocation","modifierName":{"id":644,"name":"onlyInitializing","nameLocations":["821:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"821:16:3"},"nodeType":"ModifierInvocation","src":"821:16:3"}],"name":"__Context_init_unchained","nameLocation":"785:24:3","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"809:2:3"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"838:0:3"},"scope":672,"src":"776:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"912:34:3","statements":[{"expression":{"expression":{"id":653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:3","memberName":"sender","nodeType":"MemberAccess","src":"929:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":652,"id":655,"nodeType":"Return","src":"922:17:3"}]},"id":657,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:3","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"869:2:3"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"903:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:3"},"scope":672,"src":"850:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"1019:32:3","statements":[{"expression":{"expression":{"id":662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:3","memberName":"data","nodeType":"MemberAccess","src":"1036:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":661,"id":664,"nodeType":"Return","src":"1029:15:3"}]},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:3","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"969:2:3"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"1003:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:3"},"scope":672,"src":"952:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"1057:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":671,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:3","nodeType":"VariableDeclaration","scope":672,"src":"1316:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":670,"length":{"hexValue":"3530","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":673,"src":"651:693:3","usedErrors":[],"usedEvents":[146]}],"src":"86:1259:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2030],"Ownable":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":674,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":786,"sourceUnit":2031,"src":"127:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":677,"name":"Context","nameLocations":["683:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2030,"src":"683:7:4"},"id":678,"nodeType":"InheritanceSpecifier","src":"683:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"159:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785,2030],"name":"Ownable","nameLocation":"672:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":680,"mutability":"mutable","name":"_owner","nameLocation":"713:6:4","nodeType":"VariableDeclaration","scope":785,"src":"697:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":686,"name":"OwnershipTransferred","nameLocation":"732:20:4","nodeType":"EventDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:4","nodeType":"VariableDeclaration","scope":686,"src":"753:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:4","nodeType":"VariableDeclaration","scope":686,"src":"784:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:4"},"src":"726:84:4"},{"body":{"id":695,"nodeType":"Block","src":"926:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"955:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":690,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"936:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"936:32:4"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"816:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":696,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"923:2:4"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"926:0:4"},"scope":785,"src":"912:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"1084:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":699,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1094:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"1094:13:4"},{"id":702,"nodeType":"PlaceholderStatement","src":"1117:1:4"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"981:77:4","text":" @dev Throws if called by any account other than the owner."},"id":704,"name":"onlyOwner","nameLocation":"1072:9:4","nodeType":"ModifierDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"1081:2:4"},"src":"1063:62:4","virtual":false,"visibility":"internal"},{"body":{"id":712,"nodeType":"Block","src":"1256:30:4","statements":[{"expression":{"id":710,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1273:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":709,"id":711,"nodeType":"Return","src":"1266:13:4"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"1131:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":713,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:4","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"1215:2:4"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"1247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:4"},"scope":785,"src":"1201:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":726,"nodeType":"Block","src":"1404:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"1422:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"1433:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"1414:68:4"}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"1292:62:4","text":" @dev Throws if the sender is not the owner."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:4","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"1379:2:4"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"1404:0:4"},"scope":785,"src":"1359:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"1878:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1888:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"1888:30:4"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"1495:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":741,"implemented":true,"kind":"function","modifiers":[{"id":731,"kind":"modifierInvocation","modifierName":{"id":730,"name":"onlyOwner","nameLocations":["1868:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1868:9:4"},"nodeType":"ModifierInvocation","src":"1868:9:4"}],"name":"renounceOwnership","nameLocation":"1833:17:4","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"1850:2:4"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"1878:0:4"},"scope":785,"src":"1824:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":763,"nodeType":"Block","src":"2144:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"2162:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:4","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"2154:73:4"},{"expression":{"arguments":[{"id":760,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"2256:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":759,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2237:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"2237:28:4"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"1931:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":764,"implemented":true,"kind":"function","modifiers":[{"id":747,"kind":"modifierInvocation","modifierName":{"id":746,"name":"onlyOwner","nameLocations":["2134:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"2134:9:4"},"nodeType":"ModifierInvocation","src":"2134:9:4"}],"name":"transferOwnership","nameLocation":"2083:17:4","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:4","nodeType":"VariableDeclaration","scope":764,"src":"2101:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:4"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"2144:0:4"},"scope":785,"src":"2074:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":783,"nodeType":"Block","src":"2489:124:4","statements":[{"assignments":[771],"declarations":[{"constant":false,"id":771,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:4","nodeType":"VariableDeclaration","scope":783,"src":"2499:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":773,"initialValue":{"id":772,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2518:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:4"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":774,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2534:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":775,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2543:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":777,"nodeType":"ExpressionStatement","src":"2534:17:4"},{"eventCall":{"arguments":[{"id":779,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2587:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2597:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"2566:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"EmitStatement","src":"2561:45:4"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2278:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:4","nodeType":"VariableDeclaration","scope":784,"src":"2454:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:4"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"2489:0:4"},"scope":785,"src":"2426:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":786,"src":"654:1961:4","usedErrors":[],"usedEvents":[686]}],"src":"102:2514:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[806]},"id":807,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"132:133:5","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":806,"linearizedBaseContracts":[806],"name":"IERC1967","nameLocation":"276:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"291:68:5","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":793,"name":"Upgraded","nameLocation":"370:8:5","nodeType":"EventDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"395:14:5","nodeType":"VariableDeclaration","scope":793,"src":"379:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:32:5"},"src":"364:47:5"},{"anonymous":false,"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"417:67:5","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":800,"name":"AdminChanged","nameLocation":"495:12:5","nodeType":"EventDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"516:13:5","nodeType":"VariableDeclaration","scope":800,"src":"508:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"539:8:5","nodeType":"VariableDeclaration","scope":800,"src":"531:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:41:5"},"src":"489:60:5"},{"anonymous":false,"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"555:59:5","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":805,"name":"BeaconUpgraded","nameLocation":"625:14:5","nodeType":"EventDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"656:6:5","nodeType":"VariableDeclaration","scope":805,"src":"640:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:24:5"},"src":"619:45:5"}],"scope":807,"src":"266:400:5","usedErrors":[],"usedEvents":[793,800,805]}],"src":"107:560:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[816]},"id":817,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":808,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"138:203:6","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":816,"linearizedBaseContracts":[816],"name":"IERC1822Proxiable","nameLocation":"352:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"376:438:6","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":815,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:6","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"841:2:6"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"867:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:6"},"scope":816,"src":"819:57:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":817,"src":"342:536:6","usedErrors":[],"usedEvents":[]}],"src":"113:766:6"},"id":6},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"Address":[2008],"ERC1967Proxy":[853],"ERC1967Upgrade":[1157],"IBeacon":[1219],"IERC1822Proxiable":[816],"IERC1967":[806],"Proxy":[1209],"StorageSlot":[2140]},"id":854,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":818,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:7"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":854,"sourceUnit":1210,"src":"139:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"./ERC1967Upgrade.sol","id":820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":854,"sourceUnit":1158,"src":"162:30:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":822,"name":"Proxy","nameLocations":["592:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1209,"src":"592:5:7"},"id":823,"nodeType":"InheritanceSpecifier","src":"592:5:7"},{"baseName":{"id":824,"name":"ERC1967Upgrade","nameLocations":["599:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1157,"src":"599:14:7"},"id":825,"nodeType":"InheritanceSpecifier","src":"599:14:7"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"194:372:7","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":853,"linearizedBaseContracts":[853,1157,806,1209],"name":"ERC1967Proxy","nameLocation":"576:12:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":839,"nodeType":"Block","src":"1014:56:7","statements":[{"expression":{"arguments":[{"id":834,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"1042:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"1050:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1057:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":833,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"1024:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"ExpressionStatement","src":"1024:39:7"}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"620:333:7","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."},"id":840,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"_logic","nameLocation":"978:6:7","nodeType":"VariableDeclaration","scope":840,"src":"970:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"_data","nameLocation":"999:5:7","nodeType":"VariableDeclaration","scope":840,"src":"986:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":829,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"969:36:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"1014:0:7"},"scope":853,"src":"958:112:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[1174],"body":{"id":851,"nodeType":"Block","src":"1229:59:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":847,"name":"ERC1967Upgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1246:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Upgrade_$1157_$","typeString":"type(contract ERC1967Upgrade)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1261:18:7","memberName":"_getImplementation","nodeType":"MemberAccess","referencedDeclaration":883,"src":"1246:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":846,"id":850,"nodeType":"Return","src":"1239:42:7"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1076:67:7","text":" @dev Returns the current implementation address."},"id":852,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1157:15:7","nodeType":"FunctionDefinition","overrides":{"id":843,"nodeType":"OverrideSpecifier","overrides":[],"src":"1197:8:7"},"parameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"1172:2:7"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"impl","nameLocation":"1223:4:7","nodeType":"VariableDeclaration","scope":852,"src":"1215:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1214:14:7"},"scope":853,"src":"1148:140:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":854,"src":"567:723:7","usedErrors":[],"usedEvents":[793,800,805]}],"src":"114:1177:7"},"id":7},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[2008],"ERC1967Upgrade":[1157],"IBeacon":[1219],"IERC1822Proxiable":[816],"IERC1967":[806],"StorageSlot":[2140]},"id":1158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":855,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:8"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":856,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":1220,"src":"141:31:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":807,"src":"173:39:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":817,"src":"213:45:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":859,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":2009,"src":"259:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":2141,"src":"293:37:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":862,"name":"IERC1967","nameLocations":["553:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":806,"src":"553:8:8"},"id":863,"nodeType":"InheritanceSpecifier","src":"553:8:8"}],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"332:184:8","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":1157,"linearizedBaseContracts":[1157,806],"name":"ERC1967Upgrade","nameLocation":"535:14:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":866,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:8","nodeType":"VariableDeclaration","scope":1157,"src":"647:108:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:8","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"762:214:8","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":870,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:8","nodeType":"VariableDeclaration","scope":1157,"src":"981:115:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:8","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"1237:78:8","statements":[{"expression":{"expression":{"arguments":[{"id":878,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1281:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":876,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1254:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1266:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"1254:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2036_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"1254:54:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":875,"id":881,"nodeType":"Return","src":"1247:61:8"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"1103:67:8","text":" @dev Returns the current implementation address."},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1184:18:8","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"1202:2:8"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"1228:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:8"},"scope":1157,"src":"1175:140:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"1469:196:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":892,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1506:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":890,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"1487:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:10:8","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"1487:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1526:47:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"1479:95:8"},{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":900,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1611:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":897,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1584:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1596:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"1584:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2036_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1633:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"1584:54:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":903,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1641:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:74:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":905,"nodeType":"ExpressionStatement","src":"1584:74:8"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"1321:80:8","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":907,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1415:18:8","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"newImplementation","nameLocation":"1442:17:8","nodeType":"VariableDeclaration","scope":907,"src":"1434:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1433:27:8"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"1469:0:8"},"scope":1157,"src":"1406:259:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":921,"nodeType":"Block","src":"1827:96:8","statements":[{"expression":{"arguments":[{"id":914,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1856:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1837:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"1837:37:8"},{"eventCall":{"arguments":[{"id":918,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1898:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":917,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1889:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"EmitStatement","src":"1884:32:8"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"1671:95:8","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":922,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1780:10:8","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"newImplementation","nameLocation":"1799:17:8","nodeType":"VariableDeclaration","scope":922,"src":"1791:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1790:27:8"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"1827:0:8"},"scope":1157,"src":"1771:152:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"2155:167:8","statements":[{"expression":{"arguments":[{"id":933,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2176:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":932,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2165:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"2165:29:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":936,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2208:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:6:8","memberName":"length","nodeType":"MemberAccess","src":"2208:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":940,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"2227:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":950,"nodeType":"IfStatement","src":"2204:112:8","trueBody":{"id":949,"nodeType":"Block","src":"2238:78:8","statements":[{"expression":{"arguments":[{"id":945,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2281:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2300:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":942,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2252:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1895,"src":"2252:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":948,"nodeType":"ExpressionStatement","src":"2252:53:8"}]}}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"1929:123:8","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2066:17:8","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"newImplementation","nameLocation":"2092:17:8","nodeType":"VariableDeclaration","scope":952,"src":"2084:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"data","nameLocation":"2124:4:8","nodeType":"VariableDeclaration","scope":952,"src":"2111:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":926,"name":"bytes","nodeType":"ElementaryTypeName","src":"2111:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"forceCall","nameLocation":"2135:9:8","nodeType":"VariableDeclaration","scope":952,"src":"2130:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":928,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:62:8"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[],"src":"2155:0:8"},"scope":1157,"src":"2057:265:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"2596:820:8","statements":[{"condition":{"expression":{"arguments":[{"id":964,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2937:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":962,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2910:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:14:8","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2073,"src":"2910:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2039_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2039_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2953:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"2910:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1002,"nodeType":"Block","src":"3028:382:8","statements":[{"clauses":[{"block":{"id":987,"nodeType":"Block","src":"3122:115:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":981,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"3148:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":982,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3156:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"ExpressionStatement","src":"3140:82:8"}]},"errorName":"","id":988,"nodeType":"TryCatchClause","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"slot","nameLocation":"3116:4:8","nodeType":"VariableDeclaration","scope":988,"src":"3108:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:14:8"},"src":"3099:138:8"},{"block":{"id":993,"nodeType":"Block","src":"3244:89:8","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3269:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":989,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3262:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"ExpressionStatement","src":"3262:56:8"}]},"errorName":"","id":994,"nodeType":"TryCatchClause","src":"3238:95:8"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":973,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3064:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":972,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3046:17:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$816_$","typeString":"type(contract IERC1822Proxiable)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$816","typeString":"contract IERC1822Proxiable"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:13:8","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":815,"src":"3046:50:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:52:8","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":995,"nodeType":"TryStatement","src":"3042:291:8"},{"expression":{"arguments":[{"id":997,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3364:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3383:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":999,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"3389:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":996,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3346:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"3346:53:8"}]},"id":1003,"nodeType":"IfStatement","src":"2906:504:8","trueBody":{"id":971,"nodeType":"Block","src":"2960:62:8","statements":[{"expression":{"arguments":[{"id":968,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2993:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":967,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"2974:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"2974:37:8"}]}}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"2328:161:8","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2503:21:8","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"newImplementation","nameLocation":"2533:17:8","nodeType":"VariableDeclaration","scope":1005,"src":"2525:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"data","nameLocation":"2565:4:8","nodeType":"VariableDeclaration","scope":1005,"src":"2552:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":956,"name":"bytes","nodeType":"ElementaryTypeName","src":"2552:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"forceCall","nameLocation":"2576:9:8","nodeType":"VariableDeclaration","scope":1005,"src":"2571:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":958,"name":"bool","nodeType":"ElementaryTypeName","src":"2571:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2524:62:8"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"2596:0:8"},"scope":1157,"src":"2494:922:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"3422:189:8","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":1009,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3642:11:8","nodeType":"VariableDeclaration","scope":1157,"src":"3616:106:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:66:8","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1021,"nodeType":"Block","src":"3837:69:8","statements":[{"expression":{"expression":{"arguments":[{"id":1017,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3881:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1015,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3854:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"3854:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2036_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3894:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"3854:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1014,"id":1020,"nodeType":"Return","src":"3847:52:8"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"3729:50:8","text":" @dev Returns the current admin."},"id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3793:9:8","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"3802:2:8"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"3828:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"3828:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3827:9:8"},"scope":1157,"src":"3784:122:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"4033:156:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"4051:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:8","typeDescriptions":{}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4051:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4075:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":1028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"4043:73:8"},{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1041,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4153:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1038,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4126:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4138:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"4126:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2036_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4166:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"4126:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1044,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"4174:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:56:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1046,"nodeType":"ExpressionStatement","src":"4126:56:8"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"3912:71:8","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3997:9:8","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"newAdmin","nameLocation":"4015:8:8","nodeType":"VariableDeclaration","scope":1048,"src":"4007:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:18:8"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"4033:0:8"},"scope":1157,"src":"3988:201:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1064,"nodeType":"Block","src":"4349:86:8","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1055,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4377:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4390:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"4364:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"EmitStatement","src":"4359:40:8"},{"expression":{"arguments":[{"id":1061,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4419:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"4409:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"4409:19:8"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"4195:100:8","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4309:12:8","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"newAdmin","nameLocation":"4330:8:8","nodeType":"VariableDeclaration","scope":1065,"src":"4322:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4321:18:8"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"4349:0:8"},"scope":1157,"src":"4300:135:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"4441:232:8","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":1069,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4704:12:8","nodeType":"VariableDeclaration","scope":1157,"src":"4678:107:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4678:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4719:66:8","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"4902:70:8","statements":[{"expression":{"expression":{"arguments":[{"id":1077,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"4946:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1075,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4919:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4931:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"4919:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2036_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4960:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"4919:46:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1074,"id":1080,"nodeType":"Return","src":"4912:53:8"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"4792:51:8","text":" @dev Returns the current beacon."},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4857:10:8","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"4867:2:8"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"4893:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4892:9:8"},"scope":1157,"src":"4848:124:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1117,"nodeType":"Block","src":"5101:324:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1091,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5138:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1089,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5119:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5127:10:8","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"5119:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":1088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5111:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5111:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"5111:79:8"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1100,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5248:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1099,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"5240:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1219_$","typeString":"type(contract IBeacon)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1219","typeString":"contract IBeacon"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5259:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"5240:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1097,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5221:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5229:10:8","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"5221:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5221:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:50:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":1096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:150:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"5200:150:8"},{"expression":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1111,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"5387:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1108,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"5360:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2140_$","typeString":"type(library StorageSlot)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5372:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"5360:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2036_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5401:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"5360:46:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1114,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5409:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:58:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1116,"nodeType":"ExpressionStatement","src":"5360:58:8"}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"4978:71:8","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5063:10:8","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"newBeacon","nameLocation":"5082:9:8","nodeType":"VariableDeclaration","scope":1118,"src":"5074:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5073:19:8"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"5101:0:8"},"scope":1157,"src":"5054:371:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1155,"nodeType":"Block","src":"5824:217:8","statements":[{"expression":{"arguments":[{"id":1129,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5845:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1128,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5834:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"5834:21:8"},{"eventCall":{"arguments":[{"id":1133,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5885:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1132,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5870:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"EmitStatement","src":"5865:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1136,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5909:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5914:6:8","memberName":"length","nodeType":"MemberAccess","src":"5909:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5923:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1140,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"5928:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"nodeType":"IfStatement","src":"5905:130:8","trueBody":{"id":1153,"nodeType":"Block","src":"5939:96:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1146,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5990:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1145,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"5982:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1219_$","typeString":"type(contract IBeacon)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1219","typeString":"contract IBeacon"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"5982:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6019:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1142,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5953:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5961:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1895,"src":"5953:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1152,"nodeType":"ExpressionStatement","src":"5953:71:8"}]}}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"5431:292:8","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5737:23:8","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"newBeacon","nameLocation":"5769:9:8","nodeType":"VariableDeclaration","scope":1156,"src":"5761:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"data","nameLocation":"5793:4:8","nodeType":"VariableDeclaration","scope":1156,"src":"5780:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"forceCall","nameLocation":"5804:9:8","nodeType":"VariableDeclaration","scope":1156,"src":"5799:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1124,"name":"bool","nodeType":"ElementaryTypeName","src":"5799:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5760:54:8"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"5824:0:8"},"scope":1157,"src":"5728:313:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1158,"src":"517:5526:8","usedErrors":[],"usedEvents":[793,800,805]}],"src":"116:5928:8"},"id":8},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[1209]},"id":1210,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1159,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"124:598:9","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":1209,"linearizedBaseContracts":[1209],"name":"Proxy","nameLocation":"741:5:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1167,"nodeType":"Block","src":"1008:835:9","statements":[{"AST":{"nativeSrc":"1027:810:9","nodeType":"YulBlock","src":"1027:810:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1280:1:9","nodeType":"YulLiteral","src":"1280:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1283:1:9","nodeType":"YulLiteral","src":"1283:1:9","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1286:12:9","nodeType":"YulIdentifier","src":"1286:12:9"},"nativeSrc":"1286:14:9","nodeType":"YulFunctionCall","src":"1286:14:9"}],"functionName":{"name":"calldatacopy","nativeSrc":"1267:12:9","nodeType":"YulIdentifier","src":"1267:12:9"},"nativeSrc":"1267:34:9","nodeType":"YulFunctionCall","src":"1267:34:9"},"nativeSrc":"1267:34:9","nodeType":"YulExpressionStatement","src":"1267:34:9"},{"nativeSrc":"1428:74:9","nodeType":"YulVariableDeclaration","src":"1428:74:9","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1455:3:9","nodeType":"YulIdentifier","src":"1455:3:9"},"nativeSrc":"1455:5:9","nodeType":"YulFunctionCall","src":"1455:5:9"},{"name":"implementation","nativeSrc":"1462:14:9","nodeType":"YulIdentifier","src":"1462:14:9"},{"kind":"number","nativeSrc":"1478:1:9","nodeType":"YulLiteral","src":"1478:1:9","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1481:12:9","nodeType":"YulIdentifier","src":"1481:12:9"},"nativeSrc":"1481:14:9","nodeType":"YulFunctionCall","src":"1481:14:9"},{"kind":"number","nativeSrc":"1497:1:9","nodeType":"YulLiteral","src":"1497:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1500:1:9","nodeType":"YulLiteral","src":"1500:1:9","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1442:12:9","nodeType":"YulIdentifier","src":"1442:12:9"},"nativeSrc":"1442:60:9","nodeType":"YulFunctionCall","src":"1442:60:9"},"variables":[{"name":"result","nativeSrc":"1432:6:9","nodeType":"YulTypedName","src":"1432:6:9","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1570:1:9","nodeType":"YulLiteral","src":"1570:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1573:1:9","nodeType":"YulLiteral","src":"1573:1:9","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1576:14:9","nodeType":"YulIdentifier","src":"1576:14:9"},"nativeSrc":"1576:16:9","nodeType":"YulFunctionCall","src":"1576:16:9"}],"functionName":{"name":"returndatacopy","nativeSrc":"1555:14:9","nodeType":"YulIdentifier","src":"1555:14:9"},"nativeSrc":"1555:38:9","nodeType":"YulFunctionCall","src":"1555:38:9"},"nativeSrc":"1555:38:9","nodeType":"YulExpressionStatement","src":"1555:38:9"},{"cases":[{"body":{"nativeSrc":"1688:59:9","nodeType":"YulBlock","src":"1688:59:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1713:1:9","nodeType":"YulLiteral","src":"1713:1:9","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1716:14:9","nodeType":"YulIdentifier","src":"1716:14:9"},"nativeSrc":"1716:16:9","nodeType":"YulFunctionCall","src":"1716:16:9"}],"functionName":{"name":"revert","nativeSrc":"1706:6:9","nodeType":"YulIdentifier","src":"1706:6:9"},"nativeSrc":"1706:27:9","nodeType":"YulFunctionCall","src":"1706:27:9"},"nativeSrc":"1706:27:9","nodeType":"YulExpressionStatement","src":"1706:27:9"}]},"nativeSrc":"1681:66:9","nodeType":"YulCase","src":"1681:66:9","value":{"kind":"number","nativeSrc":"1686:1:9","nodeType":"YulLiteral","src":"1686:1:9","type":"","value":"0"}},{"body":{"nativeSrc":"1768:59:9","nodeType":"YulBlock","src":"1768:59:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1793:1:9","nodeType":"YulLiteral","src":"1793:1:9","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1796:14:9","nodeType":"YulIdentifier","src":"1796:14:9"},"nativeSrc":"1796:16:9","nodeType":"YulFunctionCall","src":"1796:16:9"}],"functionName":{"name":"return","nativeSrc":"1786:6:9","nodeType":"YulIdentifier","src":"1786:6:9"},"nativeSrc":"1786:27:9","nodeType":"YulFunctionCall","src":"1786:27:9"},"nativeSrc":"1786:27:9","nodeType":"YulExpressionStatement","src":"1786:27:9"}]},"nativeSrc":"1760:67:9","nodeType":"YulCase","src":"1760:67:9","value":"default"}],"expression":{"name":"result","nativeSrc":"1614:6:9","nodeType":"YulIdentifier","src":"1614:6:9"},"nativeSrc":"1607:220:9","nodeType":"YulSwitch","src":"1607:220:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1163,"isOffset":false,"isSlot":false,"src":"1462:14:9","valueSize":1}],"id":1166,"nodeType":"InlineAssembly","src":"1018:819:9"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"753:190:9","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:9","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"implementation","nameLocation":"975:14:9","nodeType":"VariableDeclaration","scope":1168,"src":"967:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:9"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"1008:0:9"},"scope":1209,"src":"948:895:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"1849:173:9","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":1174,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:9","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"2051:2:9"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1174,"src":"2085:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:9"},"scope":1209,"src":"2027:67:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"2360:72:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1178,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2370:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"2370:17:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1182,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2407:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1181,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2397:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"2397:28:9"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"2100:217:9","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:9","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"2340:2:9"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"2360:0:9"},"scope":1209,"src":"2322:110:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"2665:28:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1191,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2675:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"2675:11:9"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"2438:186:9","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":1195,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"2637:2:9"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2665:0:9"},"scope":1209,"src":"2629:64:9","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1202,"nodeType":"Block","src":"2888:28:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1199,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2898:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"2898:11:9"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"2699:149:9","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":1203,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"2860:2:9"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"2888:0:9"},"scope":1209,"src":"2853:63:9","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1207,"nodeType":"Block","src":"3242:2:9","statements":[]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"2922:271:9","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:9","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[],"src":"3222:2:9"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"3242:0:9"},"scope":1209,"src":"3198:46:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1210,"src":"723:2523:9","usedErrors":[],"usedEvents":[]}],"src":"99:3148:9"},"id":9},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1219]},"id":1220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1211,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"118:79:10","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1219,"linearizedBaseContracts":[1219],"name":"IBeacon","nameLocation":"208:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"222:162:10","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1218,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:10","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"412:2:10"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"438:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:10"},"scope":1219,"src":"389:58:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1220,"src":"198:251:10","usedErrors":[],"usedEvents":[]}],"src":"93:357:10"},"id":10},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","exportedSymbols":{"Address":[2008],"Context":[2030],"ERC1967Proxy":[853],"ERC1967Upgrade":[1157],"IBeacon":[1219],"IERC1822Proxiable":[816],"IERC1967":[806],"ITransparentUpgradeableProxy":[1389],"Ownable":[785],"Proxy":[1209],"ProxyAdmin":[1355],"StorageSlot":[2140],"TransparentUpgradeableProxy":[1678]},"id":1356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1221,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:11"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"./TransparentUpgradeableProxy.sol","id":1222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":1679,"src":"141:43:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":1223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":786,"src":"185:34:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1225,"name":"Ownable","nameLocations":["473:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"473:7:11"},"id":1226,"nodeType":"InheritanceSpecifier","src":"473:7:11"}],"canonicalName":"ProxyAdmin","contractDependencies":[],"contractKind":"contract","documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"221:228:11","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":1355,"linearizedBaseContracts":[1355,785,2030],"name":"ProxyAdmin","nameLocation":"459:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"756:332:11","statements":[{"assignments":[1236,1238],"declarations":[{"constant":false,"id":1236,"mutability":"mutable","name":"success","nameLocation":"929:7:11","nodeType":"VariableDeclaration","scope":1259,"src":"924:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1235,"name":"bool","nodeType":"ElementaryTypeName","src":"924:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"returndata","nameLocation":"951:10:11","nodeType":"VariableDeclaration","scope":1259,"src":"938:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1237,"name":"bytes","nodeType":"ElementaryTypeName","src":"938:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[{"hexValue":"5c60da1b","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"991:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}],"expression":{"arguments":[{"id":1241,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"973:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"965:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:11","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"965:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"980:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"965:25:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"965:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"923:82:11"},{"expression":{"arguments":[{"id":1248,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1023:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1015:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"1015:16:11"},{"expression":{"arguments":[{"id":1253,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"1059:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:11","typeDescriptions":{}}}],"id":1256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1071:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1251,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1048:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1052:6:11","memberName":"decode","nodeType":"MemberAccess","src":"1048:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1048:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":1234,"id":1258,"nodeType":"Return","src":"1041:40:11"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"487:158:11","text":" @dev Returns the current implementation of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"204e1c7a","id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyImplementation","nameLocation":"659:22:11","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"proxy","nameLocation":"711:5:11","nodeType":"VariableDeclaration","scope":1260,"src":"682:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":1229,"nodeType":"UserDefinedTypeName","pathNode":{"id":1228,"name":"ITransparentUpgradeableProxy","nameLocations":["682:28:11"],"nodeType":"IdentifierPath","referencedDeclaration":1389,"src":"682:28:11"},"referencedDeclaration":1389,"src":"682:28:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"681:36:11"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"747:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"746:9:11"},"scope":1355,"src":"650:438:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1293,"nodeType":"Block","src":"1345:323:11","statements":[{"assignments":[1270,1272],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"success","nameLocation":"1509:7:11","nodeType":"VariableDeclaration","scope":1293,"src":"1504:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1269,"name":"bool","nodeType":"ElementaryTypeName","src":"1504:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"returndata","nameLocation":"1531:10:11","nodeType":"VariableDeclaration","scope":1293,"src":"1518:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1271,"name":"bytes","nodeType":"ElementaryTypeName","src":"1518:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1280,"initialValue":{"arguments":[{"hexValue":"f851a440","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1571:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}],"expression":{"arguments":[{"id":1275,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1553:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}],"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1545:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:11","typeDescriptions":{}}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1560:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"1545:25:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1503:82:11"},{"expression":{"arguments":[{"id":1282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1603:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1595:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"1595:16:11"},{"expression":{"arguments":[{"id":1287,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1639:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1652:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:11","typeDescriptions":{}}}],"id":1290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1651:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1285,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1628:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1632:6:11","memberName":"decode","nodeType":"MemberAccess","src":"1628:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1628:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":1268,"id":1292,"nodeType":"Return","src":"1621:40:11"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"1094:149:11","text":" @dev Returns the current admin of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"f3b7dead","id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyAdmin","nameLocation":"1257:13:11","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"proxy","nameLocation":"1300:5:11","nodeType":"VariableDeclaration","scope":1294,"src":"1271:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":1263,"nodeType":"UserDefinedTypeName","pathNode":{"id":1262,"name":"ITransparentUpgradeableProxy","nameLocations":["1271:28:11"],"nodeType":"IdentifierPath","referencedDeclaration":1389,"src":"1271:28:11"},"referencedDeclaration":1389,"src":"1271:28:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"1270:36:11"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1294,"src":"1336:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1335:9:11"},"scope":1355,"src":"1248:420:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1311,"nodeType":"Block","src":"1947:44:11","statements":[{"expression":{"arguments":[{"id":1308,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1975:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1305,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"1957:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:11:11","memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"1957:17:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"1957:27:11"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"1674:163:11","text":" @dev Changes the admin of `proxy` to `newAdmin`.\n Requirements:\n - This contract must be the current admin of `proxy`."},"functionSelector":"7eff275e","id":1312,"implemented":true,"kind":"function","modifiers":[{"id":1303,"kind":"modifierInvocation","modifierName":{"id":1302,"name":"onlyOwner","nameLocations":["1937:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1937:9:11"},"nodeType":"ModifierInvocation","src":"1937:9:11"}],"name":"changeProxyAdmin","nameLocation":"1851:16:11","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"proxy","nameLocation":"1897:5:11","nodeType":"VariableDeclaration","scope":1312,"src":"1868:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":1297,"nodeType":"UserDefinedTypeName","pathNode":{"id":1296,"name":"ITransparentUpgradeableProxy","nameLocations":["1868:28:11"],"nodeType":"IdentifierPath","referencedDeclaration":1389,"src":"1868:28:11"},"referencedDeclaration":1389,"src":"1868:28:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"newAdmin","nameLocation":"1912:8:11","nodeType":"VariableDeclaration","scope":1312,"src":"1904:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"1904:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1867:54:11"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"1947:0:11"},"scope":1355,"src":"1842:149:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1329,"nodeType":"Block","src":"2298:48:11","statements":[{"expression":{"arguments":[{"id":1326,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"2324:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1323,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"2308:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2314:9:11","memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":1381,"src":"2308:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"ExpressionStatement","src":"2308:31:11"}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"1997:194:11","text":" @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"99a88ec4","id":1330,"implemented":true,"kind":"function","modifiers":[{"id":1321,"kind":"modifierInvocation","modifierName":{"id":1320,"name":"onlyOwner","nameLocations":["2288:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"2288:9:11"},"nodeType":"ModifierInvocation","src":"2288:9:11"}],"name":"upgrade","nameLocation":"2205:7:11","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"proxy","nameLocation":"2242:5:11","nodeType":"VariableDeclaration","scope":1330,"src":"2213:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":1315,"nodeType":"UserDefinedTypeName","pathNode":{"id":1314,"name":"ITransparentUpgradeableProxy","nameLocations":["2213:28:11"],"nodeType":"IdentifierPath","referencedDeclaration":1389,"src":"2213:28:11"},"referencedDeclaration":1389,"src":"2213:28:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"implementation","nameLocation":"2257:14:11","nodeType":"VariableDeclaration","scope":1330,"src":"2249:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2212:60:11"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"2298:0:11"},"scope":1355,"src":"2196:150:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1353,"nodeType":"Block","src":"2778:79:11","statements":[{"expression":{"arguments":[{"id":1349,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"2829:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2845:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1343,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2788:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2794:16:11","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"2788:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) payable external"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2818:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2822:5:11","memberName":"value","nodeType":"MemberAccess","src":"2818:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2788:40:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (address,bytes memory) payable external"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"2788:62:11"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"2352:255:11","text":" @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n {TransparentUpgradeableProxy-upgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"9623609d","id":1354,"implemented":true,"kind":"function","modifiers":[{"id":1341,"kind":"modifierInvocation","modifierName":{"id":1340,"name":"onlyOwner","nameLocations":["2768:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"2768:9:11"},"nodeType":"ModifierInvocation","src":"2768:9:11"}],"name":"upgradeAndCall","nameLocation":"2621:14:11","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"proxy","nameLocation":"2674:5:11","nodeType":"VariableDeclaration","scope":1354,"src":"2645:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":1333,"nodeType":"UserDefinedTypeName","pathNode":{"id":1332,"name":"ITransparentUpgradeableProxy","nameLocations":["2645:28:11"],"nodeType":"IdentifierPath","referencedDeclaration":1389,"src":"2645:28:11"},"referencedDeclaration":1389,"src":"2645:28:11","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$1389","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"implementation","nameLocation":"2697:14:11","nodeType":"VariableDeclaration","scope":1354,"src":"2689:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"data","nameLocation":"2734:4:11","nodeType":"VariableDeclaration","scope":1354,"src":"2721:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"2721:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2635:109:11"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"2778:0:11"},"scope":1355,"src":"2612:245:11","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":1356,"src":"450:2409:11","usedErrors":[],"usedEvents":[686]}],"src":"116:2744:11"},"id":11},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","exportedSymbols":{"Address":[2008],"ERC1967Proxy":[853],"ERC1967Upgrade":[1157],"IBeacon":[1219],"IERC1822Proxiable":[816],"IERC1967":[806],"ITransparentUpgradeableProxy":[1389],"Proxy":[1209],"StorageSlot":[2140],"TransparentUpgradeableProxy":[1678]},"id":1679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1357,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"133:23:12"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"../ERC1967/ERC1967Proxy.sol","id":1358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1679,"sourceUnit":854,"src":"158:37:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1360,"name":"IERC1967","nameLocations":["679:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":806,"src":"679:8:12"},"id":1361,"nodeType":"InheritanceSpecifier","src":"679:8:12"}],"canonicalName":"ITransparentUpgradeableProxy","contractDependencies":[],"contractKind":"interface","documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"197:439:12","text":" @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."},"fullyImplemented":false,"id":1389,"linearizedBaseContracts":[1389,806],"name":"ITransparentUpgradeableProxy","nameLocation":"647:28:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f851a440","id":1366,"implemented":false,"kind":"function","modifiers":[],"name":"admin","nameLocation":"703:5:12","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"708:2:12"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"734:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:12"},"scope":1389,"src":"694:49:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5c60da1b","id":1371,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"758:14:12","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"772:2:12"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1371,"src":"798:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"797:9:12"},"scope":1389,"src":"749:58:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8f283970","id":1376,"implemented":false,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"822:11:12","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"834:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"833:9:12"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[],"src":"851:0:12"},"scope":1389,"src":"813:39:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3659cfe6","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeTo","nameLocation":"867:9:12","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"877:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:9:12"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"894:0:12"},"scope":1389,"src":"858:37:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4f1ef286","id":1388,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"910:16:12","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"927:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"936:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1384,"name":"bytes","nodeType":"ElementaryTypeName","src":"936:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"926:23:12"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"966:0:12"},"scope":1389,"src":"901:66:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1679,"src":"637:332:12","usedErrors":[],"usedEvents":[793,800,805]},{"abstract":false,"baseContracts":[{"baseName":{"id":1391,"name":"ERC1967Proxy","nameLocations":["3429:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"3429:12:12"},"id":1392,"nodeType":"InheritanceSpecifier","src":"3429:12:12"}],"canonicalName":"TransparentUpgradeableProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"971:2417:12","text":" @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised."},"fullyImplemented":true,"id":1678,"linearizedBaseContracts":[1678,853,1157,806,1209],"name":"TransparentUpgradeableProxy","nameLocation":"3398:27:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1410,"nodeType":"Block","src":"3763:37:12","statements":[{"expression":{"arguments":[{"id":1407,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3786:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1406,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3773:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"3773:20:12"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"3448:210:12","text":" @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."},"id":1411,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1402,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"3748:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"3756:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1404,"kind":"baseConstructorSpecifier","modifierName":{"id":1401,"name":"ERC1967Proxy","nameLocations":["3735:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"3735:12:12"},"nodeType":"ModifierInvocation","src":"3735:27:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"_logic","nameLocation":"3683:6:12","nodeType":"VariableDeclaration","scope":1411,"src":"3675:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"admin_","nameLocation":"3699:6:12","nodeType":"VariableDeclaration","scope":1411,"src":"3691:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"_data","nameLocation":"3720:5:12","nodeType":"VariableDeclaration","scope":1411,"src":"3707:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1398,"name":"bytes","nodeType":"ElementaryTypeName","src":"3707:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3674:52:12"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"3763:0:12"},"scope":1678,"src":"3663:137:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1426,"nodeType":"Block","src":"4151:115:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4165:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4169:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4165:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1416,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4179:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4179:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4165:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1424,"nodeType":"Block","src":"4224:36:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1421,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[1520],"referencedDeclaration":1520,"src":"4238:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"4238:11:12"}]},"id":1425,"nodeType":"IfStatement","src":"4161:99:12","trueBody":{"id":1420,"nodeType":"Block","src":"4192:26:12","statements":[{"id":1419,"nodeType":"PlaceholderStatement","src":"4206:1:12"}]}}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"3806:321:12","text":" @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n implementation provides a function with the same selector."},"id":1427,"name":"ifAdmin","nameLocation":"4141:7:12","nodeType":"ModifierDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"4148:2:12"},"src":"4132:134:12","virtual":false,"visibility":"internal"},{"baseFunctions":[1187],"body":{"id":1519,"nodeType":"Block","src":"4454:1055:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4468:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4472:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4468:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4482:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4482:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4468:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1517,"nodeType":"Block","src":"5461:42:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1512,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5475:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransparentUpgradeableProxy_$1678_$","typeString":"type(contract super TransparentUpgradeableProxy)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5481:9:12","memberName":"_fallback","nodeType":"MemberAccess","referencedDeclaration":1187,"src":"5475:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5475:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"5475:17:12"}]},"id":1518,"nodeType":"IfStatement","src":"4464:1039:12","trueBody":{"id":1511,"nodeType":"Block","src":"4495:960:12","statements":[{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"ret","nameLocation":"4522:3:12","nodeType":"VariableDeclaration","scope":1511,"src":"4509:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"4509:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1439,"nodeType":"VariableDeclarationStatement","src":"4509:16:12"},{"assignments":[1441],"declarations":[{"constant":false,"id":1441,"mutability":"mutable","name":"selector","nameLocation":"4546:8:12","nodeType":"VariableDeclaration","scope":1511,"src":"4539:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1440,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4539:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":1444,"initialValue":{"expression":{"id":1442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4557:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4561:3:12","memberName":"sig","nodeType":"MemberAccess","src":"4557:7:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4539:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4582:8:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1446,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4594:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$1389_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:9:12","memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":1381,"src":"4594:38:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeTo(address)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4633:8:12","memberName":"selector","nodeType":"MemberAccess","src":"4594:47:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4582:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4712:8:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1457,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4724:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$1389_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4753:16:12","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"4724:45:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes memory) payable"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4770:8:12","memberName":"selector","nodeType":"MemberAccess","src":"4724:54:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4712:66:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4856:8:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1468,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4868:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$1389_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4897:11:12","memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"4868:40:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function ITransparentUpgradeableProxy.changeAdmin(address)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4909:8:12","memberName":"selector","nodeType":"MemberAccess","src":"4868:49:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4856:61:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4990:8:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1479,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"5002:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$1389_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5031:5:12","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"5002:34:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_address_$","typeString":"function ITransparentUpgradeableProxy.admin() view returns (address)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5037:8:12","memberName":"selector","nodeType":"MemberAccess","src":"5002:43:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4990:55:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"5112:8:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1490,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"5124:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$1389_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5153:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"5124:43:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_address_$","typeString":"function ITransparentUpgradeableProxy.implementation() view returns (address)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5168:8:12","memberName":"selector","nodeType":"MemberAccess","src":"5124:52:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5112:64:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1504,"nodeType":"Block","src":"5248:109:12","statements":[{"expression":{"arguments":[{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5273:68:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""},"value":"TransparentUpgradeableProxy: admin cannot fallback to proxy target"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""}],"id":1500,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5266:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5266:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1503,"nodeType":"ExpressionStatement","src":"5266:76:12"}]},"id":1505,"nodeType":"IfStatement","src":"5108:249:12","trueBody":{"id":1499,"nodeType":"Block","src":"5178:64:12","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1494,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"5196:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1495,"name":"_dispatchImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"5202:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5202:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5196:31:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1498,"nodeType":"ExpressionStatement","src":"5196:31:12"}]}},"id":1506,"nodeType":"IfStatement","src":"4986:371:12","trueBody":{"id":1488,"nodeType":"Block","src":"5047:55:12","statements":[{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1483,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"5065:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1484,"name":"_dispatchAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5071:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5071:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5065:22:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1487,"nodeType":"ExpressionStatement","src":"5065:22:12"}]}},"id":1507,"nodeType":"IfStatement","src":"4852:505:12","trueBody":{"id":1477,"nodeType":"Block","src":"4919:61:12","statements":[{"expression":{"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1472,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4937:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1473,"name":"_dispatchChangeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"4943:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4937:28:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1476,"nodeType":"ExpressionStatement","src":"4937:28:12"}]}},"id":1508,"nodeType":"IfStatement","src":"4708:649:12","trueBody":{"id":1466,"nodeType":"Block","src":"4780:66:12","statements":[{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4798:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1462,"name":"_dispatchUpgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"4804:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4804:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4798:33:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1465,"nodeType":"ExpressionStatement","src":"4798:33:12"}]}},"id":1509,"nodeType":"IfStatement","src":"4578:779:12","trueBody":{"id":1455,"nodeType":"Block","src":"4643:59:12","statements":[{"expression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4661:3:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1451,"name":"_dispatchUpgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4667:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4661:26:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1454,"nodeType":"ExpressionStatement","src":"4661:26:12"}]}},{"AST":{"nativeSrc":"5379:66:12","nodeType":"YulBlock","src":"5379:66:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"ret","nativeSrc":"5408:3:12","nodeType":"YulIdentifier","src":"5408:3:12"},{"kind":"number","nativeSrc":"5413:4:12","nodeType":"YulLiteral","src":"5413:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5404:3:12","nodeType":"YulIdentifier","src":"5404:3:12"},"nativeSrc":"5404:14:12","nodeType":"YulFunctionCall","src":"5404:14:12"},{"arguments":[{"name":"ret","nativeSrc":"5426:3:12","nodeType":"YulIdentifier","src":"5426:3:12"}],"functionName":{"name":"mload","nativeSrc":"5420:5:12","nodeType":"YulIdentifier","src":"5420:5:12"},"nativeSrc":"5420:10:12","nodeType":"YulFunctionCall","src":"5420:10:12"}],"functionName":{"name":"return","nativeSrc":"5397:6:12","nodeType":"YulIdentifier","src":"5397:6:12"},"nativeSrc":"5397:34:12","nodeType":"YulFunctionCall","src":"5397:34:12"},"nativeSrc":"5397:34:12","nodeType":"YulExpressionStatement","src":"5397:34:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1438,"isOffset":false,"isSlot":false,"src":"5408:3:12","valueSize":1},{"declaration":1438,"isOffset":false,"isSlot":false,"src":"5426:3:12","valueSize":1}],"id":1510,"nodeType":"InlineAssembly","src":"5370:75:12"}]}}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"4272:130:12","text":" @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior"},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"4416:9:12","nodeType":"FunctionDefinition","overrides":{"id":1430,"nodeType":"OverrideSpecifier","overrides":[],"src":"4445:8:12"},"parameters":{"id":1429,"nodeType":"ParameterList","parameters":[],"src":"4425:2:12"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"4454:0:12"},"scope":1678,"src":"4407:1102:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"5917:108:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1526,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"5927:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5927:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"ExpressionStatement","src":"5927:19:12"},{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"admin","nameLocation":"5965:5:12","nodeType":"VariableDeclaration","scope":1539,"src":"5957:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"5957:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1533,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1531,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5973:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5957:27:12"},{"expression":{"arguments":[{"id":1536,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"6012:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1534,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6001:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6005:6:12","memberName":"encode","nodeType":"MemberAccess","src":"6001:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6001:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1525,"id":1538,"nodeType":"Return","src":"5994:24:12"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"5515:340:12","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchAdmin","nameLocation":"5869:14:12","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[],"src":"5883:2:12"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"5903:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1523,"name":"bytes","nodeType":"ElementaryTypeName","src":"5903:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5902:14:12"},"scope":1678,"src":"5860:165:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1559,"nodeType":"Block","src":"6451:132:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1546,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"6461:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6461:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"6461:19:12"},{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"implementation","nameLocation":"6499:14:12","nodeType":"VariableDeclaration","scope":1559,"src":"6491:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"6491:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1553,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1551,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[852],"referencedDeclaration":852,"src":"6516:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6491:42:12"},{"expression":{"arguments":[{"id":1556,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"6561:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1554,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6550:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6554:6:12","memberName":"encode","nodeType":"MemberAccess","src":"6550:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1545,"id":1558,"nodeType":"Return","src":"6543:33:12"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"6031:349:12","text":" @dev Returns the current implementation.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":1560,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchImplementation","nameLocation":"6394:23:12","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"6417:2:12"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1560,"src":"6437:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1543,"name":"bytes","nodeType":"ElementaryTypeName","src":"6437:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6436:14:12"},"scope":1678,"src":"6385:198:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1588,"nodeType":"Block","src":"6757:153:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1566,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"6767:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6767:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"6767:19:12"},{"assignments":[1570],"declarations":[{"constant":false,"id":1570,"mutability":"mutable","name":"newAdmin","nameLocation":"6805:8:12","nodeType":"VariableDeclaration","scope":1588,"src":"6797:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"6797:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1581,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6827:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6831:4:12","memberName":"data","nodeType":"MemberAccess","src":"6827:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6827:12:12","startExpression":{"hexValue":"34","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6836:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6842:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"6842:7:12","typeDescriptions":{}}}],"id":1579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6841:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1571,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6816:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6820:6:12","memberName":"decode","nodeType":"MemberAccess","src":"6816:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6816:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"6797:54:12"},{"expression":{"arguments":[{"id":1583,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6874:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1582,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6861:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"6861:22:12"},{"expression":{"hexValue":"","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6901:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1565,"id":1587,"nodeType":"Return","src":"6894:9:12"}]},"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"6589:100:12","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchChangeAdmin","nameLocation":"6703:20:12","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"6723:2:12"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1589,"src":"6743:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"6743:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6742:14:12"},"scope":1678,"src":"6694:216:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1622,"nodeType":"Block","src":"7046:194:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1595,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"7056:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7056:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"ExpressionStatement","src":"7056:19:12"},{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"newImplementation","nameLocation":"7094:17:12","nodeType":"VariableDeclaration","scope":1622,"src":"7086:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"7086:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1610,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1602,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7125:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7129:4:12","memberName":"data","nodeType":"MemberAccess","src":"7125:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"7125:12:12","startExpression":{"hexValue":"34","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7134:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7140:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"7140:7:12","typeDescriptions":{}}}],"id":1608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7139:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1600,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7114:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7118:6:12","memberName":"decode","nodeType":"MemberAccess","src":"7114:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7114:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"7086:63:12"},{"expression":{"arguments":[{"id":1612,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"7177:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7202:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7196:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1613,"name":"bytes","nodeType":"ElementaryTypeName","src":"7196:5:12","typeDescriptions":{}}},"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7207:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1611,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"7159:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7159:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1619,"nodeType":"ExpressionStatement","src":"7159:54:12"},{"expression":{"hexValue":"","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7231:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1594,"id":1621,"nodeType":"Return","src":"7224:9:12"}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"6916:64:12","text":" @dev Upgrade the implementation of the proxy."},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeTo","nameLocation":"6994:18:12","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"7012:2:12"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1623,"src":"7032:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1592,"name":"bytes","nodeType":"ElementaryTypeName","src":"7032:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7031:14:12"},"scope":1678,"src":"6985:255:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1654,"nodeType":"Block","src":"7592:186:12","statements":[{"assignments":[1630,1632],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"newImplementation","nameLocation":"7611:17:12","nodeType":"VariableDeclaration","scope":1654,"src":"7603:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"7603:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"data","nameLocation":"7643:4:12","nodeType":"VariableDeclaration","scope":1654,"src":"7630:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1631,"name":"bytes","nodeType":"ElementaryTypeName","src":"7630:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1645,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1635,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7662:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7666:4:12","memberName":"data","nodeType":"MemberAccess","src":"7662:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"7662:12:12","startExpression":{"hexValue":"34","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7671:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7677:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"7677:7:12","typeDescriptions":{}}},{"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7686:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"7686:5:12","typeDescriptions":{}}}],"id":1643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7676:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}],"expression":{"id":1633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7651:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7655:6:12","memberName":"decode","nodeType":"MemberAccess","src":"7651:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7651:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7602:91:12"},{"expression":{"arguments":[{"id":1647,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"7721:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1648,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"7740:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7746:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1646,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"7703:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7703:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"7703:48:12"},{"expression":{"hexValue":"","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7769:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1628,"id":1653,"nodeType":"Return","src":"7762:9:12"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"7246:273:12","text":" @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract."},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeToAndCall","nameLocation":"7533:25:12","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"7558:2:12"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"7578:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"7578:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7577:14:12"},"scope":1678,"src":"7524:254:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1664,"nodeType":"Block","src":"7989:35:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1661,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8006:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1660,"id":1663,"nodeType":"Return","src":"7999:18:12"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"7784:142:12","text":" @dev Returns the current admin.\n CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_admin","nameLocation":"7940:6:12","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"7946:2:12"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"7980:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7979:9:12"},"scope":1678,"src":"7931:93:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1676,"nodeType":"Block","src":"8298:40:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1670,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8316:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8320:5:12","memberName":"value","nodeType":"MemberAccess","src":"8316:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8329:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8316:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8308:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"8308:23:12"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"8030:226:12","text":" @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n emulate some proxy functions being non-payable while still allowing value to pass through."},"id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"_requireZeroValue","nameLocation":"8270:17:12","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"8287:2:12"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"8298:0:12"},"scope":1678,"src":"8261:77:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1679,"src":"3389:4951:12","usedErrors":[],"usedEvents":[793,800,805]}],"src":"133:8208:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1680,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"202:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1695,"nodeType":"Block","src":"1478:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1689,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1702:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:13","memberName":"code","nodeType":"MemberAccess","src":"1702:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:13","memberName":"length","nodeType":"MemberAccess","src":"1702:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1688,"id":1694,"nodeType":"Return","src":"1695:30:13"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"216:1191:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:13","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"account","nameLocation":"1440:7:13","nodeType":"VariableDeclaration","scope":1696,"src":"1432:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:13"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1472:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1686,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:13"},"scope":2008,"src":"1412:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"2718:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:13","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:13","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2761:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1714,"nodeType":"ExpressionStatement","src":"2728:73:13"},{"assignments":[1716,null],"declarations":[{"constant":false,"id":1716,"mutability":"mutable","name":"success","nameLocation":"2818:7:13","nodeType":"VariableDeclaration","scope":1729,"src":"2813:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1715,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1723,"initialValue":{"arguments":[{"hexValue":"","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1717,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2831:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:13","memberName":"call","nodeType":"MemberAccess","src":"2831:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1719,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2853:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:13"},{"expression":{"arguments":[{"id":1725,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2882:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"2874:78:13"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1738:904:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:13","nodeType":"VariableDeclaration","scope":1730,"src":"2666:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"amount","nameLocation":"2701:6:13","nodeType":"VariableDeclaration","scope":1730,"src":"2693:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:13"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"2718:0:13"},"scope":2008,"src":"2647:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"3790:96:13","statements":[{"expression":{"arguments":[{"id":1741,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3829:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1742,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3837:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1740,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1788,1832],"referencedDeclaration":1832,"src":"3807:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1739,"id":1746,"nodeType":"Return","src":"3800:79:13"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"2965:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:13","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"target","nameLocation":"3731:6:13","nodeType":"VariableDeclaration","scope":1748,"src":"3723:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"data","nameLocation":"3752:4:13","nodeType":"VariableDeclaration","scope":1748,"src":"3739:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1734,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:13"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"3776:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1737,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:13"},"scope":2008,"src":"3701:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1767,"nodeType":"Block","src":"4255:76:13","statements":[{"expression":{"arguments":[{"id":1761,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4294:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1762,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4302:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1764,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4311:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1760,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1788,1832],"referencedDeclaration":1832,"src":"4272:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1759,"id":1766,"nodeType":"Return","src":"4265:59:13"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"3892:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:13","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"target","nameLocation":"4147:6:13","nodeType":"VariableDeclaration","scope":1768,"src":"4139:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"data","nameLocation":"4176:4:13","nodeType":"VariableDeclaration","scope":1768,"src":"4163:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1752,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:13","nodeType":"VariableDeclaration","scope":1768,"src":"4190:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:13"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"4241:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1757,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:13"},"scope":2008,"src":"4108:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"4806:111:13","statements":[{"expression":{"arguments":[{"id":1781,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"4845:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1782,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4853:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4859:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1780,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1788,1832],"referencedDeclaration":1832,"src":"4823:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1779,"id":1786,"nodeType":"Return","src":"4816:94:13"}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"4337:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:13","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"target","nameLocation":"4732:6:13","nodeType":"VariableDeclaration","scope":1788,"src":"4724:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"data","nameLocation":"4753:4:13","nodeType":"VariableDeclaration","scope":1788,"src":"4740:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1772,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"value","nameLocation":"4767:5:13","nodeType":"VariableDeclaration","scope":1788,"src":"4759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:13"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"4792:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:13"},"scope":2008,"src":"4693:224:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1831,"nodeType":"Block","src":"5344:267:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1805,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:13","typeDescriptions":{}}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:13","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"5387:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"5354:81:13"},{"assignments":[1814,1816],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"success","nameLocation":"5451:7:13","nodeType":"VariableDeclaration","scope":1831,"src":"5446:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1813,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:13","nodeType":"VariableDeclaration","scope":1831,"src":"5460:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1815,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1823,"initialValue":{"arguments":[{"id":1821,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5513:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1817,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"5487:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:13","memberName":"call","nodeType":"MemberAccess","src":"5487:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"5506:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:13"},{"expression":{"arguments":[{"id":1825,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"5562:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1826,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5570:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1827,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"5579:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1828,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"5591:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1824,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5535:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1801,"id":1830,"nodeType":"Return","src":"5528:76:13"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"4923:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:13","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"target","nameLocation":"5213:6:13","nodeType":"VariableDeclaration","scope":1832,"src":"5205:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"data","nameLocation":"5242:4:13","nodeType":"VariableDeclaration","scope":1832,"src":"5229:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"value","nameLocation":"5264:5:13","nodeType":"VariableDeclaration","scope":1832,"src":"5256:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:13","nodeType":"VariableDeclaration","scope":1832,"src":"5279:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1796,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:13"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"5330:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:13"},"scope":2008,"src":"5165:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"5888:97:13","statements":[{"expression":{"arguments":[{"id":1843,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5924:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1844,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"5932:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1842,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1849,1878],"referencedDeclaration":1878,"src":"5905:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1841,"id":1847,"nodeType":"Return","src":"5898:80:13"}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"5617:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:13","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"target","nameLocation":"5824:6:13","nodeType":"VariableDeclaration","scope":1849,"src":"5816:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"data","nameLocation":"5845:4:13","nodeType":"VariableDeclaration","scope":1849,"src":"5832:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:13"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"5874:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1839,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:13"},"scope":2008,"src":"5788:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1877,"nodeType":"Block","src":"6327:168:13","statements":[{"assignments":[1862,1864],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"success","nameLocation":"6343:7:13","nodeType":"VariableDeclaration","scope":1877,"src":"6338:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1861,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:13","nodeType":"VariableDeclaration","scope":1877,"src":"6352:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1863,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1869,"initialValue":{"arguments":[{"id":1867,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6397:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1865,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6379:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:13"},{"expression":{"arguments":[{"id":1871,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6446:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"6454:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1873,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"6463:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1874,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6475:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1870,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6419:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1860,"id":1876,"nodeType":"Return","src":"6412:76:13"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"5991:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1878,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:13","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"target","nameLocation":"6214:6:13","nodeType":"VariableDeclaration","scope":1878,"src":"6206:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"data","nameLocation":"6243:4:13","nodeType":"VariableDeclaration","scope":1878,"src":"6230:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1853,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:13","nodeType":"VariableDeclaration","scope":1878,"src":"6257:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:13"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1878,"src":"6313:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1858,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:13"},"scope":2008,"src":"6169:326:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"6771:101:13","statements":[{"expression":{"arguments":[{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"6809:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"6817:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1888,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1895,1924],"referencedDeclaration":1924,"src":"6788:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1887,"id":1893,"nodeType":"Return","src":"6781:84:13"}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"6501:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:13","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"target","nameLocation":"6712:6:13","nodeType":"VariableDeclaration","scope":1895,"src":"6704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"data","nameLocation":"6733:4:13","nodeType":"VariableDeclaration","scope":1895,"src":"6720:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:13"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"6757:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1885,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:13"},"scope":2008,"src":"6674:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"7213:170:13","statements":[{"assignments":[1908,1910],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"success","nameLocation":"7229:7:13","nodeType":"VariableDeclaration","scope":1923,"src":"7224:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1907,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:13","nodeType":"VariableDeclaration","scope":1923,"src":"7238:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1909,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1915,"initialValue":{"arguments":[{"id":1913,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"7285:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1911,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7265:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:13"},{"expression":{"arguments":[{"id":1917,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7334:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"7342:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1919,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"7351:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1920,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"7363:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1916,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"7307:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1906,"id":1922,"nodeType":"Return","src":"7300:76:13"}]},"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"6878:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:13","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"target","nameLocation":"7105:6:13","nodeType":"VariableDeclaration","scope":1924,"src":"7097:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"data","nameLocation":"7134:4:13","nodeType":"VariableDeclaration","scope":1924,"src":"7121:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:13","nodeType":"VariableDeclaration","scope":1924,"src":"7148:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:13"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1924,"src":"7199:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1904,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:13"},"scope":2008,"src":"7058:325:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"7865:434:13","statements":[{"condition":{"id":1938,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"7879:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1960,"nodeType":"Block","src":"8235:58:13","statements":[{"expression":{"arguments":[{"id":1956,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"8257:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1957,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8269:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1955,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"8249:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"ExpressionStatement","src":"8249:33:13"}]},"id":1961,"nodeType":"IfStatement","src":"7875:418:13","trueBody":{"id":1954,"nodeType":"Block","src":"7888:341:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1939,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"7906:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:13","memberName":"length","nodeType":"MemberAccess","src":"7906:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1951,"nodeType":"IfStatement","src":"7902:286:13","trueBody":{"id":1950,"nodeType":"Block","src":"7930:258:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":1945,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8132:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1944,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"8121:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"8113:60:13"}]}},{"expression":{"id":1952,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"8208:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1937,"id":1953,"nodeType":"Return","src":"8201:17:13"}]}}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"7389:277:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1963,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:13","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"target","nameLocation":"7724:6:13","nodeType":"VariableDeclaration","scope":1963,"src":"7716:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"success","nameLocation":"7745:7:13","nodeType":"VariableDeclaration","scope":1963,"src":"7740:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1928,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:13","nodeType":"VariableDeclaration","scope":1963,"src":"7762:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1930,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:13","nodeType":"VariableDeclaration","scope":1963,"src":"7795:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:13"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"7851:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:13"},"scope":2008,"src":"7671:628:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1986,"nodeType":"Block","src":"8680:135:13","statements":[{"condition":{"id":1975,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"8694:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1984,"nodeType":"Block","src":"8751:58:13","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8773:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1981,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"8785:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"8765:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"ExpressionStatement","src":"8765:33:13"}]},"id":1985,"nodeType":"IfStatement","src":"8690:119:13","trueBody":{"id":1978,"nodeType":"Block","src":"8703:42:13","statements":[{"expression":{"id":1976,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8724:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1974,"id":1977,"nodeType":"Return","src":"8717:17:13"}]}}]},"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"8305:210:13","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:13","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"success","nameLocation":"8560:7:13","nodeType":"VariableDeclaration","scope":1987,"src":"8555:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:13","nodeType":"VariableDeclaration","scope":1987,"src":"8577:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1967,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:13","nodeType":"VariableDeclaration","scope":1987,"src":"8610:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1969,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:13"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"8666:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:13"},"scope":2008,"src":"8520:295:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"8904:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1994,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"8980:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:13","memberName":"length","nodeType":"MemberAccess","src":"8980:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"9310:45:13","statements":[{"expression":{"arguments":[{"id":2001,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"9331:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2000,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"ExpressionStatement","src":"9324:20:13"}]},"id":2005,"nodeType":"IfStatement","src":"8976:379:13","trueBody":{"id":1999,"nodeType":"Block","src":"9003:301:13","statements":[{"AST":{"nativeSrc":"9161:133:13","nodeType":"YulBlock","src":"9161:133:13","statements":[{"nativeSrc":"9179:40:13","nodeType":"YulVariableDeclaration","src":"9179:40:13","value":{"arguments":[{"name":"returndata","nativeSrc":"9208:10:13","nodeType":"YulIdentifier","src":"9208:10:13"}],"functionName":{"name":"mload","nativeSrc":"9202:5:13","nodeType":"YulIdentifier","src":"9202:5:13"},"nativeSrc":"9202:17:13","nodeType":"YulFunctionCall","src":"9202:17:13"},"variables":[{"name":"returndata_size","nativeSrc":"9183:15:13","nodeType":"YulTypedName","src":"9183:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:2:13","nodeType":"YulLiteral","src":"9247:2:13","type":"","value":"32"},{"name":"returndata","nativeSrc":"9251:10:13","nodeType":"YulIdentifier","src":"9251:10:13"}],"functionName":{"name":"add","nativeSrc":"9243:3:13","nodeType":"YulIdentifier","src":"9243:3:13"},"nativeSrc":"9243:19:13","nodeType":"YulFunctionCall","src":"9243:19:13"},{"name":"returndata_size","nativeSrc":"9264:15:13","nodeType":"YulIdentifier","src":"9264:15:13"}],"functionName":{"name":"revert","nativeSrc":"9236:6:13","nodeType":"YulIdentifier","src":"9236:6:13"},"nativeSrc":"9236:44:13","nodeType":"YulFunctionCall","src":"9236:44:13"},"nativeSrc":"9236:44:13","nodeType":"YulExpressionStatement","src":"9236:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1989,"isOffset":false,"isSlot":false,"src":"9208:10:13","valueSize":1},{"declaration":1989,"isOffset":false,"isSlot":false,"src":"9251:10:13","valueSize":1}],"id":1998,"nodeType":"InlineAssembly","src":"9152:142:13"}]}}]},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:13","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:13","nodeType":"VariableDeclaration","scope":2007,"src":"8838:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:13","nodeType":"VariableDeclaration","scope":2007,"src":"8863:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:13"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[],"src":"8904:0:13"},"scope":2008,"src":"8821:540:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"194:9169:13","usedErrors":[],"usedEvents":[]}],"src":"101:9263:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2030]},"id":2031,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2030,"linearizedBaseContracts":[2030],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:14","memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"712:17:14"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2030,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:14","memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"819:15:14"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2030,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2031,"src":"608:235:14","usedErrors":[],"usedEvents":[]}],"src":"86:758:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2140]},"id":2141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2032,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"218:1201:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2140,"linearizedBaseContracts":[2140],"name":"StorageSlot","nameLocation":"1428:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2036,"members":[{"constant":false,"id":2035,"mutability":"mutable","name":"value","nameLocation":"1483:5:15","nodeType":"VariableDeclaration","scope":2036,"src":"1475:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:15","nodeType":"StructDefinition","scope":2140,"src":"1446:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2039,"members":[{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"1535:5:15","nodeType":"VariableDeclaration","scope":2039,"src":"1530:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2037,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:15","nodeType":"StructDefinition","scope":2140,"src":"1501:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2042,"members":[{"constant":false,"id":2041,"mutability":"mutable","name":"value","nameLocation":"1590:5:15","nodeType":"VariableDeclaration","scope":2042,"src":"1582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:15","nodeType":"StructDefinition","scope":2140,"src":"1553:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2045,"members":[{"constant":false,"id":2044,"mutability":"mutable","name":"value","nameLocation":"1645:5:15","nodeType":"VariableDeclaration","scope":2045,"src":"1637:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:15","nodeType":"StructDefinition","scope":2140,"src":"1608:49:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2048,"members":[{"constant":false,"id":2047,"mutability":"mutable","name":"value","nameLocation":"1698:5:15","nodeType":"VariableDeclaration","scope":2048,"src":"1691:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:15","nodeType":"StructDefinition","scope":2140,"src":"1663:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2051,"members":[{"constant":false,"id":2050,"mutability":"mutable","name":"value","nameLocation":"1749:5:15","nodeType":"VariableDeclaration","scope":2051,"src":"1743:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2049,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:15","nodeType":"StructDefinition","scope":2140,"src":"1716:45:15","visibility":"public"},{"body":{"id":2061,"nodeType":"Block","src":"1943:106:15","statements":[{"AST":{"nativeSrc":"2005:38:15","nodeType":"YulBlock","src":"2005:38:15","statements":[{"nativeSrc":"2019:14:15","nodeType":"YulAssignment","src":"2019:14:15","value":{"name":"slot","nativeSrc":"2029:4:15","nodeType":"YulIdentifier","src":"2029:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2019:6:15","nodeType":"YulIdentifier","src":"2019:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2058,"isOffset":false,"isSlot":true,"src":"2019:6:15","suffix":"slot","valueSize":1},{"declaration":2054,"isOffset":false,"isSlot":false,"src":"2029:4:15","valueSize":1}],"id":2060,"nodeType":"InlineAssembly","src":"1996:47:15"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"1767:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:15","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"slot","nameLocation":"1891:4:15","nodeType":"VariableDeclaration","scope":2062,"src":"1883:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:15"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"r","nameLocation":"1940:1:15","nodeType":"VariableDeclaration","scope":2062,"src":"1920:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"AddressSlot","nameLocations":["1920:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1920:11:15"},"referencedDeclaration":2036,"src":"1920:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:15"},"scope":2140,"src":"1859:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"2231:106:15","statements":[{"AST":{"nativeSrc":"2293:38:15","nodeType":"YulBlock","src":"2293:38:15","statements":[{"nativeSrc":"2307:14:15","nodeType":"YulAssignment","src":"2307:14:15","value":{"name":"slot","nativeSrc":"2317:4:15","nodeType":"YulIdentifier","src":"2317:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2307:6:15","nodeType":"YulIdentifier","src":"2307:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2069,"isOffset":false,"isSlot":true,"src":"2307:6:15","suffix":"slot","valueSize":1},{"declaration":2065,"isOffset":false,"isSlot":false,"src":"2317:4:15","valueSize":1}],"id":2071,"nodeType":"InlineAssembly","src":"2284:47:15"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"2055:87:15","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:15","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"slot","nameLocation":"2179:4:15","nodeType":"VariableDeclaration","scope":2073,"src":"2171:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:15"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"r","nameLocation":"2228:1:15","nodeType":"VariableDeclaration","scope":2073,"src":"2208:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2039_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2068,"nodeType":"UserDefinedTypeName","pathNode":{"id":2067,"name":"BooleanSlot","nameLocations":["2208:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2039,"src":"2208:11:15"},"referencedDeclaration":2039,"src":"2208:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2039_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:15"},"scope":2140,"src":"2147:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2083,"nodeType":"Block","src":"2519:106:15","statements":[{"AST":{"nativeSrc":"2581:38:15","nodeType":"YulBlock","src":"2581:38:15","statements":[{"nativeSrc":"2595:14:15","nodeType":"YulAssignment","src":"2595:14:15","value":{"name":"slot","nativeSrc":"2605:4:15","nodeType":"YulIdentifier","src":"2605:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2595:6:15","nodeType":"YulIdentifier","src":"2595:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2080,"isOffset":false,"isSlot":true,"src":"2595:6:15","suffix":"slot","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"2605:4:15","valueSize":1}],"id":2082,"nodeType":"InlineAssembly","src":"2572:47:15"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"2343:87:15","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2084,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:15","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"slot","nameLocation":"2467:4:15","nodeType":"VariableDeclaration","scope":2084,"src":"2459:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:15"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"r","nameLocation":"2516:1:15","nodeType":"VariableDeclaration","scope":2084,"src":"2496:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2042_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2079,"nodeType":"UserDefinedTypeName","pathNode":{"id":2078,"name":"Bytes32Slot","nameLocations":["2496:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"2496:11:15"},"referencedDeclaration":2042,"src":"2496:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2042_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:15"},"scope":2140,"src":"2435:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2094,"nodeType":"Block","src":"2807:106:15","statements":[{"AST":{"nativeSrc":"2869:38:15","nodeType":"YulBlock","src":"2869:38:15","statements":[{"nativeSrc":"2883:14:15","nodeType":"YulAssignment","src":"2883:14:15","value":{"name":"slot","nativeSrc":"2893:4:15","nodeType":"YulIdentifier","src":"2893:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2883:6:15","nodeType":"YulIdentifier","src":"2883:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2091,"isOffset":false,"isSlot":true,"src":"2883:6:15","suffix":"slot","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"2893:4:15","valueSize":1}],"id":2093,"nodeType":"InlineAssembly","src":"2860:47:15"}]},"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"2631:87:15","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:15","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"slot","nameLocation":"2755:4:15","nodeType":"VariableDeclaration","scope":2095,"src":"2747:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:15"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"r","nameLocation":"2804:1:15","nodeType":"VariableDeclaration","scope":2095,"src":"2784:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2045_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2090,"nodeType":"UserDefinedTypeName","pathNode":{"id":2089,"name":"Uint256Slot","nameLocations":["2784:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2045,"src":"2784:11:15"},"referencedDeclaration":2045,"src":"2784:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2045_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:15"},"scope":2140,"src":"2723:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"3092:106:15","statements":[{"AST":{"nativeSrc":"3154:38:15","nodeType":"YulBlock","src":"3154:38:15","statements":[{"nativeSrc":"3168:14:15","nodeType":"YulAssignment","src":"3168:14:15","value":{"name":"slot","nativeSrc":"3178:4:15","nodeType":"YulIdentifier","src":"3178:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3168:6:15","nodeType":"YulIdentifier","src":"3168:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2102,"isOffset":false,"isSlot":true,"src":"3168:6:15","suffix":"slot","valueSize":1},{"declaration":2098,"isOffset":false,"isSlot":false,"src":"3178:4:15","valueSize":1}],"id":2104,"nodeType":"InlineAssembly","src":"3145:47:15"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2919:86:15","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:15","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"slot","nameLocation":"3041:4:15","nodeType":"VariableDeclaration","scope":2106,"src":"3033:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:15"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"r","nameLocation":"3089:1:15","nodeType":"VariableDeclaration","scope":2106,"src":"3070:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2048_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2101,"nodeType":"UserDefinedTypeName","pathNode":{"id":2100,"name":"StringSlot","nameLocations":["3070:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2048,"src":"3070:10:15"},"referencedDeclaration":2048,"src":"3070:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2048_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:15"},"scope":2140,"src":"3010:188:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"3400:112:15","statements":[{"AST":{"nativeSrc":"3462:44:15","nodeType":"YulBlock","src":"3462:44:15","statements":[{"nativeSrc":"3476:20:15","nodeType":"YulAssignment","src":"3476:20:15","value":{"name":"store.slot","nativeSrc":"3486:10:15","nodeType":"YulIdentifier","src":"3486:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3476:6:15","nodeType":"YulIdentifier","src":"3476:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2113,"isOffset":false,"isSlot":true,"src":"3476:6:15","suffix":"slot","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":true,"src":"3486:10:15","suffix":"slot","valueSize":1}],"id":2115,"nodeType":"InlineAssembly","src":"3453:53:15"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"3204:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:15","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"store","nameLocation":"3348:5:15","nodeType":"VariableDeclaration","scope":2117,"src":"3333:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:15"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"r","nameLocation":"3397:1:15","nodeType":"VariableDeclaration","scope":2117,"src":"3378:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2048_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"StringSlot","nameLocations":["3378:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2048,"src":"3378:10:15"},"referencedDeclaration":2048,"src":"3378:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2048_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:15"},"scope":2140,"src":"3310:202:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2127,"nodeType":"Block","src":"3688:106:15","statements":[{"AST":{"nativeSrc":"3750:38:15","nodeType":"YulBlock","src":"3750:38:15","statements":[{"nativeSrc":"3764:14:15","nodeType":"YulAssignment","src":"3764:14:15","value":{"name":"slot","nativeSrc":"3774:4:15","nodeType":"YulIdentifier","src":"3774:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3764:6:15","nodeType":"YulIdentifier","src":"3764:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2124,"isOffset":false,"isSlot":true,"src":"3764:6:15","suffix":"slot","valueSize":1},{"declaration":2120,"isOffset":false,"isSlot":false,"src":"3774:4:15","valueSize":1}],"id":2126,"nodeType":"InlineAssembly","src":"3741:47:15"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"3518:85:15","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:15","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"slot","nameLocation":"3638:4:15","nodeType":"VariableDeclaration","scope":2128,"src":"3630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:15"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"r","nameLocation":"3685:1:15","nodeType":"VariableDeclaration","scope":2128,"src":"3667:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2051_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2123,"nodeType":"UserDefinedTypeName","pathNode":{"id":2122,"name":"BytesSlot","nameLocations":["3667:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"3667:9:15"},"referencedDeclaration":2051,"src":"3667:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2051_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:15"},"scope":2140,"src":"3608:186:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2138,"nodeType":"Block","src":"3991:112:15","statements":[{"AST":{"nativeSrc":"4053:44:15","nodeType":"YulBlock","src":"4053:44:15","statements":[{"nativeSrc":"4067:20:15","nodeType":"YulAssignment","src":"4067:20:15","value":{"name":"store.slot","nativeSrc":"4077:10:15","nodeType":"YulIdentifier","src":"4077:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"4067:6:15","nodeType":"YulIdentifier","src":"4067:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"4067:6:15","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":true,"src":"4077:10:15","suffix":"slot","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"4044:53:15"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"3800:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:15","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"store","nameLocation":"3940:5:15","nodeType":"VariableDeclaration","scope":2139,"src":"3926:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2130,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:15"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"3988:1:15","nodeType":"VariableDeclaration","scope":2139,"src":"3970:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2051_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"BytesSlot","nameLocations":["3970:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"3970:9:15"},"referencedDeclaration":2051,"src":"3970:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2051_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:15"},"scope":2140,"src":"3904:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2141,"src":"1420:2685:15","usedErrors":[],"usedEvents":[]}],"src":"193:3913:15"},"id":15},"contracts/MonadSwapAggregator.sol":{"ast":{"absolutePath":"contracts/MonadSwapAggregator.sol","exportedSymbols":{"IBeanRouter":[2240],"IERC20":[2179],"MonadSwapAggregator":[2761]},"id":2762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2142,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2179,"linearizedBaseContracts":[2179],"name":"IERC20","nameLocation":"68:6:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"23b872dd","id":2153,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"90:12:16","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"sender","nameLocation":"111:6:16","nodeType":"VariableDeclaration","scope":2153,"src":"103:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"recipient","nameLocation":"127:9:16","nodeType":"VariableDeclaration","scope":2153,"src":"119:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"119:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"amount","nameLocation":"146:6:16","nodeType":"VariableDeclaration","scope":2153,"src":"138:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"138:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102:51:16"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"172:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2150,"name":"bool","nodeType":"ElementaryTypeName","src":"172:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"171:6:16"},"scope":2179,"src":"81:97:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":2162,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"192:8:16","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"recipient","nameLocation":"209:9:16","nodeType":"VariableDeclaration","scope":2162,"src":"201:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"201:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"amount","nameLocation":"228:6:16","nodeType":"VariableDeclaration","scope":2162,"src":"220:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"220:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"200:35:16"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"254:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2159,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:6:16"},"scope":2179,"src":"183:77:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":2169,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"274:9:16","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"account","nameLocation":"292:7:16","nodeType":"VariableDeclaration","scope":2169,"src":"284:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"284:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"283:17:16"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2169,"src":"324:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"323:9:16"},"scope":2179,"src":"265:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":2178,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"347:7:16","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"spender","nameLocation":"363:7:16","nodeType":"VariableDeclaration","scope":2178,"src":"355:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"amount","nameLocation":"380:6:16","nodeType":"VariableDeclaration","scope":2178,"src":"372:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"354:33:16"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2178,"src":"406:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2175,"name":"bool","nodeType":"ElementaryTypeName","src":"406:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"405:6:16"},"scope":2179,"src":"338:74:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2762,"src":"58:356:16","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IBeanRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2240,"linearizedBaseContracts":[2240],"name":"IBeanRouter","nameLocation":"426:11:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38ed1739","id":2196,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"453:24:16","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"amountIn","nameLocation":"495:8:16","nodeType":"VariableDeclaration","scope":2196,"src":"487:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"amountOutMin","nameLocation":"521:12:16","nodeType":"VariableDeclaration","scope":2196,"src":"513:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"path","nameLocation":"562:4:16","nodeType":"VariableDeclaration","scope":2196,"src":"543:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2185,"nodeType":"ArrayTypeName","src":"543:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"to","nameLocation":"584:2:16","nodeType":"VariableDeclaration","scope":2196,"src":"576:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"576:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"deadline","nameLocation":"604:8:16","nodeType":"VariableDeclaration","scope":2196,"src":"596:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:141:16"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"amounts","nameLocation":"654:7:16","nodeType":"VariableDeclaration","scope":2196,"src":"637:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ArrayTypeName","src":"637:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"636:26:16"},"scope":2240,"src":"444:219:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":2211,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"678:21:16","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"amountOutMin","nameLocation":"717:12:16","nodeType":"VariableDeclaration","scope":2211,"src":"709:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"path","nameLocation":"758:4:16","nodeType":"VariableDeclaration","scope":2211,"src":"739:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2200,"nodeType":"ArrayTypeName","src":"739:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"to","nameLocation":"780:2:16","nodeType":"VariableDeclaration","scope":2211,"src":"772:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"deadline","nameLocation":"800:8:16","nodeType":"VariableDeclaration","scope":2211,"src":"792:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"699:115:16"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"amounts","nameLocation":"858:7:16","nodeType":"VariableDeclaration","scope":2211,"src":"841:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"841:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ArrayTypeName","src":"841:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"840:26:16"},"scope":2240,"src":"669:198:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":2228,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"882:21:16","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"amountIn","nameLocation":"921:8:16","nodeType":"VariableDeclaration","scope":2228,"src":"913:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"amountOutMin","nameLocation":"947:12:16","nodeType":"VariableDeclaration","scope":2228,"src":"939:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"path","nameLocation":"988:4:16","nodeType":"VariableDeclaration","scope":2228,"src":"969:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2216,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2217,"nodeType":"ArrayTypeName","src":"969:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"to","nameLocation":"1010:2:16","nodeType":"VariableDeclaration","scope":2228,"src":"1002:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"deadline","nameLocation":"1030:8:16","nodeType":"VariableDeclaration","scope":2228,"src":"1022:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"903:141:16"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"amounts","nameLocation":"1080:7:16","nodeType":"VariableDeclaration","scope":2228,"src":"1063:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2225,"nodeType":"ArrayTypeName","src":"1063:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1062:26:16"},"scope":2240,"src":"873:216:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":2239,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"1104:13:16","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"amountIn","nameLocation":"1126:8:16","nodeType":"VariableDeclaration","scope":2239,"src":"1118:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"path","nameLocation":"1155:4:16","nodeType":"VariableDeclaration","scope":2239,"src":"1136:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2232,"nodeType":"ArrayTypeName","src":"1136:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1117:43:16"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"amounts","nameLocation":"1201:7:16","nodeType":"VariableDeclaration","scope":2239,"src":"1184:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2236,"nodeType":"ArrayTypeName","src":"1184:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1183:26:16"},"scope":2240,"src":"1095:115:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2762,"src":"416:796:16","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"MonadSwapAggregator","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2761,"linearizedBaseContracts":[2761],"name":"MonadSwapAggregator","nameLocation":"1223:19:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d24","id":2252,"name":"TokenSwapped","nameLocation":"1269:12:16","nodeType":"EventDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1307:4:16","nodeType":"VariableDeclaration","scope":2252,"src":"1291:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2244,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"1337:9:16","nodeType":"VariableDeclaration","scope":2252,"src":"1321:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"1372:7:16","nodeType":"VariableDeclaration","scope":2252,"src":"1356:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2248,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1397:8:16","nodeType":"VariableDeclaration","scope":2252,"src":"1389:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1423:9:16","nodeType":"VariableDeclaration","scope":2252,"src":"1415:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1415:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1281:157:16"},"src":"1263:176:16"},{"constant":true,"functionSelector":"b9aade1c","id":2258,"mutability":"constant","name":"BEAN_ROUTER","nameLocation":"1490:11:16","nodeType":"VariableDeclaration","scope":2761,"src":"1462:97:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"},"typeName":{"id":2254,"nodeType":"UserDefinedTypeName","pathNode":{"id":2253,"name":"IBeanRouter","nameLocations":["1462:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"1462:11:16"},"referencedDeclaration":2240,"src":"1462:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}},"value":{"arguments":[{"hexValue":"307843613831304430393565393044616165366538363763313944463644394138433536646232633839","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xCa810D095e90Daae6e867c19DF6D9A8C56db2c89"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2255,"name":"IBeanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"1504:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeanRouter_$2240_$","typeString":"type(contract IBeanRouter)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1504:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}},"visibility":"public"},{"constant":true,"functionSelector":"f1435d29","id":2261,"mutability":"constant","name":"WMON","nameLocation":"1589:4:16","nodeType":"VariableDeclaration","scope":2761,"src":"1565:73:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"1565:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837363041664538366535646535666130456535343266633742374237313365316335343235373031","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1596:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701"},"visibility":"public"},{"constant":true,"id":2267,"mutability":"constant","name":"NATIVE","nameLocation":"1669:6:16","nodeType":"VariableDeclaration","scope":2761,"src":"1644:44:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1686:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1678:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:16","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":2374,"nodeType":"Block","src":"1891:662:16","statements":[{"assignments":[2282],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"path","nameLocation":"1918:4:16","nodeType":"VariableDeclaration","scope":2374,"src":"1901:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2281,"nodeType":"ArrayTypeName","src":"1901:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2283,"nodeType":"VariableDeclarationStatement","src":"1901:21:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1966:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2285,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"1979:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1966:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2291,"nodeType":"IfStatement","src":"1962:41:16","trueBody":{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1987:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2288,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"1999:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1987:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2290,"nodeType":"ExpressionStatement","src":"1987:16:16"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2017:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2293,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2028:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2017:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"IfStatement","src":"2013:37:16","trueBody":{"expression":{"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2295,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2036:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2296,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2046:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2036:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2298,"nodeType":"ExpressionStatement","src":"2036:14:16"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"2065:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2301,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2078:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2065:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2086:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2304,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2097:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2086:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2065:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2354,"nodeType":"Block","src":"2221:203:16","statements":[{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2328,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2298:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2305:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2330,"nodeType":"ArrayTypeName","src":"2309:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2305:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2298:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2335,"nodeType":"ExpressionStatement","src":"2298:23:16"},{"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2336,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2335:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2338,"indexExpression":{"hexValue":"30","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2340:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2335:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2339,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"2345:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2335:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2341,"nodeType":"ExpressionStatement","src":"2335:19:16"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2342,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2368:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2344,"indexExpression":{"hexValue":"31","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2373:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2368:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2345,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2378:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2368:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2347,"nodeType":"ExpressionStatement","src":"2368:14:16"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2348,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2396:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2350,"indexExpression":{"hexValue":"32","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2396:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2351,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2406:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2396:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2353,"nodeType":"ExpressionStatement","src":"2396:17:16"}]},"id":2355,"nodeType":"IfStatement","src":"2061:363:16","trueBody":{"id":2327,"nodeType":"Block","src":"2103:112:16","statements":[{"expression":{"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2307,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2117:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2138:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2124:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"2128:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2309,"nodeType":"ArrayTypeName","src":"2128:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2124:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2117:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2314,"nodeType":"ExpressionStatement","src":"2117:23:16"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2315,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2154:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2317,"indexExpression":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2159:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2154:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2318,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"2164:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2154:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2320,"nodeType":"ExpressionStatement","src":"2154:19:16"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2321,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2323,"indexExpression":{"hexValue":"31","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2192:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2187:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2324,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2197:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2187:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2326,"nodeType":"ExpressionStatement","src":"2187:17:16"}]}},{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"amounts","nameLocation":"2451:7:16","nodeType":"VariableDeclaration","scope":2374,"src":"2434:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2434:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2359,"nodeType":"ArrayTypeName","src":"2434:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2366,"initialValue":{"arguments":[{"id":2363,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"2487:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2364,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2497:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":2361,"name":"BEAN_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"2461:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2473:13:16","memberName":"getAmountsOut","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"2461:25:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory) view external returns (uint256[] memory)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2461:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2434:68:16"},{"expression":{"baseExpression":{"id":2367,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2519:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2372,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2368,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2527:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2535:6:16","memberName":"length","nodeType":"MemberAccess","src":"2527:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2527:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2519:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2277,"id":2373,"nodeType":"Return","src":"2512:34:16"}]},"functionSelector":"4aa06652","id":2375,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"1754:12:16","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"fromToken","nameLocation":"1784:9:16","nodeType":"VariableDeclaration","scope":2375,"src":"1776:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"1776:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"toToken","nameLocation":"1811:7:16","nodeType":"VariableDeclaration","scope":2375,"src":"1803:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"amountIn","nameLocation":"1836:8:16","nodeType":"VariableDeclaration","scope":2375,"src":"1828:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1766:84:16"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"amountOut","nameLocation":"1880:9:16","nodeType":"VariableDeclaration","scope":2375,"src":"1872:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:19:16"},"scope":2761,"src":"1745:808:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2440,"nodeType":"Block","src":"2758:561:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"2799:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2799:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2813:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":2388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"2791:43:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2852:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2397,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"2865:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2852:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616d6520746f6b656e73","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2874:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""},"value":"Same tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""}],"id":2395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2844:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2401,"nodeType":"ExpressionStatement","src":"2844:44:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2938:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2403,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2951:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2938:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2420,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3117:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2421,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3128:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3117:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2437,"nodeType":"Block","src":"3226:87:16","statements":[{"expression":{"arguments":[{"id":2431,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"3259:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2432,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3270:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2433,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3279:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2434,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"3289:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2430,"name":"_swapTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"3247:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3247:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2387,"id":2436,"nodeType":"Return","src":"3240:62:16"}]},"id":2438,"nodeType":"IfStatement","src":"3113:200:16","trueBody":{"id":2429,"nodeType":"Block","src":"3136:84:16","statements":[{"expression":{"arguments":[{"id":2424,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"3175:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3186:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2426,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"3196:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2423,"name":"_swapTokensForMon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3157:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) returns (uint256)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2387,"id":2428,"nodeType":"Return","src":"3150:59:16"}]}},"id":2439,"nodeType":"IfStatement","src":"2934:379:16","trueBody":{"id":2419,"nodeType":"Block","src":"2959:148:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2981:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2985:5:16","memberName":"value","nodeType":"MemberAccess","src":"2981:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2408,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"2994:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2981:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d4f4e20616d6f756e74","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3004:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d","typeString":"literal_string \"Invalid MON amount\""},"value":"Invalid MON amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d","typeString":"literal_string \"Invalid MON amount\""}],"id":2405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2973:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2973:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2412,"nodeType":"ExpressionStatement","src":"2973:52:16"},{"expression":{"arguments":[{"id":2414,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3064:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2415,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3073:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2416,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"3083:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"_swapMonForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3046:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) returns (uint256)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2387,"id":2418,"nodeType":"Return","src":"3039:57:16"}]}}]},"functionSelector":"fe029156","id":2441,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2594:4:16","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"fromToken","nameLocation":"2616:9:16","nodeType":"VariableDeclaration","scope":2441,"src":"2608:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"toToken","nameLocation":"2643:7:16","nodeType":"VariableDeclaration","scope":2441,"src":"2635:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"2635:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"amountIn","nameLocation":"2668:8:16","nodeType":"VariableDeclaration","scope":2441,"src":"2660:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"amountOutMin","nameLocation":"2694:12:16","nodeType":"VariableDeclaration","scope":2441,"src":"2686:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2598:114:16"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"amountOut","nameLocation":"2747:9:16","nodeType":"VariableDeclaration","scope":2441,"src":"2739:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2738:19:16"},"scope":2761,"src":"2585:734:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2514,"nodeType":"Block","src":"3515:522:16","statements":[{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"path","nameLocation":"3564:4:16","nodeType":"VariableDeclaration","scope":2514,"src":"3547:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2455,"nodeType":"ArrayTypeName","src":"3547:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2462,"initialValue":{"arguments":[{"hexValue":"32","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3571:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"3575:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2458,"nodeType":"ArrayTypeName","src":"3575:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3571:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3547:40:16"},{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2463,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"3597:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2465,"indexExpression":{"hexValue":"30","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3602:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3597:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2466,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3607:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3597:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2468,"nodeType":"ExpressionStatement","src":"3597:14:16"},{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2469,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"3621:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2471,"indexExpression":{"hexValue":"31","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3626:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3621:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2472,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"3631:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3621:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2474,"nodeType":"ExpressionStatement","src":"3621:17:16"},{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"amounts","nameLocation":"3695:7:16","nodeType":"VariableDeclaration","scope":2514,"src":"3678:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3678:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ArrayTypeName","src":"3678:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2493,"initialValue":{"arguments":[{"id":2484,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3769:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2485,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"3795:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":2486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3813:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3817:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3813:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2488,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3837:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3843:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"3837:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3855:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"3837:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2480,"name":"BEAN_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"3705:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3717:21:16","memberName":"swapExactETHForTokens","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"3705:33:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2482,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3746:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3705:50:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value","typeString":"function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:164:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3678:191:16"},{"assignments":[2495],"declarations":[{"constant":false,"id":2495,"mutability":"mutable","name":"amountOut","nameLocation":"3888:9:16","nodeType":"VariableDeclaration","scope":2514,"src":"3880:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3880:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2502,"initialValue":{"baseExpression":{"id":2496,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3900:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2501,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2497,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3908:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3916:6:16","memberName":"length","nodeType":"MemberAccess","src":"3908:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3908:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3900:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3880:47:16"},{"eventCall":{"arguments":[{"expression":{"id":2504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3955:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3955:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2506,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3967:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2507,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"3975:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2508,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3984:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2509,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"3994:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2503,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"3942:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3942:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"EmitStatement","src":"3937:67:16"},{"expression":{"id":2512,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"4021:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2451,"id":2513,"nodeType":"Return","src":"4014:16:16"}]},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"_swapMonForTokens","nameLocation":"3383:17:16","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"toToken","nameLocation":"3418:7:16","nodeType":"VariableDeclaration","scope":2515,"src":"3410:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"amountIn","nameLocation":"3443:8:16","nodeType":"VariableDeclaration","scope":2515,"src":"3435:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"amountOutMin","nameLocation":"3469:12:16","nodeType":"VariableDeclaration","scope":2515,"src":"3461:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3461:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3400:87:16"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"3506:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3505:9:16"},"scope":2761,"src":"3374:663:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2614,"nodeType":"Block","src":"4235:807:16","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4334:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4338:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4334:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4354:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_MonadSwapAggregator_$2761","typeString":"contract MonadSwapAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MonadSwapAggregator_$2761","typeString":"contract MonadSwapAggregator"}],"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4346:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"4346:7:16","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4346:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2537,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4361:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2528,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4310:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2527,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"4303:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2179_$","typeString":"type(contract IERC20)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2179","typeString":"contract IERC20"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4321:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"4303:30:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722066726f6d206661696c6564","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4384:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""},"value":"Transfer from failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""}],"id":2526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4282:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:134:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2541,"nodeType":"ExpressionStatement","src":"4282:134:16"},{"expression":{"arguments":[{"arguments":[{"id":2548,"name":"BEAN_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"4487:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}],"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4479:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"4479:7:16","typeDescriptions":{}}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2550,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4501:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2543,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4460:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2542,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"4453:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2179_$","typeString":"type(contract IERC20)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2179","typeString":"contract IERC20"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4471:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2178,"src":"4453:25:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2552,"nodeType":"ExpressionStatement","src":"4453:57:16"},{"assignments":[2557],"declarations":[{"constant":false,"id":2557,"mutability":"mutable","name":"path","nameLocation":"4560:4:16","nodeType":"VariableDeclaration","scope":2614,"src":"4543:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2556,"nodeType":"ArrayTypeName","src":"4543:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2563,"initialValue":{"arguments":[{"hexValue":"32","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4581:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4567:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"4571:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2559,"nodeType":"ArrayTypeName","src":"4571:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4543:40:16"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2564,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"4593:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2566,"indexExpression":{"hexValue":"30","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4593:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2567,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4603:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4593:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2569,"nodeType":"ExpressionStatement","src":"4593:19:16"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2570,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"4622:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2572,"indexExpression":{"hexValue":"31","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4627:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4622:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2573,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"4632:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4622:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2575,"nodeType":"ExpressionStatement","src":"4622:14:16"},{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"amounts","nameLocation":"4693:7:16","nodeType":"VariableDeclaration","scope":2614,"src":"4676:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"4676:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2579,"nodeType":"ArrayTypeName","src":"4676:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2593,"initialValue":{"arguments":[{"id":2583,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4750:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2584,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4772:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2585,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"4798:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":2586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4816:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4820:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4816:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2588,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4840:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4846:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"4840:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4858:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"4840:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2581,"name":"BEAN_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"4703:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4715:21:16","memberName":"swapExactTokensForETH","nodeType":"MemberAccess","referencedDeclaration":2228,"src":"4703:33:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4703:169:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4676:196:16"},{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"amountOut","nameLocation":"4891:9:16","nodeType":"VariableDeclaration","scope":2614,"src":"4883:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"4883:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2602,"initialValue":{"baseExpression":{"id":2596,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"4903:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2601,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2597,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"4911:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4919:6:16","memberName":"length","nodeType":"MemberAccess","src":"4911:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4928:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4911:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4903:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4883:47:16"},{"eventCall":{"arguments":[{"expression":{"id":2604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4958:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4962:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4958:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2606,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4970:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2607,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"4981:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2608,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4989:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2609,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"4999:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"4945:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4945:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"EmitStatement","src":"4940:69:16"},{"expression":{"id":2612,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"5026:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2525,"id":2613,"nodeType":"Return","src":"5019:16:16"}]},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokensForMon","nameLocation":"4101:17:16","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"fromToken","nameLocation":"4136:9:16","nodeType":"VariableDeclaration","scope":2615,"src":"4128:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2516,"name":"address","nodeType":"ElementaryTypeName","src":"4128:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"amountIn","nameLocation":"4163:8:16","nodeType":"VariableDeclaration","scope":2615,"src":"4155:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4155:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"amountOutMin","nameLocation":"4189:12:16","nodeType":"VariableDeclaration","scope":2615,"src":"4181:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4181:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4118:89:16"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"4226:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4226:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4225:9:16"},"scope":2761,"src":"4092:950:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2755,"nodeType":"Block","src":"5258:1043:16","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5357:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5357:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2637,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5377:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_MonadSwapAggregator_$2761","typeString":"contract MonadSwapAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MonadSwapAggregator_$2761","typeString":"contract MonadSwapAggregator"}],"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5369:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"5369:7:16","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5369:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2639,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"5384:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2630,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5333:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2629,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"5326:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2179_$","typeString":"type(contract IERC20)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2179","typeString":"contract IERC20"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5344:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"5326:30:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722066726f6d206661696c6564","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5407:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""},"value":"Transfer from failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""}],"id":2628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5305:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:134:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2643,"nodeType":"ExpressionStatement","src":"5305:134:16"},{"expression":{"arguments":[{"arguments":[{"id":2650,"name":"BEAN_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5510:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}],"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5502:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"5502:7:16","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2652,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"5524:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2645,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5483:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2644,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"5476:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2179_$","typeString":"type(contract IERC20)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2179","typeString":"contract IERC20"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2178,"src":"5476:25:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2654,"nodeType":"ExpressionStatement","src":"5476:57:16"},{"assignments":[2659],"declarations":[{"constant":false,"id":2659,"mutability":"mutable","name":"path","nameLocation":"5583:4:16","nodeType":"VariableDeclaration","scope":2755,"src":"5566:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"5566:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2658,"nodeType":"ArrayTypeName","src":"5566:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2660,"nodeType":"VariableDeclarationStatement","src":"5566:21:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5601:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2662,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"5614:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5601:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"5622:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2665,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"5633:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5622:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5601:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2715,"nodeType":"Block","src":"5757:140:16","statements":[{"expression":{"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5771:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5778:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2690,"name":"address","nodeType":"ElementaryTypeName","src":"5782:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2691,"nodeType":"ArrayTypeName","src":"5782:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5778:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"5771:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2696,"nodeType":"ExpressionStatement","src":"5771:23:16"},{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2697,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5808:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2699,"indexExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5813:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5808:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2700,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5818:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5808:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2702,"nodeType":"ExpressionStatement","src":"5808:19:16"},{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2703,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5841:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2705,"indexExpression":{"hexValue":"31","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5841:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2706,"name":"WMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"5851:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5841:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2708,"nodeType":"ExpressionStatement","src":"5841:14:16"},{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2709,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5869:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2711,"indexExpression":{"hexValue":"32","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5869:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2712,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"5879:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5869:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2714,"nodeType":"ExpressionStatement","src":"5869:17:16"}]},"id":2716,"nodeType":"IfStatement","src":"5597:300:16","trueBody":{"id":2688,"nodeType":"Block","src":"5639:112:16","statements":[{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5653:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5674:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5660:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"5664:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2670,"nodeType":"ArrayTypeName","src":"5664:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5660:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"5653:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2675,"nodeType":"ExpressionStatement","src":"5653:23:16"},{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2676,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5690:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2678,"indexExpression":{"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5695:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5690:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2679,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5700:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5690:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2681,"nodeType":"ExpressionStatement","src":"5690:19:16"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2682,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5723:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2684,"indexExpression":{"hexValue":"31","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5728:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5723:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2685,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"5733:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5723:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2687,"nodeType":"ExpressionStatement","src":"5723:17:16"}]}},{"assignments":[2721],"declarations":[{"constant":false,"id":2721,"mutability":"mutable","name":"amounts","nameLocation":"5948:7:16","nodeType":"VariableDeclaration","scope":2755,"src":"5931:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ArrayTypeName","src":"5931:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2734,"initialValue":{"arguments":[{"id":2724,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"6008:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2725,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6030:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2726,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"6056:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":2727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6074:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6078:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6074:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2729,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6098:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6104:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"6098:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6116:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"6098:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2722,"name":"BEAN_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5958:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2240","typeString":"contract IBeanRouter"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5970:24:16","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":2196,"src":"5958:36:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5958:172:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5931:199:16"},{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"amountOut","nameLocation":"6149:9:16","nodeType":"VariableDeclaration","scope":2755,"src":"6141:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"6141:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2743,"initialValue":{"baseExpression":{"id":2737,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6161:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2742,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2738,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6169:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6177:6:16","memberName":"length","nodeType":"MemberAccess","src":"6169:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6186:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6169:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6161:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6141:47:16"},{"eventCall":{"arguments":[{"expression":{"id":2745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6216:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6220:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6216:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2747,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"6228:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2748,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6239:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2749,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"6248:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2750,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6258:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2744,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"6203:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2752,"nodeType":"EmitStatement","src":"6198:70:16"},{"expression":{"id":2753,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6285:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2627,"id":2754,"nodeType":"Return","src":"6278:16:16"}]},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokens","nameLocation":"5105:11:16","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"fromToken","nameLocation":"5134:9:16","nodeType":"VariableDeclaration","scope":2756,"src":"5126:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"5126:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"toToken","nameLocation":"5161:7:16","nodeType":"VariableDeclaration","scope":2756,"src":"5153:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"5153:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"amountIn","nameLocation":"5186:8:16","nodeType":"VariableDeclaration","scope":2756,"src":"5178:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"amountOutMin","nameLocation":"5212:12:16","nodeType":"VariableDeclaration","scope":2756,"src":"5204:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5116:114:16"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"5249:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5249:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5248:9:16"},"scope":2761,"src":"5096:1205:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2759,"nodeType":"Block","src":"6369:2:16","statements":[]},"id":2760,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[],"src":"6349:2:16"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[],"src":"6369:0:16"},"scope":2761,"src":"6342:29:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2762,"src":"1214:5159:16","usedErrors":[],"usedEvents":[2252]}],"src":"32:6341:16"},"id":16},"contracts/MonadSwapAggregatorProxy.sol":{"ast":{"absolutePath":"contracts/MonadSwapAggregatorProxy.sol","exportedSymbols":{"Address":[2008],"ERC1967Proxy":[853],"ERC1967Upgrade":[1157],"IBeacon":[1219],"IERC1822Proxiable":[816],"IERC1967":[806],"ITransparentUpgradeableProxy":[1389],"MonadSwapAggregatorProxy":[2782],"Proxy":[1209],"StorageSlot":[2140],"TransparentUpgradeableProxy":[1678]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2763,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","id":2764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":1679,"src":"58:83:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2765,"name":"TransparentUpgradeableProxy","nameLocations":["180:27:17"],"nodeType":"IdentifierPath","referencedDeclaration":1678,"src":"180:27:17"},"id":2766,"nodeType":"InheritanceSpecifier","src":"180:27:17"}],"canonicalName":"MonadSwapAggregatorProxy","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782,1678,853,1157,806,1209],"name":"MonadSwapAggregatorProxy","nameLocation":"152:24:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2780,"nodeType":"Block","src":"359:2:17","statements":[]},"id":2781,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2775,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"336:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2776,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"344:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2777,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"352:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2778,"kind":"baseConstructorSpecifier","modifierName":{"id":2774,"name":"TransparentUpgradeableProxy","nameLocations":["308:27:17"],"nodeType":"IdentifierPath","referencedDeclaration":1678,"src":"308:27:17"},"nodeType":"ModifierInvocation","src":"308:50:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"_logic","nameLocation":"243:6:17","nodeType":"VariableDeclaration","scope":2781,"src":"235:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"235:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"admin_","nameLocation":"267:6:17","nodeType":"VariableDeclaration","scope":2781,"src":"259:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"_data","nameLocation":"296:5:17","nodeType":"VariableDeclaration","scope":2781,"src":"283:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2771,"name":"bytes","nodeType":"ElementaryTypeName","src":"283:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"225:82:17"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[],"src":"359:0:17"},"scope":2782,"src":"214:147:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2783,"src":"143:220:17","usedErrors":[],"usedEvents":[793,800,805]}],"src":"32:331:17"},"id":17},"contracts/MonadSwapAggregatorProxyAdmin.sol":{"ast":{"absolutePath":"contracts/MonadSwapAggregatorProxyAdmin.sol","exportedSymbols":{"Address":[2008],"Context":[2030],"ERC1967Proxy":[853],"ERC1967Upgrade":[1157],"IBeacon":[1219],"IERC1822Proxiable":[816],"IERC1967":[806],"ITransparentUpgradeableProxy":[1389],"MonadSwapAggregatorProxyAdmin":[2794],"Ownable":[785],"Proxy":[1209],"ProxyAdmin":[1355],"StorageSlot":[2140],"TransparentUpgradeableProxy":[1678]},"id":2795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","file":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","id":2785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2795,"sourceUnit":1356,"src":"58:66:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2786,"name":"ProxyAdmin","nameLocations":["168:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"168:10:18"},"id":2787,"nodeType":"InheritanceSpecifier","src":"168:10:18"}],"canonicalName":"MonadSwapAggregatorProxyAdmin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2794,"linearizedBaseContracts":[2794,1355,785,2030],"name":"MonadSwapAggregatorProxyAdmin","nameLocation":"135:29:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2792,"nodeType":"Block","src":"212:2:18","statements":[]},"id":2793,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":2790,"kind":"baseConstructorSpecifier","modifierName":{"id":2789,"name":"ProxyAdmin","nameLocations":["199:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"199:10:18"},"nodeType":"ModifierInvocation","src":"199:12:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"196:2:18"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"212:0:18"},"scope":2794,"src":"185:29:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2795,"src":"126:90:18","usedErrors":[],"usedEvents":[686]}],"src":"32:184:18"},"id":18},"contracts/MonadSwapAggregatorV1.sol":{"ast":{"absolutePath":"contracts/MonadSwapAggregatorV1.sol","exportedSymbols":{"AddressUpgradeable":[630],"ContextUpgradeable":[672],"IBeanRouter":[2896],"IERC20":[2835],"Initializable":[300],"MonadSwapAggregatorV1":[3494],"OwnableUpgradeable":[131]},"id":3495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2796,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3495,"sourceUnit":301,"src":"58:75:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3495,"sourceUnit":132,"src":"134:75:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2835,"linearizedBaseContracts":[2835],"name":"IERC20","nameLocation":"221:6:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"23b872dd","id":2809,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"243:12:19","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"sender","nameLocation":"264:6:19","nodeType":"VariableDeclaration","scope":2809,"src":"256:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"256:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"recipient","nameLocation":"280:9:19","nodeType":"VariableDeclaration","scope":2809,"src":"272:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"amount","nameLocation":"299:6:19","nodeType":"VariableDeclaration","scope":2809,"src":"291:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"255:51:19"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2809,"src":"325:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2806,"name":"bool","nodeType":"ElementaryTypeName","src":"325:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"324:6:19"},"scope":2835,"src":"234:97:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":2818,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"345:8:19","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"recipient","nameLocation":"362:9:19","nodeType":"VariableDeclaration","scope":2818,"src":"354:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"354:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"amount","nameLocation":"381:6:19","nodeType":"VariableDeclaration","scope":2818,"src":"373:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:35:19"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"407:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2815,"name":"bool","nodeType":"ElementaryTypeName","src":"407:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"406:6:19"},"scope":2835,"src":"336:77:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":2825,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"427:9:19","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"account","nameLocation":"445:7:19","nodeType":"VariableDeclaration","scope":2825,"src":"437:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"436:17:19"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"477:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"476:9:19"},"scope":2835,"src":"418:68:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":2834,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"500:7:19","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"spender","nameLocation":"516:7:19","nodeType":"VariableDeclaration","scope":2834,"src":"508:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"amount","nameLocation":"533:6:19","nodeType":"VariableDeclaration","scope":2834,"src":"525:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"507:33:19"},"returnParameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"559:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2831,"name":"bool","nodeType":"ElementaryTypeName","src":"559:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"558:6:19"},"scope":2835,"src":"491:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3495,"src":"211:356:19","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IBeanRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2896,"linearizedBaseContracts":[2896],"name":"IBeanRouter","nameLocation":"579:11:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38ed1739","id":2852,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"606:24:19","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"amountIn","nameLocation":"648:8:19","nodeType":"VariableDeclaration","scope":2852,"src":"640:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"amountOutMin","nameLocation":"674:12:19","nodeType":"VariableDeclaration","scope":2852,"src":"666:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"path","nameLocation":"715:4:19","nodeType":"VariableDeclaration","scope":2852,"src":"696:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2841,"nodeType":"ArrayTypeName","src":"696:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"to","nameLocation":"737:2:19","nodeType":"VariableDeclaration","scope":2852,"src":"729:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"729:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"deadline","nameLocation":"757:8:19","nodeType":"VariableDeclaration","scope":2852,"src":"749:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"630:141:19"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"amounts","nameLocation":"807:7:19","nodeType":"VariableDeclaration","scope":2852,"src":"790:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2849,"nodeType":"ArrayTypeName","src":"790:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"789:26:19"},"scope":2896,"src":"597:219:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":2867,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"831:21:19","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"amountOutMin","nameLocation":"870:12:19","nodeType":"VariableDeclaration","scope":2867,"src":"862:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2857,"mutability":"mutable","name":"path","nameLocation":"911:4:19","nodeType":"VariableDeclaration","scope":2867,"src":"892:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2856,"nodeType":"ArrayTypeName","src":"892:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"to","nameLocation":"933:2:19","nodeType":"VariableDeclaration","scope":2867,"src":"925:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"deadline","nameLocation":"953:8:19","nodeType":"VariableDeclaration","scope":2867,"src":"945:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"852:115:19"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"amounts","nameLocation":"1011:7:19","nodeType":"VariableDeclaration","scope":2867,"src":"994:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2864,"nodeType":"ArrayTypeName","src":"994:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"993:26:19"},"scope":2896,"src":"822:198:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":2884,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"1035:21:19","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"amountIn","nameLocation":"1074:8:19","nodeType":"VariableDeclaration","scope":2884,"src":"1066:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"amountOutMin","nameLocation":"1100:12:19","nodeType":"VariableDeclaration","scope":2884,"src":"1092:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"path","nameLocation":"1141:4:19","nodeType":"VariableDeclaration","scope":2884,"src":"1122:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2873,"nodeType":"ArrayTypeName","src":"1122:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"to","nameLocation":"1163:2:19","nodeType":"VariableDeclaration","scope":2884,"src":"1155:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"deadline","nameLocation":"1183:8:19","nodeType":"VariableDeclaration","scope":2884,"src":"1175:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1056:141:19"},"returnParameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"amounts","nameLocation":"1233:7:19","nodeType":"VariableDeclaration","scope":2884,"src":"1216:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2881,"nodeType":"ArrayTypeName","src":"1216:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1215:26:19"},"scope":2896,"src":"1026:216:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":2895,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"1257:13:19","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"amountIn","nameLocation":"1279:8:19","nodeType":"VariableDeclaration","scope":2895,"src":"1271:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"path","nameLocation":"1308:4:19","nodeType":"VariableDeclaration","scope":2895,"src":"1289:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2888,"nodeType":"ArrayTypeName","src":"1289:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1270:43:19"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"amounts","nameLocation":"1354:7:19","nodeType":"VariableDeclaration","scope":2895,"src":"1337:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1337:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2892,"nodeType":"ArrayTypeName","src":"1337:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1336:26:19"},"scope":2896,"src":"1248:115:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3495,"src":"569:796:19","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":2897,"name":"Initializable","nameLocations":["1401:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"1401:13:19"},"id":2898,"nodeType":"InheritanceSpecifier","src":"1401:13:19"},{"baseName":{"id":2899,"name":"OwnableUpgradeable","nameLocations":["1416:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"1416:18:19"},"id":2900,"nodeType":"InheritanceSpecifier","src":"1416:18:19"}],"canonicalName":"MonadSwapAggregatorV1","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3494,"linearizedBaseContracts":[3494,131,672,300],"name":"MonadSwapAggregatorV1","nameLocation":"1376:21:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d24","id":2912,"name":"TokenSwapped","nameLocation":"1461:12:19","nodeType":"EventDefinition","parameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1499:4:19","nodeType":"VariableDeclaration","scope":2912,"src":"1483:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2904,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"1529:9:19","nodeType":"VariableDeclaration","scope":2912,"src":"1513:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2906,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"1564:7:19","nodeType":"VariableDeclaration","scope":2912,"src":"1548:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2908,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1589:8:19","nodeType":"VariableDeclaration","scope":2912,"src":"1581:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2910,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1615:9:19","nodeType":"VariableDeclaration","scope":2912,"src":"1607:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1473:157:19"},"src":"1455:176:19"},{"constant":false,"functionSelector":"ac29e1a1","id":2915,"mutability":"mutable","name":"beanRouter","nameLocation":"1679:10:19","nodeType":"VariableDeclaration","scope":3494,"src":"1660:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"},"typeName":{"id":2914,"nodeType":"UserDefinedTypeName","pathNode":{"id":2913,"name":"IBeanRouter","nameLocations":["1660:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2896,"src":"1660:11:19"},"referencedDeclaration":2896,"src":"1660:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"7d86b8a5","id":2917,"mutability":"mutable","name":"wmon","nameLocation":"1710:4:19","nodeType":"VariableDeclaration","scope":3494,"src":"1695:19:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":2923,"mutability":"constant","name":"NATIVE","nameLocation":"1745:6:19","nodeType":"VariableDeclaration","scope":3494,"src":"1720:44:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"1720:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1762:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1754:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:19","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1754:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":2930,"nodeType":"Block","src":"1838:39:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2927,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"1848:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"1848:22:19"}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"1771:48:19","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":2931,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"1835:2:19"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[],"src":"1838:0:19"},"scope":3494,"src":"1824:53:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2953,"nodeType":"Block","src":"1958:102:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2940,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1968:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1968:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"1968:16:19"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"1994:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2945,"name":"_beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"2019:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2944,"name":"IBeanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2007:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeanRouter_$2896_$","typeString":"type(contract IBeanRouter)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"src":"1994:37:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"id":2948,"nodeType":"ExpressionStatement","src":"1994:37:19"},{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2949,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2041:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2950,"name":"_wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"2048:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2041:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2952,"nodeType":"ExpressionStatement","src":"2041:12:19"}]},"functionSelector":"485cc955","id":2954,"implemented":true,"kind":"function","modifiers":[{"id":2938,"kind":"modifierInvocation","modifierName":{"id":2937,"name":"initializer","nameLocations":["1946:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"1946:11:19"},"nodeType":"ModifierInvocation","src":"1946:11:19"}],"name":"initialize","nameLocation":"1892:10:19","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"_beanRouter","nameLocation":"1911:11:19","nodeType":"VariableDeclaration","scope":2954,"src":"1903:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"_wmon","nameLocation":"1932:5:19","nodeType":"VariableDeclaration","scope":2954,"src":"1924:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"1924:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1902:36:19"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[],"src":"1958:0:19"},"scope":3494,"src":"1883:177:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3061,"nodeType":"Block","src":"2262:661:19","statements":[{"assignments":[2969],"declarations":[{"constant":false,"id":2969,"mutability":"mutable","name":"path","nameLocation":"2289:4:19","nodeType":"VariableDeclaration","scope":3061,"src":"2272:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"2272:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2968,"nodeType":"ArrayTypeName","src":"2272:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2970,"nodeType":"VariableDeclarationStatement","src":"2272:21:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2337:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2972,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2350:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2337:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2978,"nodeType":"IfStatement","src":"2333:41:19","trueBody":{"expression":{"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2974,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2358:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2975,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2370:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2358:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2977,"nodeType":"ExpressionStatement","src":"2358:16:19"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2388:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2980,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2399:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2388:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2986,"nodeType":"IfStatement","src":"2384:37:19","trueBody":{"expression":{"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2407:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2983,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2417:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2407:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2985,"nodeType":"ExpressionStatement","src":"2407:14:19"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2436:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2988,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2449:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2436:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2457:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2991,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2468:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2436:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3041,"nodeType":"Block","src":"2592:203:19","statements":[{"expression":{"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2669:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2690:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2676:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3017,"nodeType":"ArrayTypeName","src":"2680:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2676:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2669:23:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3022,"nodeType":"ExpressionStatement","src":"2669:23:19"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3023,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2706:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3025,"indexExpression":{"hexValue":"30","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2711:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2706:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3026,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2716:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2706:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3028,"nodeType":"ExpressionStatement","src":"2706:19:19"},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3029,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2739:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3031,"indexExpression":{"hexValue":"31","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2739:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3032,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2749:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2739:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3034,"nodeType":"ExpressionStatement","src":"2739:14:19"},{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3035,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2767:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3037,"indexExpression":{"hexValue":"32","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2772:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2767:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3038,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2777:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2767:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3040,"nodeType":"ExpressionStatement","src":"2767:17:19"}]},"id":3042,"nodeType":"IfStatement","src":"2432:363:19","trueBody":{"id":3014,"nodeType":"Block","src":"2474:112:19","statements":[{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2488:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2495:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2996,"nodeType":"ArrayTypeName","src":"2499:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2495:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2488:23:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3001,"nodeType":"ExpressionStatement","src":"2488:23:19"},{"expression":{"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3002,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2525:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3004,"indexExpression":{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2525:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3005,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2535:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2525:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3007,"nodeType":"ExpressionStatement","src":"2525:19:19"},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3008,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2558:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3010,"indexExpression":{"hexValue":"31","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2563:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2558:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3011,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2568:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2558:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3013,"nodeType":"ExpressionStatement","src":"2558:17:19"}]}},{"assignments":[3047],"declarations":[{"constant":false,"id":3047,"mutability":"mutable","name":"amounts","nameLocation":"2822:7:19","nodeType":"VariableDeclaration","scope":3061,"src":"2805:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2805:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ArrayTypeName","src":"2805:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3053,"initialValue":{"arguments":[{"id":3050,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"2857:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3051,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2867:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":3048,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"2832:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2843:13:19","memberName":"getAmountsOut","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"2832:24:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory) view external returns (uint256[] memory)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2805:67:19"},{"expression":{"baseExpression":{"id":3054,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"2889:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3059,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3055,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"2897:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2905:6:19","memberName":"length","nodeType":"MemberAccess","src":"2897:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2897:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2964,"id":3060,"nodeType":"Return","src":"2882:34:19"}]},"functionSelector":"4aa06652","id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"2125:12:19","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"fromToken","nameLocation":"2155:9:19","nodeType":"VariableDeclaration","scope":3062,"src":"2147:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"toToken","nameLocation":"2182:7:19","nodeType":"VariableDeclaration","scope":3062,"src":"2174:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"amountIn","nameLocation":"2207:8:19","nodeType":"VariableDeclaration","scope":3062,"src":"2199:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:84:19"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"amountOut","nameLocation":"2251:9:19","nodeType":"VariableDeclaration","scope":3062,"src":"2243:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2242:19:19"},"scope":3494,"src":"2116:807:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3127,"nodeType":"Block","src":"3128:503:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3146:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3157:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3146:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3160:20:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":3075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3138:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"3138:43:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3199:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3084,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3212:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3199:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616d6520746f6b656e73","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3221:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""},"value":"Same tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""}],"id":3082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3191:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"ExpressionStatement","src":"3191:44:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3250:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3090,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"3263:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3250:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3429:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3108,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"3440:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3429:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3124,"nodeType":"Block","src":"3538:87:19","statements":[{"expression":{"arguments":[{"id":3118,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3571:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3582:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3120,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3591:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3121,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3601:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"name":"_swapTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"3559:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3074,"id":3123,"nodeType":"Return","src":"3552:62:19"}]},"id":3125,"nodeType":"IfStatement","src":"3425:200:19","trueBody":{"id":3116,"nodeType":"Block","src":"3448:84:19","statements":[{"expression":{"arguments":[{"id":3111,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3487:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3112,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3498:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3113,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3508:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3110,"name":"_swapTokensForMon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"3469:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) returns (uint256)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3469:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3074,"id":3115,"nodeType":"Return","src":"3462:59:19"}]}},"id":3126,"nodeType":"IfStatement","src":"3246:379:19","trueBody":{"id":3106,"nodeType":"Block","src":"3271:148:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3293:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3297:5:19","memberName":"value","nodeType":"MemberAccess","src":"3293:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3095,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3306:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3293:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d4f4e20616d6f756e74","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3316:20:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d","typeString":"literal_string \"Invalid MON amount\""},"value":"Invalid MON amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d","typeString":"literal_string \"Invalid MON amount\""}],"id":3092,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3285:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"ExpressionStatement","src":"3285:52:19"},{"expression":{"arguments":[{"id":3101,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3376:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3102,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3385:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3103,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3395:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3100,"name":"_swapMonForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3358:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) returns (uint256)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3358:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3074,"id":3105,"nodeType":"Return","src":"3351:57:19"}]}}]},"functionSelector":"fe029156","id":3128,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2964:4:19","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"fromToken","nameLocation":"2986:9:19","nodeType":"VariableDeclaration","scope":3128,"src":"2978:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"toToken","nameLocation":"3013:7:19","nodeType":"VariableDeclaration","scope":3128,"src":"3005:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"3005:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"amountIn","nameLocation":"3038:8:19","nodeType":"VariableDeclaration","scope":3128,"src":"3030:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3030:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"amountOutMin","nameLocation":"3064:12:19","nodeType":"VariableDeclaration","scope":3128,"src":"3056:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3056:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2968:114:19"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"amountOut","nameLocation":"3117:9:19","nodeType":"VariableDeclaration","scope":3128,"src":"3109:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3109:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3108:19:19"},"scope":3494,"src":"2955:676:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3201,"nodeType":"Block","src":"3827:521:19","statements":[{"assignments":[3143],"declarations":[{"constant":false,"id":3143,"mutability":"mutable","name":"path","nameLocation":"3876:4:19","nodeType":"VariableDeclaration","scope":3201,"src":"3859:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"3859:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3142,"nodeType":"ArrayTypeName","src":"3859:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3149,"initialValue":{"arguments":[{"hexValue":"32","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3897:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3883:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"3887:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3145,"nodeType":"ArrayTypeName","src":"3887:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3883:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3859:40:19"},{"expression":{"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3150,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3909:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3152,"indexExpression":{"hexValue":"30","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3909:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3153,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"3919:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3909:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3155,"nodeType":"ExpressionStatement","src":"3909:14:19"},{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3156,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3933:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3158,"indexExpression":{"hexValue":"31","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3938:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3933:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3159,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"3943:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3933:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3161,"nodeType":"ExpressionStatement","src":"3933:17:19"},{"assignments":[3166],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"amounts","nameLocation":"4007:7:19","nodeType":"VariableDeclaration","scope":3201,"src":"3990:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3990:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ArrayTypeName","src":"3990:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3180,"initialValue":{"arguments":[{"id":3171,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"4080:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3172,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4106:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":3173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4124:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4128:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4124:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4148:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4154:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"4148:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"4148:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3167,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4017:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4028:21:19","memberName":"swapExactETHForTokens","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"4017:32:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3169,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"4057:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4017:49:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value","typeString":"function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4017:163:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3990:190:19"},{"assignments":[3182],"declarations":[{"constant":false,"id":3182,"mutability":"mutable","name":"amountOut","nameLocation":"4199:9:19","nodeType":"VariableDeclaration","scope":3201,"src":"4191:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3189,"initialValue":{"baseExpression":{"id":3183,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"4211:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3188,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3184,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"4219:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4227:6:19","memberName":"length","nodeType":"MemberAccess","src":"4219:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4219:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4211:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4191:47:19"},{"eventCall":{"arguments":[{"expression":{"id":3191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4266:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4270:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4266:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3193,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"4278:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3194,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"4286:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3195,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"4295:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3196,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4305:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3190,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"4253:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3198,"nodeType":"EmitStatement","src":"4248:67:19"},{"expression":{"id":3199,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4332:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3138,"id":3200,"nodeType":"Return","src":"4325:16:19"}]},"id":3202,"implemented":true,"kind":"function","modifiers":[],"name":"_swapMonForTokens","nameLocation":"3695:17:19","nodeType":"FunctionDefinition","parameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"toToken","nameLocation":"3730:7:19","nodeType":"VariableDeclaration","scope":3202,"src":"3722:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"3722:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"amountIn","nameLocation":"3755:8:19","nodeType":"VariableDeclaration","scope":3202,"src":"3747:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3747:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"amountOutMin","nameLocation":"3781:12:19","nodeType":"VariableDeclaration","scope":3202,"src":"3773:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3773:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3712:87:19"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3202,"src":"3818:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3817:9:19"},"scope":3494,"src":"3686:662:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3301,"nodeType":"Block","src":"4546:805:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4645:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4649:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4645:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3222,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4665:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_MonadSwapAggregatorV1_$3494","typeString":"contract MonadSwapAggregatorV1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MonadSwapAggregatorV1_$3494","typeString":"contract MonadSwapAggregatorV1"}],"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4657:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"4657:7:19","typeDescriptions":{}}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3224,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4672:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3215,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"4621:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3214,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4614:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2835_$","typeString":"type(contract IERC20)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2835","typeString":"contract IERC20"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4632:12:19","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2809,"src":"4614:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722066726f6d206661696c6564","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4695:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""},"value":"Transfer from failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""}],"id":3213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4593:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:134:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3228,"nodeType":"ExpressionStatement","src":"4593:134:19"},{"expression":{"arguments":[{"arguments":[{"id":3235,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4798:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}],"id":3234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4790:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3233,"name":"address","nodeType":"ElementaryTypeName","src":"4790:7:19","typeDescriptions":{}}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3237,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4811:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3230,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"4771:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3229,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4764:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2835_$","typeString":"type(contract IERC20)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4764:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2835","typeString":"contract IERC20"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4782:7:19","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2834,"src":"4764:25:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4764:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3239,"nodeType":"ExpressionStatement","src":"4764:56:19"},{"assignments":[3244],"declarations":[{"constant":false,"id":3244,"mutability":"mutable","name":"path","nameLocation":"4870:4:19","nodeType":"VariableDeclaration","scope":3301,"src":"4853:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"4853:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3243,"nodeType":"ArrayTypeName","src":"4853:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3250,"initialValue":{"arguments":[{"hexValue":"32","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4877:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"4881:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3246,"nodeType":"ArrayTypeName","src":"4881:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4853:40:19"},{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3251,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"4903:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3253,"indexExpression":{"hexValue":"30","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4908:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4903:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3254,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"4913:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4903:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3256,"nodeType":"ExpressionStatement","src":"4903:19:19"},{"expression":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3257,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"4932:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3259,"indexExpression":{"hexValue":"31","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4937:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4932:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3260,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"4942:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4932:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3262,"nodeType":"ExpressionStatement","src":"4932:14:19"},{"assignments":[3267],"declarations":[{"constant":false,"id":3267,"mutability":"mutable","name":"amounts","nameLocation":"5003:7:19","nodeType":"VariableDeclaration","scope":3301,"src":"4986:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4986:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"nodeType":"ArrayTypeName","src":"4986:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3280,"initialValue":{"arguments":[{"id":3270,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5059:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3271,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"5081:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3272,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5107:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":3273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5125:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5129:6:19","memberName":"sender","nodeType":"MemberAccess","src":"5125:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3275,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5149:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5155:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"5149:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"5149:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3268,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"5013:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5024:21:19","memberName":"swapExactTokensForETH","nodeType":"MemberAccess","referencedDeclaration":2884,"src":"5013:32:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:168:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4986:195:19"},{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"amountOut","nameLocation":"5200:9:19","nodeType":"VariableDeclaration","scope":3301,"src":"5192:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5192:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3289,"initialValue":{"baseExpression":{"id":3283,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"5212:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3288,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3284,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"5220:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5228:6:19","memberName":"length","nodeType":"MemberAccess","src":"5220:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5237:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5220:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5212:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5192:47:19"},{"eventCall":{"arguments":[{"expression":{"id":3291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5267:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5271:6:19","memberName":"sender","nodeType":"MemberAccess","src":"5267:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3293,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"5279:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3294,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"5290:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3295,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5298:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3296,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"5308:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"5254:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5254:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"EmitStatement","src":"5249:69:19"},{"expression":{"id":3299,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"5335:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3212,"id":3300,"nodeType":"Return","src":"5328:16:19"}]},"id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokensForMon","nameLocation":"4412:17:19","nodeType":"FunctionDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"fromToken","nameLocation":"4447:9:19","nodeType":"VariableDeclaration","scope":3302,"src":"4439:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"4439:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"amountIn","nameLocation":"4474:8:19","nodeType":"VariableDeclaration","scope":3302,"src":"4466:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"amountOutMin","nameLocation":"4500:12:19","nodeType":"VariableDeclaration","scope":3302,"src":"4492:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4429:89:19"},"returnParameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"4537:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4536:9:19"},"scope":3494,"src":"4403:948:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"5567:1041:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3320,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5666:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5670:6:19","memberName":"sender","nodeType":"MemberAccess","src":"5666:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3324,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5686:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_MonadSwapAggregatorV1_$3494","typeString":"contract MonadSwapAggregatorV1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MonadSwapAggregatorV1_$3494","typeString":"contract MonadSwapAggregatorV1"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5678:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"5678:7:19","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3326,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5693:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3317,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5642:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3316,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"5635:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2835_$","typeString":"type(contract IERC20)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2835","typeString":"contract IERC20"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5653:12:19","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2809,"src":"5635:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722066726f6d206661696c6564","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5716:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""},"value":"Transfer from failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""}],"id":3315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5614:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5614:134:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"ExpressionStatement","src":"5614:134:19"},{"expression":{"arguments":[{"arguments":[{"id":3337,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"5819:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}],"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5811:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"5811:7:19","typeDescriptions":{}}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3339,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5832:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3332,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5792:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"5785:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2835_$","typeString":"type(contract IERC20)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2835","typeString":"contract IERC20"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5803:7:19","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2834,"src":"5785:25:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"ExpressionStatement","src":"5785:56:19"},{"assignments":[3346],"declarations":[{"constant":false,"id":3346,"mutability":"mutable","name":"path","nameLocation":"5891:4:19","nodeType":"VariableDeclaration","scope":3442,"src":"5874:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3344,"name":"address","nodeType":"ElementaryTypeName","src":"5874:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3345,"nodeType":"ArrayTypeName","src":"5874:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3347,"nodeType":"VariableDeclarationStatement","src":"5874:21:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5909:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3349,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"5922:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5909:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5930:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3352,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"5941:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5930:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3402,"nodeType":"Block","src":"6065:140:19","statements":[{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3376,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6079:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6100:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6086:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3377,"name":"address","nodeType":"ElementaryTypeName","src":"6090:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3378,"nodeType":"ArrayTypeName","src":"6090:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"6079:23:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3383,"nodeType":"ExpressionStatement","src":"6079:23:19"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3384,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6116:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3386,"indexExpression":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6121:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6116:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3387,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6126:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6116:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3389,"nodeType":"ExpressionStatement","src":"6116:19:19"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3390,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6149:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3392,"indexExpression":{"hexValue":"31","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6154:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6149:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3393,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"6159:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6149:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3395,"nodeType":"ExpressionStatement","src":"6149:14:19"},{"expression":{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3396,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6177:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3398,"indexExpression":{"hexValue":"32","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6182:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6177:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3399,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6187:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6177:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3401,"nodeType":"ExpressionStatement","src":"6177:17:19"}]},"id":3403,"nodeType":"IfStatement","src":"5905:300:19","trueBody":{"id":3375,"nodeType":"Block","src":"5947:112:19","statements":[{"expression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3355,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"5961:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5982:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5968:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"5972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3357,"nodeType":"ArrayTypeName","src":"5972:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"5961:23:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3362,"nodeType":"ExpressionStatement","src":"5961:23:19"},{"expression":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3363,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"5998:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3365,"indexExpression":{"hexValue":"30","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5998:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3366,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6008:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5998:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3368,"nodeType":"ExpressionStatement","src":"5998:19:19"},{"expression":{"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3369,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6031:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3371,"indexExpression":{"hexValue":"31","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6036:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6031:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3372,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6041:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6031:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3374,"nodeType":"ExpressionStatement","src":"6031:17:19"}]}},{"assignments":[3408],"declarations":[{"constant":false,"id":3408,"mutability":"mutable","name":"amounts","nameLocation":"6256:7:19","nodeType":"VariableDeclaration","scope":3442,"src":"6239:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"6239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3407,"nodeType":"ArrayTypeName","src":"6239:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3421,"initialValue":{"arguments":[{"id":3411,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6315:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3412,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"6337:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3413,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6363:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":3414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6381:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6385:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6381:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3416,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6405:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6411:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"6405:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6423:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"6405:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3409,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"6266:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6277:24:19","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":2852,"src":"6266:35:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6266:171:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6239:198:19"},{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"amountOut","nameLocation":"6456:9:19","nodeType":"VariableDeclaration","scope":3442,"src":"6448:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"6448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3430,"initialValue":{"baseExpression":{"id":3424,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"6468:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3429,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3425,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"6476:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6484:6:19","memberName":"length","nodeType":"MemberAccess","src":"6476:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6493:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6476:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6468:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6448:47:19"},{"eventCall":{"arguments":[{"expression":{"id":3432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6523:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6527:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6523:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3434,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6535:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3435,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6546:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3436,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6555:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3437,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"6565:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3431,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"6510:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6510:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"EmitStatement","src":"6505:70:19"},{"expression":{"id":3440,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"6592:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3314,"id":3441,"nodeType":"Return","src":"6585:16:19"}]},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokens","nameLocation":"5414:11:19","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"fromToken","nameLocation":"5443:9:19","nodeType":"VariableDeclaration","scope":3443,"src":"5435:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"5435:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"toToken","nameLocation":"5470:7:19","nodeType":"VariableDeclaration","scope":3443,"src":"5462:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"5462:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"amountIn","nameLocation":"5495:8:19","nodeType":"VariableDeclaration","scope":3443,"src":"5487:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5487:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"amountOutMin","nameLocation":"5521:12:19","nodeType":"VariableDeclaration","scope":3443,"src":"5513:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5425:114:19"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"5558:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5557:9:19"},"scope":3494,"src":"5405:1203:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"6676:2:19","statements":[]},"id":3447,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[],"src":"6656:2:19"},"returnParameters":{"id":3445,"nodeType":"ParameterList","parameters":[],"src":"6676:0:19"},"scope":3494,"src":"6649:29:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3470,"nodeType":"Block","src":"6785:122:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"_newRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"6803:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6825:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6817:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3456,"name":"address","nodeType":"ElementaryTypeName","src":"6817:7:19","typeDescriptions":{}}},"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6817:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6803:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726f757465722061646472657373","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b","typeString":"literal_string \"Invalid router address\""},"value":"Invalid router address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b","typeString":"literal_string \"Invalid router address\""}],"id":3454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6795:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6795:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3463,"nodeType":"ExpressionStatement","src":"6795:59:19"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3464,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"6864:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3466,"name":"_newRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"6889:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3465,"name":"IBeanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"6877:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeanRouter_$2896_$","typeString":"type(contract IBeanRouter)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6877:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"src":"6864:36:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$2896","typeString":"contract IBeanRouter"}},"id":3469,"nodeType":"ExpressionStatement","src":"6864:36:19"}]},"functionSelector":"858845d9","id":3471,"implemented":true,"kind":"function","modifiers":[{"id":3452,"kind":"modifierInvocation","modifierName":{"id":3451,"name":"onlyOwner","nameLocations":["6775:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6775:9:19"},"nodeType":"ModifierInvocation","src":"6775:9:19"}],"name":"updateBeanRouter","nameLocation":"6729:16:19","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"_newRouter","nameLocation":"6754:10:19","nodeType":"VariableDeclaration","scope":3471,"src":"6746:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3448,"name":"address","nodeType":"ElementaryTypeName","src":"6746:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6745:20:19"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[],"src":"6785:0:19"},"scope":3494,"src":"6720:187:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3492,"nodeType":"Block","src":"6970:97:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"_newWMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"6988:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7008:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7000:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"7000:7:19","typeDescriptions":{}}},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7000:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6988:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420574d4f4e2061646472657373","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7012:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241","typeString":"literal_string \"Invalid WMON address\""},"value":"Invalid WMON address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241","typeString":"literal_string \"Invalid WMON address\""}],"id":3478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6980:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6980:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3487,"nodeType":"ExpressionStatement","src":"6980:55:19"},{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"7045:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3489,"name":"_newWMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"7052:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7045:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3491,"nodeType":"ExpressionStatement","src":"7045:15:19"}]},"functionSelector":"9b69c7c8","id":3493,"implemented":true,"kind":"function","modifiers":[{"id":3476,"kind":"modifierInvocation","modifierName":{"id":3475,"name":"onlyOwner","nameLocations":["6960:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6960:9:19"},"nodeType":"ModifierInvocation","src":"6960:9:19"}],"name":"updateWMON","nameLocation":"6922:10:19","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"_newWMON","nameLocation":"6941:8:19","nodeType":"VariableDeclaration","scope":3493,"src":"6933:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3472,"name":"address","nodeType":"ElementaryTypeName","src":"6933:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6932:18:19"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[],"src":"6970:0:19"},"scope":3494,"src":"6913:154:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3495,"src":"1367:5702:19","usedErrors":[],"usedEvents":[16,146,2912]}],"src":"32:7037:19"},"id":19},"contracts/MonadSwapAggregatorV2.sol":{"ast":{"absolutePath":"contracts/MonadSwapAggregatorV2.sol","exportedSymbols":{"AddressUpgradeable":[630],"ContextUpgradeable":[672],"IBeanRouter":[3596],"IERC20":[3535],"Initializable":[300],"MonadSwapAggregatorV2":[4379],"OwnableUpgradeable":[131]},"id":4380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3496,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4380,"sourceUnit":301,"src":"58:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4380,"sourceUnit":132,"src":"134:75:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3535,"linearizedBaseContracts":[3535],"name":"IERC20","nameLocation":"221:6:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"23b872dd","id":3509,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"243:12:20","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"sender","nameLocation":"264:6:20","nodeType":"VariableDeclaration","scope":3509,"src":"256:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3499,"name":"address","nodeType":"ElementaryTypeName","src":"256:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"recipient","nameLocation":"280:9:20","nodeType":"VariableDeclaration","scope":3509,"src":"272:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"amount","nameLocation":"299:6:20","nodeType":"VariableDeclaration","scope":3509,"src":"291:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"255:51:20"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"325:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3506,"name":"bool","nodeType":"ElementaryTypeName","src":"325:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"324:6:20"},"scope":3535,"src":"234:97:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3518,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"345:8:20","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"recipient","nameLocation":"362:9:20","nodeType":"VariableDeclaration","scope":3518,"src":"354:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3510,"name":"address","nodeType":"ElementaryTypeName","src":"354:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"amount","nameLocation":"381:6:20","nodeType":"VariableDeclaration","scope":3518,"src":"373:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:35:20"},"returnParameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3518,"src":"407:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3515,"name":"bool","nodeType":"ElementaryTypeName","src":"407:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"406:6:20"},"scope":3535,"src":"336:77:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":3525,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"427:9:20","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"account","nameLocation":"445:7:20","nodeType":"VariableDeclaration","scope":3525,"src":"437:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"436:17:20"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3525,"src":"477:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"476:9:20"},"scope":3535,"src":"418:68:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3534,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"500:7:20","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"spender","nameLocation":"516:7:20","nodeType":"VariableDeclaration","scope":3534,"src":"508:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3526,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"amount","nameLocation":"533:6:20","nodeType":"VariableDeclaration","scope":3534,"src":"525:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"507:33:20"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3534,"src":"559:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3531,"name":"bool","nodeType":"ElementaryTypeName","src":"559:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"558:6:20"},"scope":3535,"src":"491:74:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4380,"src":"211:356:20","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IBeanRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3596,"linearizedBaseContracts":[3596],"name":"IBeanRouter","nameLocation":"579:11:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38ed1739","id":3552,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"606:24:20","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"amountIn","nameLocation":"648:8:20","nodeType":"VariableDeclaration","scope":3552,"src":"640:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"amountOutMin","nameLocation":"674:12:20","nodeType":"VariableDeclaration","scope":3552,"src":"666:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"path","nameLocation":"715:4:20","nodeType":"VariableDeclaration","scope":3552,"src":"696:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3541,"nodeType":"ArrayTypeName","src":"696:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"to","nameLocation":"737:2:20","nodeType":"VariableDeclaration","scope":3552,"src":"729:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"729:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"deadline","nameLocation":"757:8:20","nodeType":"VariableDeclaration","scope":3552,"src":"749:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"630:141:20"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"amounts","nameLocation":"807:7:20","nodeType":"VariableDeclaration","scope":3552,"src":"790:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3549,"nodeType":"ArrayTypeName","src":"790:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"789:26:20"},"scope":3596,"src":"597:219:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":3567,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"831:21:20","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"mutability":"mutable","name":"amountOutMin","nameLocation":"870:12:20","nodeType":"VariableDeclaration","scope":3567,"src":"862:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"path","nameLocation":"911:4:20","nodeType":"VariableDeclaration","scope":3567,"src":"892:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3556,"nodeType":"ArrayTypeName","src":"892:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"to","nameLocation":"933:2:20","nodeType":"VariableDeclaration","scope":3567,"src":"925:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3558,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"deadline","nameLocation":"953:8:20","nodeType":"VariableDeclaration","scope":3567,"src":"945:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"852:115:20"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"amounts","nameLocation":"1011:7:20","nodeType":"VariableDeclaration","scope":3567,"src":"994:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3564,"nodeType":"ArrayTypeName","src":"994:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"993:26:20"},"scope":3596,"src":"822:198:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":3584,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"1035:21:20","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"amountIn","nameLocation":"1074:8:20","nodeType":"VariableDeclaration","scope":3584,"src":"1066:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"amountOutMin","nameLocation":"1100:12:20","nodeType":"VariableDeclaration","scope":3584,"src":"1092:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"path","nameLocation":"1141:4:20","nodeType":"VariableDeclaration","scope":3584,"src":"1122:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3573,"nodeType":"ArrayTypeName","src":"1122:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"to","nameLocation":"1163:2:20","nodeType":"VariableDeclaration","scope":3584,"src":"1155:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"deadline","nameLocation":"1183:8:20","nodeType":"VariableDeclaration","scope":3584,"src":"1175:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1056:141:20"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"amounts","nameLocation":"1233:7:20","nodeType":"VariableDeclaration","scope":3584,"src":"1216:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"nodeType":"ArrayTypeName","src":"1216:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1215:26:20"},"scope":3596,"src":"1026:216:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":3595,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"1257:13:20","nodeType":"FunctionDefinition","parameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"amountIn","nameLocation":"1279:8:20","nodeType":"VariableDeclaration","scope":3595,"src":"1271:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3589,"mutability":"mutable","name":"path","nameLocation":"1308:4:20","nodeType":"VariableDeclaration","scope":3595,"src":"1289:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3588,"nodeType":"ArrayTypeName","src":"1289:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1270:43:20"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"amounts","nameLocation":"1354:7:20","nodeType":"VariableDeclaration","scope":3595,"src":"1337:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1337:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3592,"nodeType":"ArrayTypeName","src":"1337:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1336:26:20"},"scope":3596,"src":"1248:115:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4380,"src":"569:796:20","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3597,"name":"Initializable","nameLocations":["1401:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"1401:13:20"},"id":3598,"nodeType":"InheritanceSpecifier","src":"1401:13:20"},{"baseName":{"id":3599,"name":"OwnableUpgradeable","nameLocations":["1416:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"1416:18:20"},"id":3600,"nodeType":"InheritanceSpecifier","src":"1416:18:20"}],"canonicalName":"MonadSwapAggregatorV2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4379,"linearizedBaseContracts":[4379,131,672,300],"name":"MonadSwapAggregatorV2","nameLocation":"1376:21:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"e2bd3f957a9c89d5a58b7bf40f44d9249375545ef13817461d1c08e7f71e3a45","id":3614,"name":"TokenSwapped","nameLocation":"1461:12:20","nodeType":"EventDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1499:4:20","nodeType":"VariableDeclaration","scope":3614,"src":"1483:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"1529:9:20","nodeType":"VariableDeclaration","scope":3614,"src":"1513:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"1564:7:20","nodeType":"VariableDeclaration","scope":3614,"src":"1548:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3605,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3608,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1589:8:20","nodeType":"VariableDeclaration","scope":3614,"src":"1581:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3610,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1615:9:20","nodeType":"VariableDeclaration","scope":3614,"src":"1607:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1642:3:20","nodeType":"VariableDeclaration","scope":3614,"src":"1634:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1634:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1473:178:20"},"src":"1455:197:20"},{"anonymous":false,"eventSelector":"8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76","id":3618,"name":"FeeUpdated","nameLocation":"1664:10:20","nodeType":"EventDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"1683:6:20","nodeType":"VariableDeclaration","scope":3618,"src":"1675:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1675:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1674:16:20"},"src":"1658:33:20"},{"anonymous":false,"eventSelector":"e5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f","id":3622,"name":"FeeCollectorUpdated","nameLocation":"1702:19:20","nodeType":"EventDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"indexed":false,"mutability":"mutable","name":"newCollector","nameLocation":"1730:12:20","nodeType":"VariableDeclaration","scope":3622,"src":"1722:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3619,"name":"address","nodeType":"ElementaryTypeName","src":"1722:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1721:22:20"},"src":"1696:48:20"},{"constant":false,"functionSelector":"ac29e1a1","id":3625,"mutability":"mutable","name":"beanRouter","nameLocation":"1792:10:20","nodeType":"VariableDeclaration","scope":4379,"src":"1773:29:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"},"typeName":{"id":3624,"nodeType":"UserDefinedTypeName","pathNode":{"id":3623,"name":"IBeanRouter","nameLocations":["1773:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3596,"src":"1773:11:20"},"referencedDeclaration":3596,"src":"1773:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"7d86b8a5","id":3627,"mutability":"mutable","name":"wmon","nameLocation":"1823:4:20","nodeType":"VariableDeclaration","scope":4379,"src":"1808:19:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"1808:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":3633,"mutability":"constant","name":"NATIVE","nameLocation":"1858:6:20","nodeType":"VariableDeclaration","scope":4379,"src":"1833:44:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1867:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:20","typeDescriptions":{}}},"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"functionSelector":"54cf2aeb","id":3635,"mutability":"mutable","name":"swapFee","nameLocation":"1923:7:20","nodeType":"VariableDeclaration","scope":4379,"src":"1908:22:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1908:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c415b95c","id":3637,"mutability":"mutable","name":"feeCollector","nameLocation":"1985:12:20","nodeType":"VariableDeclaration","scope":4379,"src":"1970:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"af7be3d7","id":3641,"mutability":"mutable","name":"preferredPairs","nameLocation":"2035:14:20","nodeType":"VariableDeclaration","scope":4379,"src":"2003:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3640,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3638,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2003:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3639,"name":"bool","nodeType":"ElementaryTypeName","src":"2022:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":3648,"nodeType":"Block","src":"2159:39:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3645,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2169:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3647,"nodeType":"ExpressionStatement","src":"2169:22:20"}]},"documentation":{"id":3642,"nodeType":"StructuredDocumentation","src":"2092:48:20","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":3649,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[],"src":"2156:2:20"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[],"src":"2159:0:20"},"scope":4379,"src":"2145:53:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3680,"nodeType":"Block","src":"2279:179:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3658,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2289:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2289:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"ExpressionStatement","src":"2289:16:20"},{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"2315:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3663,"name":"_beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"2340:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3662,"name":"IBeanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2328:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeanRouter_$3596_$","typeString":"type(contract IBeanRouter)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2328:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"src":"2315:37:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"id":3666,"nodeType":"ExpressionStatement","src":"2315:37:20"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3667,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"2362:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3668,"name":"_wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"2369:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2362:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3670,"nodeType":"ExpressionStatement","src":"2362:12:20"},{"expression":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"2384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3330","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2394:2:20","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"2384:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3674,"nodeType":"ExpressionStatement","src":"2384:12:20"},{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3675,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"2426:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3676,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2441:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2445:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2441:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2426:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3679,"nodeType":"ExpressionStatement","src":"2426:25:20"}]},"functionSelector":"485cc955","id":3681,"implemented":true,"kind":"function","modifiers":[{"id":3656,"kind":"modifierInvocation","modifierName":{"id":3655,"name":"initializer","nameLocations":["2267:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"2267:11:20"},"nodeType":"ModifierInvocation","src":"2267:11:20"}],"name":"initialize","nameLocation":"2213:10:20","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"_beanRouter","nameLocation":"2232:11:20","nodeType":"VariableDeclaration","scope":3681,"src":"2224:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3650,"name":"address","nodeType":"ElementaryTypeName","src":"2224:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"_wmon","nameLocation":"2253:5:20","nodeType":"VariableDeclaration","scope":3681,"src":"2245:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3652,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2223:36:20"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[],"src":"2279:0:20"},"scope":4379,"src":"2204:254:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3703,"nodeType":"Block","src":"2544:127:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"2562:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2573:3:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2562:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2578:14:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":3688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2554:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2554:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3694,"nodeType":"ExpressionStatement","src":"2554:39:20"},{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3695,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"2613:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3696,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"2623:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2613:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ExpressionStatement","src":"2613:17:20"},{"eventCall":{"arguments":[{"id":3700,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"2656:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3699,"name":"FeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"2645:10:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3702,"nodeType":"EmitStatement","src":"2640:24:20"}]},"functionSelector":"34e19907","id":3704,"implemented":true,"kind":"function","modifiers":[{"id":3686,"kind":"modifierInvocation","modifierName":{"id":3685,"name":"onlyOwner","nameLocations":["2534:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2534:9:20"},"nodeType":"ModifierInvocation","src":"2534:9:20"}],"name":"setSwapFee","nameLocation":"2497:10:20","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"_newFee","nameLocation":"2516:7:20","nodeType":"VariableDeclaration","scope":3704,"src":"2508:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2507:17:20"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[],"src":"2544:0:20"},"scope":4379,"src":"2488:183:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3729,"nodeType":"Block","src":"2744:159:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"_newCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"2762:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2787:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2779:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3713,"name":"address","nodeType":"ElementaryTypeName","src":"2779:7:20","typeDescriptions":{}}},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2762:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2791:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":3711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2754:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3720,"nodeType":"ExpressionStatement","src":"2754:55:20"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3721,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"2819:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3722,"name":"_newCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"2834:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2819:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3724,"nodeType":"ExpressionStatement","src":"2819:28:20"},{"eventCall":{"arguments":[{"id":3726,"name":"_newCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"2882:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3725,"name":"FeeCollectorUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"2862:19:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3728,"nodeType":"EmitStatement","src":"2857:39:20"}]},"functionSelector":"a42dce80","id":3730,"implemented":true,"kind":"function","modifiers":[{"id":3709,"kind":"modifierInvocation","modifierName":{"id":3708,"name":"onlyOwner","nameLocations":["2734:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2734:9:20"},"nodeType":"ModifierInvocation","src":"2734:9:20"}],"name":"setFeeCollector","nameLocation":"2686:15:20","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"_newCollector","nameLocation":"2710:13:20","nodeType":"VariableDeclaration","scope":3730,"src":"2702:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3705,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2701:23:20"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[],"src":"2744:0:20"},"scope":4379,"src":"2677:226:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3763,"nodeType":"Block","src":"2999:131:20","statements":[{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"pairKey","nameLocation":"3017:7:20","nodeType":"VariableDeclaration","scope":3763,"src":"3009:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3009:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3747,"initialValue":{"arguments":[{"id":3744,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"3039:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3745,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"3047:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3743,"name":"_getPairKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"3027:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$","typeString":"function (address,address) pure returns (bytes32)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3027:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3009:45:20"},{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3748,"name":"preferredPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3064:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3759,"indexExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3755,"name":"pairKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"3103:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3095:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:20","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3095:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3087:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3751,"name":"uint160","nodeType":"ElementaryTypeName","src":"3087:7:20","typeDescriptions":{}}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3087:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3079:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3749,"name":"address","nodeType":"ElementaryTypeName","src":"3079:7:20","typeDescriptions":{}}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3064:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3760,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"3117:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3064:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"ExpressionStatement","src":"3064:59:20"}]},"functionSelector":"761de586","id":3764,"implemented":true,"kind":"function","modifiers":[{"id":3739,"kind":"modifierInvocation","modifierName":{"id":3738,"name":"onlyOwner","nameLocations":["2989:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2989:9:20"},"nodeType":"ModifierInvocation","src":"2989:9:20"}],"name":"setPreferredPair","nameLocation":"2918:16:20","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"token0","nameLocation":"2943:6:20","nodeType":"VariableDeclaration","scope":3764,"src":"2935:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3731,"name":"address","nodeType":"ElementaryTypeName","src":"2935:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"token1","nameLocation":"2959:6:20","nodeType":"VariableDeclaration","scope":3764,"src":"2951:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3733,"name":"address","nodeType":"ElementaryTypeName","src":"2951:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"status","nameLocation":"2972:6:20","nodeType":"VariableDeclaration","scope":3764,"src":"2967:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3735,"name":"bool","nodeType":"ElementaryTypeName","src":"2967:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2934:45:20"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[],"src":"2999:0:20"},"scope":4379,"src":"2909:221:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3792,"nodeType":"Block","src":"3221:155:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"3238:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3774,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3247:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3238:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3786,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3353:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3787,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"3361:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3784,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3336:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3340:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"3336:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3783,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3326:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3238:131:20","trueExpression":{"arguments":[{"arguments":[{"id":3779,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"3295:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3780,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3303:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3777,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3278:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3282:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"3278:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3776,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3268:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3268:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3772,"id":3791,"nodeType":"Return","src":"3231:138:20"}]},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"_getPairKey","nameLocation":"3145:11:20","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"token0","nameLocation":"3165:6:20","nodeType":"VariableDeclaration","scope":3793,"src":"3157:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3765,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"token1","nameLocation":"3181:6:20","nodeType":"VariableDeclaration","scope":3793,"src":"3173:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3767,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3156:32:20"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3793,"src":"3212:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3212:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3211:9:20"},"scope":4379,"src":"3136:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"3556:283:20","statements":[{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"path","nameLocation":"3583:4:20","nodeType":"VariableDeclaration","scope":3845,"src":"3566:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3807,"nodeType":"ArrayTypeName","src":"3566:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3813,"initialValue":{"arguments":[{"id":3810,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"3606:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3811,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"3617:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3809,"name":"_getOptimalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3590:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address) view returns (address[] memory)"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3590:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3566:59:20"},{"assignments":[3818],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"amounts","nameLocation":"3652:7:20","nodeType":"VariableDeclaration","scope":3845,"src":"3635:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3635:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"nodeType":"ArrayTypeName","src":"3635:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3824,"initialValue":{"arguments":[{"id":3821,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"3687:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3822,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"3697:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":3819,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"3662:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3673:13:20","memberName":"getAmountsOut","nodeType":"MemberAccess","referencedDeclaration":3595,"src":"3662:24:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory) view external returns (uint256[] memory)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3635:67:20"},{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"3712:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3826,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"3724:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3831,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3827,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"3732:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3740:6:20","memberName":"length","nodeType":"MemberAccess","src":"3732:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3749:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3732:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3724:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3712:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"3712:39:20"},{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3834,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"3783:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"3795:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3808:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3837,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3816:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3808:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3807:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3795:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3827:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3795:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3783:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"3783:49:20"}]},"functionSelector":"4aa06652","id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"3419:12:20","nodeType":"FunctionDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"fromToken","nameLocation":"3449:9:20","nodeType":"VariableDeclaration","scope":3846,"src":"3441:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3794,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"toToken","nameLocation":"3476:7:20","nodeType":"VariableDeclaration","scope":3846,"src":"3468:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3796,"name":"address","nodeType":"ElementaryTypeName","src":"3468:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"amountIn","nameLocation":"3501:8:20","nodeType":"VariableDeclaration","scope":3846,"src":"3493:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3431:84:20"},"returnParameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"amountOut","nameLocation":"3545:9:20","nodeType":"VariableDeclaration","scope":3846,"src":"3537:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3537:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:19:20"},"scope":4379,"src":"3410:429:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3984,"nodeType":"Block","src":"3947:881:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"3961:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3857,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"3974:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3961:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3863,"nodeType":"IfStatement","src":"3957:41:20","trueBody":{"expression":{"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"3982:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3860,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"3994:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3982:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3862,"nodeType":"ExpressionStatement","src":"3982:16:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3864,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4012:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3865,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"4023:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4012:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3871,"nodeType":"IfStatement","src":"4008:37:20","trueBody":{"expression":{"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3867,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4031:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3868,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"4041:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4031:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3870,"nodeType":"ExpressionStatement","src":"4031:14:20"}},{"assignments":[3873],"declarations":[{"constant":false,"id":3873,"mutability":"mutable","name":"pairKey","nameLocation":"4108:7:20","nodeType":"VariableDeclaration","scope":3984,"src":"4100:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4100:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3878,"initialValue":{"arguments":[{"id":3875,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4130:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3876,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4141:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3874,"name":"_getPairKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4118:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$","typeString":"function (address,address) pure returns (bytes32)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4100:49:20"},{"condition":{"baseExpression":{"id":3879,"name":"preferredPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"4163:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3890,"indexExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3886,"name":"pairKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"4202:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4194:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4194:7:20","typeDescriptions":{}}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4186:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3882,"name":"uint160","nodeType":"ElementaryTypeName","src":"4186:7:20","typeDescriptions":{}}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4186:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4178:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:20","typeDescriptions":{}}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4178:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4163:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"4159:234:20","trueBody":{"id":3916,"nodeType":"Block","src":"4215:178:20","statements":[{"assignments":[3895],"declarations":[{"constant":false,"id":3895,"mutability":"mutable","name":"directPath","nameLocation":"4246:10:20","nodeType":"VariableDeclaration","scope":3916,"src":"4229:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3893,"name":"address","nodeType":"ElementaryTypeName","src":"4229:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3894,"nodeType":"ArrayTypeName","src":"4229:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3901,"initialValue":{"arguments":[{"hexValue":"32","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4273:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4259:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"4263:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3897,"nodeType":"ArrayTypeName","src":"4263:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4259:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4229:46:20"},{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3902,"name":"directPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"4289:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3904,"indexExpression":{"hexValue":"30","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4300:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4289:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3905,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4305:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4289:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3907,"nodeType":"ExpressionStatement","src":"4289:25:20"},{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3908,"name":"directPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"4328:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3910,"indexExpression":{"hexValue":"31","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4339:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4328:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3911,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4344:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4328:23:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3913,"nodeType":"ExpressionStatement","src":"4328:23:20"},{"expression":{"id":3914,"name":"directPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"4372:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3855,"id":3915,"nodeType":"Return","src":"4365:17:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4442:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3919,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"4455:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4442:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4463:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3922,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"4474:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4463:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4442:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3982,"nodeType":"Block","src":"4640:182:20","statements":[{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"path","nameLocation":"4671:4:20","nodeType":"VariableDeclaration","scope":3982,"src":"4654:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"4654:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3954,"nodeType":"ArrayTypeName","src":"4654:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3961,"initialValue":{"arguments":[{"hexValue":"33","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4692:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4678:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3956,"name":"address","nodeType":"ElementaryTypeName","src":"4682:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3957,"nodeType":"ArrayTypeName","src":"4682:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4678:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4654:40:20"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3962,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4708:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3964,"indexExpression":{"hexValue":"30","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4713:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4708:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3965,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4718:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4708:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3967,"nodeType":"ExpressionStatement","src":"4708:19:20"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3968,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4741:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3970,"indexExpression":{"hexValue":"31","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4741:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3971,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"4751:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4741:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3973,"nodeType":"ExpressionStatement","src":"4741:14:20"},{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3974,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4769:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3976,"indexExpression":{"hexValue":"32","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4769:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3977,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4779:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4769:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3979,"nodeType":"ExpressionStatement","src":"4769:17:20"},{"expression":{"id":3980,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4807:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3855,"id":3981,"nodeType":"Return","src":"4800:11:20"}]},"id":3983,"nodeType":"IfStatement","src":"4438:384:20","trueBody":{"id":3950,"nodeType":"Block","src":"4480:154:20","statements":[{"assignments":[3929],"declarations":[{"constant":false,"id":3929,"mutability":"mutable","name":"path","nameLocation":"4511:4:20","nodeType":"VariableDeclaration","scope":3950,"src":"4494:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3927,"name":"address","nodeType":"ElementaryTypeName","src":"4494:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3928,"nodeType":"ArrayTypeName","src":"4494:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3935,"initialValue":{"arguments":[{"hexValue":"32","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4532:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4518:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3930,"name":"address","nodeType":"ElementaryTypeName","src":"4522:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3931,"nodeType":"ArrayTypeName","src":"4522:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4518:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4494:40:20"},{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3936,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4548:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3938,"indexExpression":{"hexValue":"30","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4553:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4548:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3939,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4558:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4548:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3941,"nodeType":"ExpressionStatement","src":"4548:19:20"},{"expression":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3942,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4581:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3944,"indexExpression":{"hexValue":"31","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4586:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4581:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3945,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4591:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4581:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3947,"nodeType":"ExpressionStatement","src":"4581:17:20"},{"expression":{"id":3948,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4619:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3855,"id":3949,"nodeType":"Return","src":"4612:11:20"}]}}]},"id":3985,"implemented":true,"kind":"function","modifiers":[],"name":"_getOptimalPath","nameLocation":"3854:15:20","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"fromToken","nameLocation":"3878:9:20","nodeType":"VariableDeclaration","scope":3985,"src":"3870:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"3870:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"toToken","nameLocation":"3897:7:20","nodeType":"VariableDeclaration","scope":3985,"src":"3889:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"3889:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3869:36:20"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"3929:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"3929:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3853,"nodeType":"ArrayTypeName","src":"3929:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3928:18:20"},"scope":4379,"src":"3845:983:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"5052:790:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"5070:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5081:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5070:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5084:20:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":3998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5062:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5062:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"ExpressionStatement","src":"5062:43:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4006,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5123:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4007,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5136:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5123:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616d6520746f6b656e73","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5145:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""},"value":"Same tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""}],"id":4005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5115:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5115:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4011,"nodeType":"ExpressionStatement","src":"5115:44:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5174:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4013,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5187:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5174:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5358:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4033,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5369:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5358:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4053,"nodeType":"Block","src":"5472:92:20","statements":[{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"5486:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4046,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5510:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4047,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5521:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4048,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"5530:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4049,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"5540:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4045,"name":"_swapTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"5498:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5486:67:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"5486:67:20"}]},"id":4054,"nodeType":"IfStatement","src":"5354:210:20","trueBody":{"id":4043,"nodeType":"Block","src":"5377:89:20","statements":[{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"5391:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4037,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5421:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4038,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"5432:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4039,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"5442:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4036,"name":"_swapTokensForMon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"5403:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) returns (uint256)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5403:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5391:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"5391:64:20"}]}},"id":4055,"nodeType":"IfStatement","src":"5170:394:20","trueBody":{"id":4031,"nodeType":"Block","src":"5195:153:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5217:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5221:5:20","memberName":"value","nodeType":"MemberAccess","src":"5217:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4018,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"5230:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5217:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d4f4e20616d6f756e74","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5240:20:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d","typeString":"literal_string \"Invalid MON amount\""},"value":"Invalid MON amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d","typeString":"literal_string \"Invalid MON amount\""}],"id":4015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5209:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4022,"nodeType":"ExpressionStatement","src":"5209:52:20"},{"expression":{"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"5275:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4025,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5305:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4026,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"5314:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4027,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"5324:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4024,"name":"_swapMonForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"5287:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) returns (uint256)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5287:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5275:62:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4030,"nodeType":"ExpressionStatement","src":"5275:62:20"}]}},{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"fee","nameLocation":"5605:3:20","nodeType":"VariableDeclaration","scope":4091,"src":"5597:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5597:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"5611:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4059,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"5623:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5611:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5633:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5611:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5597:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"5652:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5658:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5652:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5663:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4068,"name":"NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5674:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5663:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5652:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4080,"nodeType":"IfStatement","src":"5648:102:20","trueBody":{"id":4079,"nodeType":"Block","src":"5682:68:20","statements":[{"expression":{"arguments":[{"id":4075,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"5721:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4076,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"5735:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4072,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5703:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4071,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"5696:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3535_$","typeString":"type(contract IERC20)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3535","typeString":"contract IERC20"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5712:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"5696:24:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4078,"nodeType":"ExpressionStatement","src":"5696:43:20"}]}},{"eventCall":{"arguments":[{"expression":{"id":4082,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5778:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5782:6:20","memberName":"sender","nodeType":"MemberAccess","src":"5778:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4084,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5790:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4085,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"5801:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4086,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"5810:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4087,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"5820:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4088,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"5831:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4081,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"5765:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256,uint256)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5765:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4090,"nodeType":"EmitStatement","src":"5760:75:20"}]},"functionSelector":"fe029156","id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"4888:4:20","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"fromToken","nameLocation":"4910:9:20","nodeType":"VariableDeclaration","scope":4092,"src":"4902:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3986,"name":"address","nodeType":"ElementaryTypeName","src":"4902:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"toToken","nameLocation":"4937:7:20","nodeType":"VariableDeclaration","scope":4092,"src":"4929:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"4929:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"amountIn","nameLocation":"4962:8:20","nodeType":"VariableDeclaration","scope":4092,"src":"4954:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4954:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"amountOutMin","nameLocation":"4988:12:20","nodeType":"VariableDeclaration","scope":4092,"src":"4980:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"4980:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4892:114:20"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"amountOut","nameLocation":"5041:9:20","nodeType":"VariableDeclaration","scope":4092,"src":"5033:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"5033:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5032:19:20"},"scope":4379,"src":"4879:963:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4156,"nodeType":"Block","src":"6038:444:20","statements":[{"assignments":[4107],"declarations":[{"constant":false,"id":4107,"mutability":"mutable","name":"path","nameLocation":"6087:4:20","nodeType":"VariableDeclaration","scope":4156,"src":"6070:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4106,"nodeType":"ArrayTypeName","src":"6070:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4113,"initialValue":{"arguments":[{"hexValue":"32","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6108:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6094:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4108,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4109,"nodeType":"ArrayTypeName","src":"6098:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6070:40:20"},{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4114,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"6120:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4116,"indexExpression":{"hexValue":"30","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6125:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6120:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4117,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"6130:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6120:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4119,"nodeType":"ExpressionStatement","src":"6120:14:20"},{"expression":{"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4120,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"6144:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4122,"indexExpression":{"hexValue":"31","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6149:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6144:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4123,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"6154:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6144:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4125,"nodeType":"ExpressionStatement","src":"6144:17:20"},{"assignments":[4130],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"amounts","nameLocation":"6218:7:20","nodeType":"VariableDeclaration","scope":4156,"src":"6201:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6201:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4129,"nodeType":"ArrayTypeName","src":"6201:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4144,"initialValue":{"arguments":[{"id":4135,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"6291:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4136,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"6317:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":4137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6335:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6335:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4139,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6359:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6365:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"6359:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6377:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"6359:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4131,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"6228:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:21:20","memberName":"swapExactETHForTokens","nodeType":"MemberAccess","referencedDeclaration":3567,"src":"6228:32:20","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4133,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"6268:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6228:49:20","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value","typeString":"function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6228:163:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6201:190:20"},{"assignments":[4146],"declarations":[{"constant":false,"id":4146,"mutability":"mutable","name":"amountOut","nameLocation":"6410:9:20","nodeType":"VariableDeclaration","scope":4156,"src":"6402:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6402:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4153,"initialValue":{"baseExpression":{"id":4147,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"6422:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4152,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4148,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"6430:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6438:6:20","memberName":"length","nodeType":"MemberAccess","src":"6430:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6447:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6430:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6422:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6402:47:20"},{"expression":{"id":4154,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"6466:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4102,"id":4155,"nodeType":"Return","src":"6459:16:20"}]},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"_swapMonForTokens","nameLocation":"5906:17:20","nodeType":"FunctionDefinition","parameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"toToken","nameLocation":"5941:7:20","nodeType":"VariableDeclaration","scope":4157,"src":"5933:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4093,"name":"address","nodeType":"ElementaryTypeName","src":"5933:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4096,"mutability":"mutable","name":"amountIn","nameLocation":"5966:8:20","nodeType":"VariableDeclaration","scope":4157,"src":"5958:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5958:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"amountOutMin","nameLocation":"5992:12:20","nodeType":"VariableDeclaration","scope":4157,"src":"5984:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5923:87:20"},"returnParameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"6029:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"6029:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6028:9:20"},"scope":4379,"src":"5897:585:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"6680:726:20","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6779:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6783:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6779:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4177,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6799:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MonadSwapAggregatorV2_$4379","typeString":"contract MonadSwapAggregatorV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MonadSwapAggregatorV2_$4379","typeString":"contract MonadSwapAggregatorV2"}],"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6791:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4175,"name":"address","nodeType":"ElementaryTypeName","src":"6791:7:20","typeDescriptions":{}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6791:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4179,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"6806:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4170,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"6755:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4169,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"6748:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3535_$","typeString":"type(contract IERC20)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6748:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3535","typeString":"contract IERC20"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"6748:30:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6748:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722066726f6d206661696c6564","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""},"value":"Transfer from failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""}],"id":4168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6727:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6727:134:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4183,"nodeType":"ExpressionStatement","src":"6727:134:20"},{"expression":{"arguments":[{"arguments":[{"id":4190,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"6932:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}],"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6924:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4188,"name":"address","nodeType":"ElementaryTypeName","src":"6924:7:20","typeDescriptions":{}}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4192,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"6945:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4185,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"6905:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4184,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"6898:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3535_$","typeString":"type(contract IERC20)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3535","typeString":"contract IERC20"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6916:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"6898:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4194,"nodeType":"ExpressionStatement","src":"6898:56:20"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"path","nameLocation":"7004:4:20","nodeType":"VariableDeclaration","scope":4247,"src":"6987:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4197,"name":"address","nodeType":"ElementaryTypeName","src":"6987:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4198,"nodeType":"ArrayTypeName","src":"6987:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4205,"initialValue":{"arguments":[{"hexValue":"32","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7025:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7011:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"7015:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4201,"nodeType":"ArrayTypeName","src":"7015:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6987:40:20"},{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4206,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"7037:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4208,"indexExpression":{"hexValue":"30","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7037:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4209,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7047:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7037:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4211,"nodeType":"ExpressionStatement","src":"7037:19:20"},{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4212,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"7066:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4214,"indexExpression":{"hexValue":"31","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7071:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7066:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4215,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"7076:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7066:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4217,"nodeType":"ExpressionStatement","src":"7066:14:20"},{"assignments":[4222],"declarations":[{"constant":false,"id":4222,"mutability":"mutable","name":"amounts","nameLocation":"7137:7:20","nodeType":"VariableDeclaration","scope":4247,"src":"7120:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"7120:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4221,"nodeType":"ArrayTypeName","src":"7120:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4235,"initialValue":{"arguments":[{"id":4225,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"7193:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4226,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"7215:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4227,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"7241:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":4228,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7259:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7263:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7259:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4230,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7283:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7289:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"7283:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7301:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"7283:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4223,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"7147:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7158:21:20","memberName":"swapExactTokensForETH","nodeType":"MemberAccess","referencedDeclaration":3584,"src":"7147:32:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7147:168:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7120:195:20"},{"assignments":[4237],"declarations":[{"constant":false,"id":4237,"mutability":"mutable","name":"amountOut","nameLocation":"7334:9:20","nodeType":"VariableDeclaration","scope":4247,"src":"7326:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"7326:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4244,"initialValue":{"baseExpression":{"id":4238,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"7346:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4243,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4239,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"7354:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7362:6:20","memberName":"length","nodeType":"MemberAccess","src":"7354:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7371:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7354:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7346:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7326:47:20"},{"expression":{"id":4245,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"7390:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4167,"id":4246,"nodeType":"Return","src":"7383:16:20"}]},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokensForMon","nameLocation":"6546:17:20","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"fromToken","nameLocation":"6581:9:20","nodeType":"VariableDeclaration","scope":4248,"src":"6573:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4158,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"amountIn","nameLocation":"6608:8:20","nodeType":"VariableDeclaration","scope":4248,"src":"6600:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6600:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"amountOutMin","nameLocation":"6634:12:20","nodeType":"VariableDeclaration","scope":4248,"src":"6626:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"6626:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6563:89:20"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4248,"src":"6671:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6671:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6670:9:20"},"scope":4379,"src":"6537:869:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4327,"nodeType":"Block","src":"7622:690:20","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7721:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7725:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7721:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4270,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7741:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MonadSwapAggregatorV2_$4379","typeString":"contract MonadSwapAggregatorV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MonadSwapAggregatorV2_$4379","typeString":"contract MonadSwapAggregatorV2"}],"id":4269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7733:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4268,"name":"address","nodeType":"ElementaryTypeName","src":"7733:7:20","typeDescriptions":{}}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7733:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4272,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"7748:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4263,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"7697:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4262,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"7690:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3535_$","typeString":"type(contract IERC20)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3535","typeString":"contract IERC20"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7708:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"7690:30:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722066726f6d206661696c6564","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7771:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""},"value":"Transfer from failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717","typeString":"literal_string \"Transfer from failed\""}],"id":4261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:134:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"ExpressionStatement","src":"7669:134:20"},{"expression":{"arguments":[{"arguments":[{"id":4283,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"7874:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}],"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4281,"name":"address","nodeType":"ElementaryTypeName","src":"7866:7:20","typeDescriptions":{}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7866:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4285,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"7887:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4278,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"7847:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4277,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"7840:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3535_$","typeString":"type(contract IERC20)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3535","typeString":"contract IERC20"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7858:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"7840:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"ExpressionStatement","src":"7840:56:20"},{"assignments":[4292],"declarations":[{"constant":false,"id":4292,"mutability":"mutable","name":"path","nameLocation":"7946:4:20","nodeType":"VariableDeclaration","scope":4327,"src":"7929:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4290,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4291,"nodeType":"ArrayTypeName","src":"7929:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4297,"initialValue":{"arguments":[{"id":4294,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"7969:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4295,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"7980:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4293,"name":"_getOptimalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7953:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address) view returns (address[] memory)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7953:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7929:59:20"},{"assignments":[4302],"declarations":[{"constant":false,"id":4302,"mutability":"mutable","name":"amounts","nameLocation":"8040:7:20","nodeType":"VariableDeclaration","scope":4327,"src":"8023:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"8023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4301,"nodeType":"ArrayTypeName","src":"8023:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4315,"initialValue":{"arguments":[{"id":4305,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"8099:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4306,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"8121:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4307,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"8147:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":4308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8165:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8169:6:20","memberName":"sender","nodeType":"MemberAccess","src":"8165:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4310,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8189:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8195:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"8189:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8207:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"8189:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4303,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"8050:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8061:24:20","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"8050:35:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:171:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8023:198:20"},{"assignments":[4317],"declarations":[{"constant":false,"id":4317,"mutability":"mutable","name":"amountOut","nameLocation":"8240:9:20","nodeType":"VariableDeclaration","scope":4327,"src":"8232:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8232:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4324,"initialValue":{"baseExpression":{"id":4318,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"8252:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4323,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4319,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"8260:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8268:6:20","memberName":"length","nodeType":"MemberAccess","src":"8260:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8277:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8260:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8252:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8232:47:20"},{"expression":{"id":4325,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8296:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4260,"id":4326,"nodeType":"Return","src":"8289:16:20"}]},"id":4328,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokens","nameLocation":"7469:11:20","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"fromToken","nameLocation":"7498:9:20","nodeType":"VariableDeclaration","scope":4328,"src":"7490:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"7490:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"toToken","nameLocation":"7525:7:20","nodeType":"VariableDeclaration","scope":4328,"src":"7517:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4251,"name":"address","nodeType":"ElementaryTypeName","src":"7517:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"amountIn","nameLocation":"7550:8:20","nodeType":"VariableDeclaration","scope":4328,"src":"7542:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"7542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"amountOutMin","nameLocation":"7576:12:20","nodeType":"VariableDeclaration","scope":4328,"src":"7568:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"7568:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7480:114:20"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4328,"src":"7613:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7613:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7612:9:20"},"scope":4379,"src":"7460:852:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"8345:2:20","statements":[]},"id":4332,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[],"src":"8325:2:20"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[],"src":"8345:0:20"},"scope":4379,"src":"8318:29:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4355,"nodeType":"Block","src":"8441:122:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"_newRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"8459:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8481:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8473:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4341,"name":"address","nodeType":"ElementaryTypeName","src":"8473:7:20","typeDescriptions":{}}},"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8473:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8459:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726f757465722061646472657373","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8485:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b","typeString":"literal_string \"Invalid router address\""},"value":"Invalid router address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b","typeString":"literal_string \"Invalid router address\""}],"id":4339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8451:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8451:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4348,"nodeType":"ExpressionStatement","src":"8451:59:20"},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"beanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"8520:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4351,"name":"_newRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"8545:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4350,"name":"IBeanRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"8533:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeanRouter_$3596_$","typeString":"type(contract IBeanRouter)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8533:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"src":"8520:36:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBeanRouter_$3596","typeString":"contract IBeanRouter"}},"id":4354,"nodeType":"ExpressionStatement","src":"8520:36:20"}]},"functionSelector":"858845d9","id":4356,"implemented":true,"kind":"function","modifiers":[{"id":4337,"kind":"modifierInvocation","modifierName":{"id":4336,"name":"onlyOwner","nameLocations":["8431:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8431:9:20"},"nodeType":"ModifierInvocation","src":"8431:9:20"}],"name":"updateBeanRouter","nameLocation":"8385:16:20","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"_newRouter","nameLocation":"8410:10:20","nodeType":"VariableDeclaration","scope":4356,"src":"8402:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"8402:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8401:20:20"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[],"src":"8441:0:20"},"scope":4379,"src":"8376:187:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4377,"nodeType":"Block","src":"8626:97:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"_newWMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"8644:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4365,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:20","typeDescriptions":{}}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8656:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8644:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420574d4f4e2061646472657373","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8668:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241","typeString":"literal_string \"Invalid WMON address\""},"value":"Invalid WMON address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241","typeString":"literal_string \"Invalid WMON address\""}],"id":4363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8636:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8636:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"ExpressionStatement","src":"8636:55:20"},{"expression":{"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4373,"name":"wmon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"8701:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4374,"name":"_newWMON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"8708:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8701:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4376,"nodeType":"ExpressionStatement","src":"8701:15:20"}]},"functionSelector":"9b69c7c8","id":4378,"implemented":true,"kind":"function","modifiers":[{"id":4361,"kind":"modifierInvocation","modifierName":{"id":4360,"name":"onlyOwner","nameLocations":["8616:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8616:9:20"},"nodeType":"ModifierInvocation","src":"8616:9:20"}],"name":"updateWMON","nameLocation":"8578:10:20","nodeType":"FunctionDefinition","parameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"_newWMON","nameLocation":"8597:8:20","nodeType":"VariableDeclaration","scope":4378,"src":"8589:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4357,"name":"address","nodeType":"ElementaryTypeName","src":"8589:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8588:18:20"},"returnParameters":{"id":4362,"nodeType":"ParameterList","parameters":[],"src":"8626:0:20"},"scope":4379,"src":"8569:154:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4380,"src":"1367:7358:20","usedErrors":[],"usedEvents":[16,146,3614,3618,3622]}],"src":"32:8693:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":671,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000816000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"194:9180:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000816000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"194:9180:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":671,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":680,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_840":{"entryPoint":null,"id":840,"parameterSlots":2,"returnSlots":0},"@_revert_2007":{"entryPoint":634,"id":2007,"parameterSlots":2,"returnSlots":0},"@_setImplementation_907":{"entryPoint":205,"id":907,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_952":{"entryPoint":53,"id":952,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_922":{"entryPoint":97,"id":922,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1895":{"entryPoint":161,"id":1895,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1924":{"entryPoint":384,"id":1924,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2062":{"entryPoint":null,"id":2062,"parameterSlots":1,"returnSlots":1},"@isContract_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1963":{"entryPoint":505,"id":1963,"parameterSlots":4,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":734,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":698,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":676,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2931:21","nodeType":"YulBlock","src":"0:2931:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"46:95:21","nodeType":"YulBlock","src":"46:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:21","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:21","nodeType":"YulLiteral","src":"70:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:21","nodeType":"YulLiteral","src":"75:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:21","nodeType":"YulIdentifier","src":"66:3:21"},"nativeSrc":"66:20:21","nodeType":"YulFunctionCall","src":"66:20:21"}],"functionName":{"name":"mstore","nativeSrc":"56:6:21","nodeType":"YulIdentifier","src":"56:6:21"},"nativeSrc":"56:31:21","nodeType":"YulFunctionCall","src":"56:31:21"},"nativeSrc":"56:31:21","nodeType":"YulExpressionStatement","src":"56:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:21","nodeType":"YulLiteral","src":"103:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:21","nodeType":"YulLiteral","src":"106:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:21","nodeType":"YulIdentifier","src":"96:6:21"},"nativeSrc":"96:15:21","nodeType":"YulFunctionCall","src":"96:15:21"},"nativeSrc":"96:15:21","nodeType":"YulExpressionStatement","src":"96:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:21","nodeType":"YulLiteral","src":"127:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:21","nodeType":"YulLiteral","src":"130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:21","nodeType":"YulIdentifier","src":"120:6:21"},"nativeSrc":"120:15:21","nodeType":"YulFunctionCall","src":"120:15:21"},"nativeSrc":"120:15:21","nodeType":"YulExpressionStatement","src":"120:15:21"}]},"name":"panic_error_0x41","nativeSrc":"14:127:21","nodeType":"YulFunctionDefinition","src":"14:127:21"},{"body":{"nativeSrc":"212:184:21","nodeType":"YulBlock","src":"212:184:21","statements":[{"nativeSrc":"222:10:21","nodeType":"YulVariableDeclaration","src":"222:10:21","value":{"kind":"number","nativeSrc":"231:1:21","nodeType":"YulLiteral","src":"231:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"226:1:21","nodeType":"YulTypedName","src":"226:1:21","type":""}]},{"body":{"nativeSrc":"291:63:21","nodeType":"YulBlock","src":"291:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"316:3:21","nodeType":"YulIdentifier","src":"316:3:21"},{"name":"i","nativeSrc":"321:1:21","nodeType":"YulIdentifier","src":"321:1:21"}],"functionName":{"name":"add","nativeSrc":"312:3:21","nodeType":"YulIdentifier","src":"312:3:21"},"nativeSrc":"312:11:21","nodeType":"YulFunctionCall","src":"312:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"335:3:21","nodeType":"YulIdentifier","src":"335:3:21"},{"name":"i","nativeSrc":"340:1:21","nodeType":"YulIdentifier","src":"340:1:21"}],"functionName":{"name":"add","nativeSrc":"331:3:21","nodeType":"YulIdentifier","src":"331:3:21"},"nativeSrc":"331:11:21","nodeType":"YulFunctionCall","src":"331:11:21"}],"functionName":{"name":"mload","nativeSrc":"325:5:21","nodeType":"YulIdentifier","src":"325:5:21"},"nativeSrc":"325:18:21","nodeType":"YulFunctionCall","src":"325:18:21"}],"functionName":{"name":"mstore","nativeSrc":"305:6:21","nodeType":"YulIdentifier","src":"305:6:21"},"nativeSrc":"305:39:21","nodeType":"YulFunctionCall","src":"305:39:21"},"nativeSrc":"305:39:21","nodeType":"YulExpressionStatement","src":"305:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"252:1:21","nodeType":"YulIdentifier","src":"252:1:21"},{"name":"length","nativeSrc":"255:6:21","nodeType":"YulIdentifier","src":"255:6:21"}],"functionName":{"name":"lt","nativeSrc":"249:2:21","nodeType":"YulIdentifier","src":"249:2:21"},"nativeSrc":"249:13:21","nodeType":"YulFunctionCall","src":"249:13:21"},"nativeSrc":"241:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"263:19:21","nodeType":"YulBlock","src":"263:19:21","statements":[{"nativeSrc":"265:15:21","nodeType":"YulAssignment","src":"265:15:21","value":{"arguments":[{"name":"i","nativeSrc":"274:1:21","nodeType":"YulIdentifier","src":"274:1:21"},{"kind":"number","nativeSrc":"277:2:21","nodeType":"YulLiteral","src":"277:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"270:3:21","nodeType":"YulIdentifier","src":"270:3:21"},"nativeSrc":"270:10:21","nodeType":"YulFunctionCall","src":"270:10:21"},"variableNames":[{"name":"i","nativeSrc":"265:1:21","nodeType":"YulIdentifier","src":"265:1:21"}]}]},"pre":{"nativeSrc":"245:3:21","nodeType":"YulBlock","src":"245:3:21","statements":[]},"src":"241:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"374:3:21","nodeType":"YulIdentifier","src":"374:3:21"},{"name":"length","nativeSrc":"379:6:21","nodeType":"YulIdentifier","src":"379:6:21"}],"functionName":{"name":"add","nativeSrc":"370:3:21","nodeType":"YulIdentifier","src":"370:3:21"},"nativeSrc":"370:16:21","nodeType":"YulFunctionCall","src":"370:16:21"},{"kind":"number","nativeSrc":"388:1:21","nodeType":"YulLiteral","src":"388:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"363:6:21","nodeType":"YulIdentifier","src":"363:6:21"},"nativeSrc":"363:27:21","nodeType":"YulFunctionCall","src":"363:27:21"},"nativeSrc":"363:27:21","nodeType":"YulExpressionStatement","src":"363:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"146:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"190:3:21","nodeType":"YulTypedName","src":"190:3:21","type":""},{"name":"dst","nativeSrc":"195:3:21","nodeType":"YulTypedName","src":"195:3:21","type":""},{"name":"length","nativeSrc":"200:6:21","nodeType":"YulTypedName","src":"200:6:21","type":""}],"src":"146:250:21"},{"body":{"nativeSrc":"508:956:21","nodeType":"YulBlock","src":"508:956:21","statements":[{"body":{"nativeSrc":"554:16:21","nodeType":"YulBlock","src":"554:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:21","nodeType":"YulLiteral","src":"563:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:21","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:21","nodeType":"YulIdentifier","src":"556:6:21"},"nativeSrc":"556:12:21","nodeType":"YulFunctionCall","src":"556:12:21"},"nativeSrc":"556:12:21","nodeType":"YulExpressionStatement","src":"556:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"529:7:21","nodeType":"YulIdentifier","src":"529:7:21"},{"name":"headStart","nativeSrc":"538:9:21","nodeType":"YulIdentifier","src":"538:9:21"}],"functionName":{"name":"sub","nativeSrc":"525:3:21","nodeType":"YulIdentifier","src":"525:3:21"},"nativeSrc":"525:23:21","nodeType":"YulFunctionCall","src":"525:23:21"},{"kind":"number","nativeSrc":"550:2:21","nodeType":"YulLiteral","src":"550:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"521:3:21","nodeType":"YulIdentifier","src":"521:3:21"},"nativeSrc":"521:32:21","nodeType":"YulFunctionCall","src":"521:32:21"},"nativeSrc":"518:52:21","nodeType":"YulIf","src":"518:52:21"},{"nativeSrc":"579:29:21","nodeType":"YulVariableDeclaration","src":"579:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"598:9:21","nodeType":"YulIdentifier","src":"598:9:21"}],"functionName":{"name":"mload","nativeSrc":"592:5:21","nodeType":"YulIdentifier","src":"592:5:21"},"nativeSrc":"592:16:21","nodeType":"YulFunctionCall","src":"592:16:21"},"variables":[{"name":"value","nativeSrc":"583:5:21","nodeType":"YulTypedName","src":"583:5:21","type":""}]},{"body":{"nativeSrc":"671:16:21","nodeType":"YulBlock","src":"671:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"680:1:21","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"683:1:21","nodeType":"YulLiteral","src":"683:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"673:6:21","nodeType":"YulIdentifier","src":"673:6:21"},"nativeSrc":"673:12:21","nodeType":"YulFunctionCall","src":"673:12:21"},"nativeSrc":"673:12:21","nodeType":"YulExpressionStatement","src":"673:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"630:5:21","nodeType":"YulIdentifier","src":"630:5:21"},{"arguments":[{"name":"value","nativeSrc":"641:5:21","nodeType":"YulIdentifier","src":"641:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"656:3:21","nodeType":"YulLiteral","src":"656:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"661:1:21","nodeType":"YulLiteral","src":"661:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"652:3:21","nodeType":"YulIdentifier","src":"652:3:21"},"nativeSrc":"652:11:21","nodeType":"YulFunctionCall","src":"652:11:21"},{"kind":"number","nativeSrc":"665:1:21","nodeType":"YulLiteral","src":"665:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"648:3:21","nodeType":"YulIdentifier","src":"648:3:21"},"nativeSrc":"648:19:21","nodeType":"YulFunctionCall","src":"648:19:21"}],"functionName":{"name":"and","nativeSrc":"637:3:21","nodeType":"YulIdentifier","src":"637:3:21"},"nativeSrc":"637:31:21","nodeType":"YulFunctionCall","src":"637:31:21"}],"functionName":{"name":"eq","nativeSrc":"627:2:21","nodeType":"YulIdentifier","src":"627:2:21"},"nativeSrc":"627:42:21","nodeType":"YulFunctionCall","src":"627:42:21"}],"functionName":{"name":"iszero","nativeSrc":"620:6:21","nodeType":"YulIdentifier","src":"620:6:21"},"nativeSrc":"620:50:21","nodeType":"YulFunctionCall","src":"620:50:21"},"nativeSrc":"617:70:21","nodeType":"YulIf","src":"617:70:21"},{"nativeSrc":"696:15:21","nodeType":"YulAssignment","src":"696:15:21","value":{"name":"value","nativeSrc":"706:5:21","nodeType":"YulIdentifier","src":"706:5:21"},"variableNames":[{"name":"value0","nativeSrc":"696:6:21","nodeType":"YulIdentifier","src":"696:6:21"}]},{"nativeSrc":"720:39:21","nodeType":"YulVariableDeclaration","src":"720:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"744:9:21","nodeType":"YulIdentifier","src":"744:9:21"},{"kind":"number","nativeSrc":"755:2:21","nodeType":"YulLiteral","src":"755:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"740:3:21","nodeType":"YulIdentifier","src":"740:3:21"},"nativeSrc":"740:18:21","nodeType":"YulFunctionCall","src":"740:18:21"}],"functionName":{"name":"mload","nativeSrc":"734:5:21","nodeType":"YulIdentifier","src":"734:5:21"},"nativeSrc":"734:25:21","nodeType":"YulFunctionCall","src":"734:25:21"},"variables":[{"name":"offset","nativeSrc":"724:6:21","nodeType":"YulTypedName","src":"724:6:21","type":""}]},{"nativeSrc":"768:28:21","nodeType":"YulVariableDeclaration","src":"768:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"786:2:21","nodeType":"YulLiteral","src":"786:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"790:1:21","nodeType":"YulLiteral","src":"790:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"782:3:21","nodeType":"YulIdentifier","src":"782:3:21"},"nativeSrc":"782:10:21","nodeType":"YulFunctionCall","src":"782:10:21"},{"kind":"number","nativeSrc":"794:1:21","nodeType":"YulLiteral","src":"794:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"778:3:21","nodeType":"YulIdentifier","src":"778:3:21"},"nativeSrc":"778:18:21","nodeType":"YulFunctionCall","src":"778:18:21"},"variables":[{"name":"_1","nativeSrc":"772:2:21","nodeType":"YulTypedName","src":"772:2:21","type":""}]},{"body":{"nativeSrc":"823:16:21","nodeType":"YulBlock","src":"823:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"832:1:21","nodeType":"YulLiteral","src":"832:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"835:1:21","nodeType":"YulLiteral","src":"835:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"825:6:21","nodeType":"YulIdentifier","src":"825:6:21"},"nativeSrc":"825:12:21","nodeType":"YulFunctionCall","src":"825:12:21"},"nativeSrc":"825:12:21","nodeType":"YulExpressionStatement","src":"825:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"811:6:21","nodeType":"YulIdentifier","src":"811:6:21"},{"name":"_1","nativeSrc":"819:2:21","nodeType":"YulIdentifier","src":"819:2:21"}],"functionName":{"name":"gt","nativeSrc":"808:2:21","nodeType":"YulIdentifier","src":"808:2:21"},"nativeSrc":"808:14:21","nodeType":"YulFunctionCall","src":"808:14:21"},"nativeSrc":"805:34:21","nodeType":"YulIf","src":"805:34:21"},{"nativeSrc":"848:32:21","nodeType":"YulVariableDeclaration","src":"848:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"862:9:21","nodeType":"YulIdentifier","src":"862:9:21"},{"name":"offset","nativeSrc":"873:6:21","nodeType":"YulIdentifier","src":"873:6:21"}],"functionName":{"name":"add","nativeSrc":"858:3:21","nodeType":"YulIdentifier","src":"858:3:21"},"nativeSrc":"858:22:21","nodeType":"YulFunctionCall","src":"858:22:21"},"variables":[{"name":"_2","nativeSrc":"852:2:21","nodeType":"YulTypedName","src":"852:2:21","type":""}]},{"body":{"nativeSrc":"928:16:21","nodeType":"YulBlock","src":"928:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"937:1:21","nodeType":"YulLiteral","src":"937:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"940:1:21","nodeType":"YulLiteral","src":"940:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"930:6:21","nodeType":"YulIdentifier","src":"930:6:21"},"nativeSrc":"930:12:21","nodeType":"YulFunctionCall","src":"930:12:21"},"nativeSrc":"930:12:21","nodeType":"YulExpressionStatement","src":"930:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"907:2:21","nodeType":"YulIdentifier","src":"907:2:21"},{"kind":"number","nativeSrc":"911:4:21","nodeType":"YulLiteral","src":"911:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"903:3:21","nodeType":"YulIdentifier","src":"903:3:21"},"nativeSrc":"903:13:21","nodeType":"YulFunctionCall","src":"903:13:21"},{"name":"dataEnd","nativeSrc":"918:7:21","nodeType":"YulIdentifier","src":"918:7:21"}],"functionName":{"name":"slt","nativeSrc":"899:3:21","nodeType":"YulIdentifier","src":"899:3:21"},"nativeSrc":"899:27:21","nodeType":"YulFunctionCall","src":"899:27:21"}],"functionName":{"name":"iszero","nativeSrc":"892:6:21","nodeType":"YulIdentifier","src":"892:6:21"},"nativeSrc":"892:35:21","nodeType":"YulFunctionCall","src":"892:35:21"},"nativeSrc":"889:55:21","nodeType":"YulIf","src":"889:55:21"},{"nativeSrc":"953:19:21","nodeType":"YulVariableDeclaration","src":"953:19:21","value":{"arguments":[{"name":"_2","nativeSrc":"969:2:21","nodeType":"YulIdentifier","src":"969:2:21"}],"functionName":{"name":"mload","nativeSrc":"963:5:21","nodeType":"YulIdentifier","src":"963:5:21"},"nativeSrc":"963:9:21","nodeType":"YulFunctionCall","src":"963:9:21"},"variables":[{"name":"_3","nativeSrc":"957:2:21","nodeType":"YulTypedName","src":"957:2:21","type":""}]},{"body":{"nativeSrc":"995:22:21","nodeType":"YulBlock","src":"995:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"997:16:21","nodeType":"YulIdentifier","src":"997:16:21"},"nativeSrc":"997:18:21","nodeType":"YulFunctionCall","src":"997:18:21"},"nativeSrc":"997:18:21","nodeType":"YulExpressionStatement","src":"997:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"987:2:21","nodeType":"YulIdentifier","src":"987:2:21"},{"name":"_1","nativeSrc":"991:2:21","nodeType":"YulIdentifier","src":"991:2:21"}],"functionName":{"name":"gt","nativeSrc":"984:2:21","nodeType":"YulIdentifier","src":"984:2:21"},"nativeSrc":"984:10:21","nodeType":"YulFunctionCall","src":"984:10:21"},"nativeSrc":"981:36:21","nodeType":"YulIf","src":"981:36:21"},{"nativeSrc":"1026:17:21","nodeType":"YulVariableDeclaration","src":"1026:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"1040:2:21","nodeType":"YulLiteral","src":"1040:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1036:3:21","nodeType":"YulIdentifier","src":"1036:3:21"},"nativeSrc":"1036:7:21","nodeType":"YulFunctionCall","src":"1036:7:21"},"variables":[{"name":"_4","nativeSrc":"1030:2:21","nodeType":"YulTypedName","src":"1030:2:21","type":""}]},{"nativeSrc":"1052:23:21","nodeType":"YulVariableDeclaration","src":"1052:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"1072:2:21","nodeType":"YulLiteral","src":"1072:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1066:5:21","nodeType":"YulIdentifier","src":"1066:5:21"},"nativeSrc":"1066:9:21","nodeType":"YulFunctionCall","src":"1066:9:21"},"variables":[{"name":"memPtr","nativeSrc":"1056:6:21","nodeType":"YulTypedName","src":"1056:6:21","type":""}]},{"nativeSrc":"1084:71:21","nodeType":"YulVariableDeclaration","src":"1084:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1106:6:21","nodeType":"YulIdentifier","src":"1106:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"1130:2:21","nodeType":"YulIdentifier","src":"1130:2:21"},{"kind":"number","nativeSrc":"1134:4:21","nodeType":"YulLiteral","src":"1134:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1126:3:21","nodeType":"YulIdentifier","src":"1126:3:21"},"nativeSrc":"1126:13:21","nodeType":"YulFunctionCall","src":"1126:13:21"},{"name":"_4","nativeSrc":"1141:2:21","nodeType":"YulIdentifier","src":"1141:2:21"}],"functionName":{"name":"and","nativeSrc":"1122:3:21","nodeType":"YulIdentifier","src":"1122:3:21"},"nativeSrc":"1122:22:21","nodeType":"YulFunctionCall","src":"1122:22:21"},{"kind":"number","nativeSrc":"1146:2:21","nodeType":"YulLiteral","src":"1146:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"1118:3:21","nodeType":"YulIdentifier","src":"1118:3:21"},"nativeSrc":"1118:31:21","nodeType":"YulFunctionCall","src":"1118:31:21"},{"name":"_4","nativeSrc":"1151:2:21","nodeType":"YulIdentifier","src":"1151:2:21"}],"functionName":{"name":"and","nativeSrc":"1114:3:21","nodeType":"YulIdentifier","src":"1114:3:21"},"nativeSrc":"1114:40:21","nodeType":"YulFunctionCall","src":"1114:40:21"}],"functionName":{"name":"add","nativeSrc":"1102:3:21","nodeType":"YulIdentifier","src":"1102:3:21"},"nativeSrc":"1102:53:21","nodeType":"YulFunctionCall","src":"1102:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1088:10:21","nodeType":"YulTypedName","src":"1088:10:21","type":""}]},{"body":{"nativeSrc":"1214:22:21","nodeType":"YulBlock","src":"1214:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1216:16:21","nodeType":"YulIdentifier","src":"1216:16:21"},"nativeSrc":"1216:18:21","nodeType":"YulFunctionCall","src":"1216:18:21"},"nativeSrc":"1216:18:21","nodeType":"YulExpressionStatement","src":"1216:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1173:10:21","nodeType":"YulIdentifier","src":"1173:10:21"},{"name":"_1","nativeSrc":"1185:2:21","nodeType":"YulIdentifier","src":"1185:2:21"}],"functionName":{"name":"gt","nativeSrc":"1170:2:21","nodeType":"YulIdentifier","src":"1170:2:21"},"nativeSrc":"1170:18:21","nodeType":"YulFunctionCall","src":"1170:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1193:10:21","nodeType":"YulIdentifier","src":"1193:10:21"},{"name":"memPtr","nativeSrc":"1205:6:21","nodeType":"YulIdentifier","src":"1205:6:21"}],"functionName":{"name":"lt","nativeSrc":"1190:2:21","nodeType":"YulIdentifier","src":"1190:2:21"},"nativeSrc":"1190:22:21","nodeType":"YulFunctionCall","src":"1190:22:21"}],"functionName":{"name":"or","nativeSrc":"1167:2:21","nodeType":"YulIdentifier","src":"1167:2:21"},"nativeSrc":"1167:46:21","nodeType":"YulFunctionCall","src":"1167:46:21"},"nativeSrc":"1164:72:21","nodeType":"YulIf","src":"1164:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1252:2:21","nodeType":"YulLiteral","src":"1252:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1256:10:21","nodeType":"YulIdentifier","src":"1256:10:21"}],"functionName":{"name":"mstore","nativeSrc":"1245:6:21","nodeType":"YulIdentifier","src":"1245:6:21"},"nativeSrc":"1245:22:21","nodeType":"YulFunctionCall","src":"1245:22:21"},"nativeSrc":"1245:22:21","nodeType":"YulExpressionStatement","src":"1245:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1283:6:21","nodeType":"YulIdentifier","src":"1283:6:21"},{"name":"_3","nativeSrc":"1291:2:21","nodeType":"YulIdentifier","src":"1291:2:21"}],"functionName":{"name":"mstore","nativeSrc":"1276:6:21","nodeType":"YulIdentifier","src":"1276:6:21"},"nativeSrc":"1276:18:21","nodeType":"YulFunctionCall","src":"1276:18:21"},"nativeSrc":"1276:18:21","nodeType":"YulExpressionStatement","src":"1276:18:21"},{"body":{"nativeSrc":"1340:16:21","nodeType":"YulBlock","src":"1340:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1349:1:21","nodeType":"YulLiteral","src":"1349:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1352:1:21","nodeType":"YulLiteral","src":"1352:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1342:6:21","nodeType":"YulIdentifier","src":"1342:6:21"},"nativeSrc":"1342:12:21","nodeType":"YulFunctionCall","src":"1342:12:21"},"nativeSrc":"1342:12:21","nodeType":"YulExpressionStatement","src":"1342:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1317:2:21","nodeType":"YulIdentifier","src":"1317:2:21"},{"name":"_3","nativeSrc":"1321:2:21","nodeType":"YulIdentifier","src":"1321:2:21"}],"functionName":{"name":"add","nativeSrc":"1313:3:21","nodeType":"YulIdentifier","src":"1313:3:21"},"nativeSrc":"1313:11:21","nodeType":"YulFunctionCall","src":"1313:11:21"},{"kind":"number","nativeSrc":"1326:2:21","nodeType":"YulLiteral","src":"1326:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1309:3:21","nodeType":"YulIdentifier","src":"1309:3:21"},"nativeSrc":"1309:20:21","nodeType":"YulFunctionCall","src":"1309:20:21"},{"name":"dataEnd","nativeSrc":"1331:7:21","nodeType":"YulIdentifier","src":"1331:7:21"}],"functionName":{"name":"gt","nativeSrc":"1306:2:21","nodeType":"YulIdentifier","src":"1306:2:21"},"nativeSrc":"1306:33:21","nodeType":"YulFunctionCall","src":"1306:33:21"},"nativeSrc":"1303:53:21","nodeType":"YulIf","src":"1303:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1404:2:21","nodeType":"YulIdentifier","src":"1404:2:21"},{"kind":"number","nativeSrc":"1408:2:21","nodeType":"YulLiteral","src":"1408:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1400:3:21","nodeType":"YulIdentifier","src":"1400:3:21"},"nativeSrc":"1400:11:21","nodeType":"YulFunctionCall","src":"1400:11:21"},{"arguments":[{"name":"memPtr","nativeSrc":"1417:6:21","nodeType":"YulIdentifier","src":"1417:6:21"},{"kind":"number","nativeSrc":"1425:2:21","nodeType":"YulLiteral","src":"1425:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1413:3:21","nodeType":"YulIdentifier","src":"1413:3:21"},"nativeSrc":"1413:15:21","nodeType":"YulFunctionCall","src":"1413:15:21"},{"name":"_3","nativeSrc":"1430:2:21","nodeType":"YulIdentifier","src":"1430:2:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1365:34:21","nodeType":"YulIdentifier","src":"1365:34:21"},"nativeSrc":"1365:68:21","nodeType":"YulFunctionCall","src":"1365:68:21"},"nativeSrc":"1365:68:21","nodeType":"YulExpressionStatement","src":"1365:68:21"},{"nativeSrc":"1442:16:21","nodeType":"YulAssignment","src":"1442:16:21","value":{"name":"memPtr","nativeSrc":"1452:6:21","nodeType":"YulIdentifier","src":"1452:6:21"},"variableNames":[{"name":"value1","nativeSrc":"1442:6:21","nodeType":"YulIdentifier","src":"1442:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nativeSrc":"401:1063:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"466:9:21","nodeType":"YulTypedName","src":"466:9:21","type":""},{"name":"dataEnd","nativeSrc":"477:7:21","nodeType":"YulTypedName","src":"477:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"489:6:21","nodeType":"YulTypedName","src":"489:6:21","type":""},{"name":"value1","nativeSrc":"497:6:21","nodeType":"YulTypedName","src":"497:6:21","type":""}],"src":"401:1063:21"},{"body":{"nativeSrc":"1643:235:21","nodeType":"YulBlock","src":"1643:235:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1660:9:21","nodeType":"YulIdentifier","src":"1660:9:21"},{"kind":"number","nativeSrc":"1671:2:21","nodeType":"YulLiteral","src":"1671:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1653:6:21","nodeType":"YulIdentifier","src":"1653:6:21"},"nativeSrc":"1653:21:21","nodeType":"YulFunctionCall","src":"1653:21:21"},"nativeSrc":"1653:21:21","nodeType":"YulExpressionStatement","src":"1653:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1694:9:21","nodeType":"YulIdentifier","src":"1694:9:21"},{"kind":"number","nativeSrc":"1705:2:21","nodeType":"YulLiteral","src":"1705:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1690:3:21","nodeType":"YulIdentifier","src":"1690:3:21"},"nativeSrc":"1690:18:21","nodeType":"YulFunctionCall","src":"1690:18:21"},{"kind":"number","nativeSrc":"1710:2:21","nodeType":"YulLiteral","src":"1710:2:21","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"1683:6:21","nodeType":"YulIdentifier","src":"1683:6:21"},"nativeSrc":"1683:30:21","nodeType":"YulFunctionCall","src":"1683:30:21"},"nativeSrc":"1683:30:21","nodeType":"YulExpressionStatement","src":"1683:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1733:9:21","nodeType":"YulIdentifier","src":"1733:9:21"},{"kind":"number","nativeSrc":"1744:2:21","nodeType":"YulLiteral","src":"1744:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1729:3:21","nodeType":"YulIdentifier","src":"1729:3:21"},"nativeSrc":"1729:18:21","nodeType":"YulFunctionCall","src":"1729:18:21"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"1749:34:21","nodeType":"YulLiteral","src":"1749:34:21","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"1722:6:21","nodeType":"YulIdentifier","src":"1722:6:21"},"nativeSrc":"1722:62:21","nodeType":"YulFunctionCall","src":"1722:62:21"},"nativeSrc":"1722:62:21","nodeType":"YulExpressionStatement","src":"1722:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1804:9:21","nodeType":"YulIdentifier","src":"1804:9:21"},{"kind":"number","nativeSrc":"1815:2:21","nodeType":"YulLiteral","src":"1815:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1800:3:21","nodeType":"YulIdentifier","src":"1800:3:21"},"nativeSrc":"1800:18:21","nodeType":"YulFunctionCall","src":"1800:18:21"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"1820:15:21","nodeType":"YulLiteral","src":"1820:15:21","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"1793:6:21","nodeType":"YulIdentifier","src":"1793:6:21"},"nativeSrc":"1793:43:21","nodeType":"YulFunctionCall","src":"1793:43:21"},"nativeSrc":"1793:43:21","nodeType":"YulExpressionStatement","src":"1793:43:21"},{"nativeSrc":"1845:27:21","nodeType":"YulAssignment","src":"1845:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1857:9:21","nodeType":"YulIdentifier","src":"1857:9:21"},{"kind":"number","nativeSrc":"1868:3:21","nodeType":"YulLiteral","src":"1868:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1853:3:21","nodeType":"YulIdentifier","src":"1853:3:21"},"nativeSrc":"1853:19:21","nodeType":"YulFunctionCall","src":"1853:19:21"},"variableNames":[{"name":"tail","nativeSrc":"1845:4:21","nodeType":"YulIdentifier","src":"1845:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1469:409:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1620:9:21","nodeType":"YulTypedName","src":"1620:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1634:4:21","nodeType":"YulTypedName","src":"1634:4:21","type":""}],"src":"1469:409:21"},{"body":{"nativeSrc":"2020:150:21","nodeType":"YulBlock","src":"2020:150:21","statements":[{"nativeSrc":"2030:27:21","nodeType":"YulVariableDeclaration","src":"2030:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"2050:6:21","nodeType":"YulIdentifier","src":"2050:6:21"}],"functionName":{"name":"mload","nativeSrc":"2044:5:21","nodeType":"YulIdentifier","src":"2044:5:21"},"nativeSrc":"2044:13:21","nodeType":"YulFunctionCall","src":"2044:13:21"},"variables":[{"name":"length","nativeSrc":"2034:6:21","nodeType":"YulTypedName","src":"2034:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2105:6:21","nodeType":"YulIdentifier","src":"2105:6:21"},{"kind":"number","nativeSrc":"2113:4:21","nodeType":"YulLiteral","src":"2113:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2101:3:21","nodeType":"YulIdentifier","src":"2101:3:21"},"nativeSrc":"2101:17:21","nodeType":"YulFunctionCall","src":"2101:17:21"},{"name":"pos","nativeSrc":"2120:3:21","nodeType":"YulIdentifier","src":"2120:3:21"},{"name":"length","nativeSrc":"2125:6:21","nodeType":"YulIdentifier","src":"2125:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2066:34:21","nodeType":"YulIdentifier","src":"2066:34:21"},"nativeSrc":"2066:66:21","nodeType":"YulFunctionCall","src":"2066:66:21"},"nativeSrc":"2066:66:21","nodeType":"YulExpressionStatement","src":"2066:66:21"},{"nativeSrc":"2141:23:21","nodeType":"YulAssignment","src":"2141:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"2152:3:21","nodeType":"YulIdentifier","src":"2152:3:21"},{"name":"length","nativeSrc":"2157:6:21","nodeType":"YulIdentifier","src":"2157:6:21"}],"functionName":{"name":"add","nativeSrc":"2148:3:21","nodeType":"YulIdentifier","src":"2148:3:21"},"nativeSrc":"2148:16:21","nodeType":"YulFunctionCall","src":"2148:16:21"},"variableNames":[{"name":"end","nativeSrc":"2141:3:21","nodeType":"YulIdentifier","src":"2141:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"1883:287:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1996:3:21","nodeType":"YulTypedName","src":"1996:3:21","type":""},{"name":"value0","nativeSrc":"2001:6:21","nodeType":"YulTypedName","src":"2001:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2012:3:21","nodeType":"YulTypedName","src":"2012:3:21","type":""}],"src":"1883:287:21"},{"body":{"nativeSrc":"2349:179:21","nodeType":"YulBlock","src":"2349:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2366:9:21","nodeType":"YulIdentifier","src":"2366:9:21"},{"kind":"number","nativeSrc":"2377:2:21","nodeType":"YulLiteral","src":"2377:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2359:6:21","nodeType":"YulIdentifier","src":"2359:6:21"},"nativeSrc":"2359:21:21","nodeType":"YulFunctionCall","src":"2359:21:21"},"nativeSrc":"2359:21:21","nodeType":"YulExpressionStatement","src":"2359:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2400:9:21","nodeType":"YulIdentifier","src":"2400:9:21"},{"kind":"number","nativeSrc":"2411:2:21","nodeType":"YulLiteral","src":"2411:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2396:3:21","nodeType":"YulIdentifier","src":"2396:3:21"},"nativeSrc":"2396:18:21","nodeType":"YulFunctionCall","src":"2396:18:21"},{"kind":"number","nativeSrc":"2416:2:21","nodeType":"YulLiteral","src":"2416:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"2389:6:21","nodeType":"YulIdentifier","src":"2389:6:21"},"nativeSrc":"2389:30:21","nodeType":"YulFunctionCall","src":"2389:30:21"},"nativeSrc":"2389:30:21","nodeType":"YulExpressionStatement","src":"2389:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2439:9:21","nodeType":"YulIdentifier","src":"2439:9:21"},{"kind":"number","nativeSrc":"2450:2:21","nodeType":"YulLiteral","src":"2450:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2435:3:21","nodeType":"YulIdentifier","src":"2435:3:21"},"nativeSrc":"2435:18:21","nodeType":"YulFunctionCall","src":"2435:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"2455:31:21","nodeType":"YulLiteral","src":"2455:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"2428:6:21","nodeType":"YulIdentifier","src":"2428:6:21"},"nativeSrc":"2428:59:21","nodeType":"YulFunctionCall","src":"2428:59:21"},"nativeSrc":"2428:59:21","nodeType":"YulExpressionStatement","src":"2428:59:21"},{"nativeSrc":"2496:26:21","nodeType":"YulAssignment","src":"2496:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2508:9:21","nodeType":"YulIdentifier","src":"2508:9:21"},{"kind":"number","nativeSrc":"2519:2:21","nodeType":"YulLiteral","src":"2519:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2504:3:21","nodeType":"YulIdentifier","src":"2504:3:21"},"nativeSrc":"2504:18:21","nodeType":"YulFunctionCall","src":"2504:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2496:4:21","nodeType":"YulIdentifier","src":"2496:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2175:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2326:9:21","nodeType":"YulTypedName","src":"2326:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2340:4:21","nodeType":"YulTypedName","src":"2340:4:21","type":""}],"src":"2175:353:21"},{"body":{"nativeSrc":"2654:275:21","nodeType":"YulBlock","src":"2654:275:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2671:9:21","nodeType":"YulIdentifier","src":"2671:9:21"},{"kind":"number","nativeSrc":"2682:2:21","nodeType":"YulLiteral","src":"2682:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2664:6:21","nodeType":"YulIdentifier","src":"2664:6:21"},"nativeSrc":"2664:21:21","nodeType":"YulFunctionCall","src":"2664:21:21"},"nativeSrc":"2664:21:21","nodeType":"YulExpressionStatement","src":"2664:21:21"},{"nativeSrc":"2694:27:21","nodeType":"YulVariableDeclaration","src":"2694:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"2714:6:21","nodeType":"YulIdentifier","src":"2714:6:21"}],"functionName":{"name":"mload","nativeSrc":"2708:5:21","nodeType":"YulIdentifier","src":"2708:5:21"},"nativeSrc":"2708:13:21","nodeType":"YulFunctionCall","src":"2708:13:21"},"variables":[{"name":"length","nativeSrc":"2698:6:21","nodeType":"YulTypedName","src":"2698:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2741:9:21","nodeType":"YulIdentifier","src":"2741:9:21"},{"kind":"number","nativeSrc":"2752:2:21","nodeType":"YulLiteral","src":"2752:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2737:3:21","nodeType":"YulIdentifier","src":"2737:3:21"},"nativeSrc":"2737:18:21","nodeType":"YulFunctionCall","src":"2737:18:21"},{"name":"length","nativeSrc":"2757:6:21","nodeType":"YulIdentifier","src":"2757:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2730:6:21","nodeType":"YulIdentifier","src":"2730:6:21"},"nativeSrc":"2730:34:21","nodeType":"YulFunctionCall","src":"2730:34:21"},"nativeSrc":"2730:34:21","nodeType":"YulExpressionStatement","src":"2730:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2812:6:21","nodeType":"YulIdentifier","src":"2812:6:21"},{"kind":"number","nativeSrc":"2820:2:21","nodeType":"YulLiteral","src":"2820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2808:3:21","nodeType":"YulIdentifier","src":"2808:3:21"},"nativeSrc":"2808:15:21","nodeType":"YulFunctionCall","src":"2808:15:21"},{"arguments":[{"name":"headStart","nativeSrc":"2829:9:21","nodeType":"YulIdentifier","src":"2829:9:21"},{"kind":"number","nativeSrc":"2840:2:21","nodeType":"YulLiteral","src":"2840:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2825:3:21","nodeType":"YulIdentifier","src":"2825:3:21"},"nativeSrc":"2825:18:21","nodeType":"YulFunctionCall","src":"2825:18:21"},{"name":"length","nativeSrc":"2845:6:21","nodeType":"YulIdentifier","src":"2845:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2773:34:21","nodeType":"YulIdentifier","src":"2773:34:21"},"nativeSrc":"2773:79:21","nodeType":"YulFunctionCall","src":"2773:79:21"},"nativeSrc":"2773:79:21","nodeType":"YulExpressionStatement","src":"2773:79:21"},{"nativeSrc":"2861:62:21","nodeType":"YulAssignment","src":"2861:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2877:9:21","nodeType":"YulIdentifier","src":"2877:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2896:6:21","nodeType":"YulIdentifier","src":"2896:6:21"},{"kind":"number","nativeSrc":"2904:2:21","nodeType":"YulLiteral","src":"2904:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2892:3:21","nodeType":"YulIdentifier","src":"2892:3:21"},"nativeSrc":"2892:15:21","nodeType":"YulFunctionCall","src":"2892:15:21"},{"arguments":[{"kind":"number","nativeSrc":"2913:2:21","nodeType":"YulLiteral","src":"2913:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2909:3:21","nodeType":"YulIdentifier","src":"2909:3:21"},"nativeSrc":"2909:7:21","nodeType":"YulFunctionCall","src":"2909:7:21"}],"functionName":{"name":"and","nativeSrc":"2888:3:21","nodeType":"YulIdentifier","src":"2888:3:21"},"nativeSrc":"2888:29:21","nodeType":"YulFunctionCall","src":"2888:29:21"}],"functionName":{"name":"add","nativeSrc":"2873:3:21","nodeType":"YulIdentifier","src":"2873:3:21"},"nativeSrc":"2873:45:21","nodeType":"YulFunctionCall","src":"2873:45:21"},{"kind":"number","nativeSrc":"2920:2:21","nodeType":"YulLiteral","src":"2920:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2869:3:21","nodeType":"YulIdentifier","src":"2869:3:21"},"nativeSrc":"2869:54:21","nodeType":"YulFunctionCall","src":"2869:54:21"},"variableNames":[{"name":"tail","nativeSrc":"2861:4:21","nodeType":"YulIdentifier","src":"2861:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2533:396:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2623:9:21","nodeType":"YulTypedName","src":"2623:9:21","type":""},{"name":"value0","nativeSrc":"2634:6:21","nodeType":"YulTypedName","src":"2634:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2645:4:21","nodeType":"YulTypedName","src":"2645:4:21","type":""}],"src":"2533:396:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516104b83803806104b8833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c6838360405180606001604052806027815260200161049160279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b6088806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea164736f6c6343000816000a416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 CODESIZE SUB DUP1 PUSH2 0x4B8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x61 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x5C JUMPI PUSH2 0x5A DUP4 DUP4 PUSH2 0xA1 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6A DUP2 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC6 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x491 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x180 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1EF DUP7 DUP4 DUP4 DUP8 PUSH2 0x1F9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x268 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x136 JUMP JUMPDEST POP DUP2 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x272 DUP4 DUP4 PUSH2 0x27A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x28A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x34B JUMPI PUSH2 0x34B PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x373 JUMPI PUSH2 0x373 PUSH2 0x2A4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39D DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2BA JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3BE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3E7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x88 DUP1 PUSH2 0x409 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x1F PUSH1 0x1B PUSH1 0x21 JUMP JUMPDEST PUSH1 0x58 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x53 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x76 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ","sourceMap":"567:723:7:-:0;;;958:112;;;;;;;;;;;;;;;;;;:::i;:::-;1024:39;1042:6;1050:5;1057;1024:17;:39::i;:::-;958:112;;567:723;;2057:265:8;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2204:112;2057:265;;;:::o;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:8;;;;;;;;1771:152;:::o;6674:198:13:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:13:o;1406:259:8:-;-1:-1:-1;;;;;1702:19:13;;;1479:95:8;;;;-1:-1:-1;;;1479:95:8;;1671:2:21;1479:95:8;;;1653:21:21;1710:2;1690:18;;;1683:30;1749:34;1729:18;;;1722:62;-1:-1:-1;;;1800:18:21;;;1793:43;1853:19;;1479:95:8;;;;;;;;;1030:66;1584:74;;-1:-1:-1;;;;;;1584:74:8;-1:-1:-1;;;;;1584:74:8;;;;;;;;;;1406:259::o;7058:325:13:-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:13;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:13;;-1:-1:-1;7223:67:13;-1:-1:-1;7307:69:13;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:13:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:13;;;8113:60;;;;-1:-1:-1;;;8113:60:13;;2377:2:21;8113:60:13;;;2359:21:21;2416:2;2396:18;;;2389:30;2455:31;2435:18;;;2428:59;2504:18;;8113:60:13;2175:353:21;8113:60:13;-1:-1:-1;8208:10:13;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:13;;;;;;;;:::i;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:21;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:21;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:21;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:21;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1883:287::-;2012:3;2050:6;2044:13;2066:66;2125:6;2120:3;2113:4;2105:6;2101:17;2066:66;:::i;:::-;2148:16;;;;;1883:287;-1:-1:-1;;1883:287:21:o;2533:396::-;2682:2;2671:9;2664:21;2645:4;2714:6;2708:13;2757:6;2752:2;2741:9;2737:18;2730:34;2773:79;2845:6;2840:2;2829:9;2825:18;2820:2;2812:6;2808:15;2773:79;:::i;:::-;2913:2;2892:15;-1:-1:-1;;2888:29:21;2873:45;;;;2920:2;2869:54;;2533:396;-1:-1:-1;;2533:396:21:o;:::-;567:723:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1195":{"entryPoint":null,"id":1195,"parameterSlots":0,"returnSlots":0},"@_1203":{"entryPoint":null,"id":1203,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_1208":{"entryPoint":null,"id":1208,"parameterSlots":0,"returnSlots":0},"@_delegate_1168":{"entryPoint":88,"id":1168,"parameterSlots":1,"returnSlots":0},"@_fallback_1187":{"entryPoint":19,"id":1187,"parameterSlots":0,"returnSlots":0},"@_getImplementation_883":{"entryPoint":null,"id":883,"parameterSlots":0,"returnSlots":1},"@_implementation_852":{"entryPoint":33,"id":852,"parameterSlots":0,"returnSlots":1},"@getAddressSlot_2062":{"entryPoint":null,"id":2062,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x1F PUSH1 0x1B PUSH1 0x21 JUMP JUMPDEST PUSH1 0x58 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x53 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x76 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"567:723:7:-:0;;;;;;2898:11:9;:9;:11::i;:::-;567:723:7;;2675:11:9;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;1148:140:7:-;1215:12;1246:35;1030:66:8;1254:54;-1:-1:-1;;;;;1254:54:8;;1175:140;1246:35:7;1239:42;;1148:140;:::o;948:895:9:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ProxyAdmin":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_696":{"entryPoint":null,"id":696,"parameterSlots":0,"returnSlots":0},"@_msgSender_2020":{"entryPoint":null,"id":2020,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_784":{"entryPoint":31,"id":784,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61066b8061007e6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead1461016457600080fd5b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610499565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee3660046104bd565b610229565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461050c565b610291565b34801561013057600080fd5b506100d161013f3660046104bd565b610300565b34801561015057600080fd5b506100d161015f366004610499565b610336565b34801561017057600080fd5b506100a061017f366004610499565b6103b4565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d91906105e2565b949350505050565b61021d6103da565b6102276000610434565b565b6102316103da565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050505050565b6102996103da565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102c990869086906004016105ff565b6000604051808303818588803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b5050505050505050565b6103086103da565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe69060240161025b565b61033e6103da565b6001600160a01b0381166103a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103b181610434565b50565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b6000546001600160a01b031633146102275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146103b157600080fd5b6000602082840312156104ab57600080fd5b81356104b681610484565b9392505050565b600080604083850312156104d057600080fd5b82356104db81610484565b915060208301356104eb81610484565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561052157600080fd5b833561052c81610484565b9250602084013561053c81610484565b9150604084013567ffffffffffffffff8082111561055957600080fd5b818601915086601f83011261056d57600080fd5b81358181111561057f5761057f6104f6565b604051601f8201601f19908116603f011681019083821181831017156105a7576105a76104f6565b816040528281528960208487010111156105c057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156105f457600080fd5b81516104b681610484565b60018060a01b03831681526000602060406020840152835180604085015260005b8181101561063c57858101830151858201606001528201610620565b506000606082860101526060601f19601f83011685010192505050939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x66B DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA0 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x227 PUSH1 0x0 PUSH2 0x434 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F28397 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x8F283970 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x299 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x2C9 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x308 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x3659CFE6 SWAP1 PUSH1 0x24 ADD PUSH2 0x25B JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x3E14691 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4DB DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EB DUP2 PUSH2 0x484 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x52C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x53C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x4F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x620 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"450:2409:11:-:0;;;;;;;;;;;;-1:-1:-1;936:32:4;719:10:14;936:18:4;:32::i;:::-;450:2409:11;;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;450:2409:11:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_727":{"entryPoint":986,"id":727,"parameterSlots":0,"returnSlots":0},"@_msgSender_2020":{"entryPoint":null,"id":2020,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_784":{"entryPoint":1076,"id":784,"parameterSlots":1,"returnSlots":0},"@changeProxyAdmin_1312":{"entryPoint":553,"id":1312,"parameterSlots":2,"returnSlots":0},"@getProxyAdmin_1294":{"entryPoint":948,"id":1294,"parameterSlots":1,"returnSlots":1},"@getProxyImplementation_1260":{"entryPoint":388,"id":1260,"parameterSlots":1,"returnSlots":1},"@owner_713":{"entryPoint":null,"id":713,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_741":{"entryPoint":533,"id":741,"parameterSlots":0,"returnSlots":0},"@transferOwnership_764":{"entryPoint":822,"id":764,"parameterSlots":1,"returnSlots":0},"@upgradeAndCall_1354":{"entryPoint":657,"id":1354,"parameterSlots":3,"returnSlots":0},"@upgrade_1330":{"entryPoint":768,"id":1330,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":1506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_address":{"entryPoint":1213,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_addresst_bytes_memory_ptr":{"entryPoint":1292,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1535,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":1270,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_contract_ITransparentUpgradeableProxy":{"entryPoint":1156,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5161:21","nodeType":"YulBlock","src":"0:5161:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"89:86:21","nodeType":"YulBlock","src":"89:86:21","statements":[{"body":{"nativeSrc":"153:16:21","nodeType":"YulBlock","src":"153:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"162:1:21","nodeType":"YulLiteral","src":"162:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"165:1:21","nodeType":"YulLiteral","src":"165:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"155:6:21","nodeType":"YulIdentifier","src":"155:6:21"},"nativeSrc":"155:12:21","nodeType":"YulFunctionCall","src":"155:12:21"},"nativeSrc":"155:12:21","nodeType":"YulExpressionStatement","src":"155:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"112:5:21","nodeType":"YulIdentifier","src":"112:5:21"},{"arguments":[{"name":"value","nativeSrc":"123:5:21","nodeType":"YulIdentifier","src":"123:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"138:3:21","nodeType":"YulLiteral","src":"138:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"143:1:21","nodeType":"YulLiteral","src":"143:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"134:3:21","nodeType":"YulIdentifier","src":"134:3:21"},"nativeSrc":"134:11:21","nodeType":"YulFunctionCall","src":"134:11:21"},{"kind":"number","nativeSrc":"147:1:21","nodeType":"YulLiteral","src":"147:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"130:3:21","nodeType":"YulIdentifier","src":"130:3:21"},"nativeSrc":"130:19:21","nodeType":"YulFunctionCall","src":"130:19:21"}],"functionName":{"name":"and","nativeSrc":"119:3:21","nodeType":"YulIdentifier","src":"119:3:21"},"nativeSrc":"119:31:21","nodeType":"YulFunctionCall","src":"119:31:21"}],"functionName":{"name":"eq","nativeSrc":"109:2:21","nodeType":"YulIdentifier","src":"109:2:21"},"nativeSrc":"109:42:21","nodeType":"YulFunctionCall","src":"109:42:21"}],"functionName":{"name":"iszero","nativeSrc":"102:6:21","nodeType":"YulIdentifier","src":"102:6:21"},"nativeSrc":"102:50:21","nodeType":"YulFunctionCall","src":"102:50:21"},"nativeSrc":"99:70:21","nodeType":"YulIf","src":"99:70:21"}]},"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"14:161:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"78:5:21","nodeType":"YulTypedName","src":"78:5:21","type":""}],"src":"14:161:21"},{"body":{"nativeSrc":"287:207:21","nodeType":"YulBlock","src":"287:207:21","statements":[{"body":{"nativeSrc":"333:16:21","nodeType":"YulBlock","src":"333:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"342:1:21","nodeType":"YulLiteral","src":"342:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"345:1:21","nodeType":"YulLiteral","src":"345:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"335:6:21","nodeType":"YulIdentifier","src":"335:6:21"},"nativeSrc":"335:12:21","nodeType":"YulFunctionCall","src":"335:12:21"},"nativeSrc":"335:12:21","nodeType":"YulExpressionStatement","src":"335:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"308:7:21","nodeType":"YulIdentifier","src":"308:7:21"},{"name":"headStart","nativeSrc":"317:9:21","nodeType":"YulIdentifier","src":"317:9:21"}],"functionName":{"name":"sub","nativeSrc":"304:3:21","nodeType":"YulIdentifier","src":"304:3:21"},"nativeSrc":"304:23:21","nodeType":"YulFunctionCall","src":"304:23:21"},{"kind":"number","nativeSrc":"329:2:21","nodeType":"YulLiteral","src":"329:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"300:3:21","nodeType":"YulIdentifier","src":"300:3:21"},"nativeSrc":"300:32:21","nodeType":"YulFunctionCall","src":"300:32:21"},"nativeSrc":"297:52:21","nodeType":"YulIf","src":"297:52:21"},{"nativeSrc":"358:36:21","nodeType":"YulVariableDeclaration","src":"358:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"384:9:21","nodeType":"YulIdentifier","src":"384:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"371:12:21","nodeType":"YulIdentifier","src":"371:12:21"},"nativeSrc":"371:23:21","nodeType":"YulFunctionCall","src":"371:23:21"},"variables":[{"name":"value","nativeSrc":"362:5:21","nodeType":"YulTypedName","src":"362:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"458:5:21","nodeType":"YulIdentifier","src":"458:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"403:54:21","nodeType":"YulIdentifier","src":"403:54:21"},"nativeSrc":"403:61:21","nodeType":"YulFunctionCall","src":"403:61:21"},"nativeSrc":"403:61:21","nodeType":"YulExpressionStatement","src":"403:61:21"},{"nativeSrc":"473:15:21","nodeType":"YulAssignment","src":"473:15:21","value":{"name":"value","nativeSrc":"483:5:21","nodeType":"YulIdentifier","src":"483:5:21"},"variableNames":[{"name":"value0","nativeSrc":"473:6:21","nodeType":"YulIdentifier","src":"473:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389","nativeSrc":"180:314:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"253:9:21","nodeType":"YulTypedName","src":"253:9:21","type":""},{"name":"dataEnd","nativeSrc":"264:7:21","nodeType":"YulTypedName","src":"264:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"276:6:21","nodeType":"YulTypedName","src":"276:6:21","type":""}],"src":"180:314:21"},{"body":{"nativeSrc":"600:102:21","nodeType":"YulBlock","src":"600:102:21","statements":[{"nativeSrc":"610:26:21","nodeType":"YulAssignment","src":"610:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"622:9:21","nodeType":"YulIdentifier","src":"622:9:21"},{"kind":"number","nativeSrc":"633:2:21","nodeType":"YulLiteral","src":"633:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"618:3:21","nodeType":"YulIdentifier","src":"618:3:21"},"nativeSrc":"618:18:21","nodeType":"YulFunctionCall","src":"618:18:21"},"variableNames":[{"name":"tail","nativeSrc":"610:4:21","nodeType":"YulIdentifier","src":"610:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"652:9:21","nodeType":"YulIdentifier","src":"652:9:21"},{"arguments":[{"name":"value0","nativeSrc":"667:6:21","nodeType":"YulIdentifier","src":"667:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"683:3:21","nodeType":"YulLiteral","src":"683:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"688:1:21","nodeType":"YulLiteral","src":"688:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"679:3:21","nodeType":"YulIdentifier","src":"679:3:21"},"nativeSrc":"679:11:21","nodeType":"YulFunctionCall","src":"679:11:21"},{"kind":"number","nativeSrc":"692:1:21","nodeType":"YulLiteral","src":"692:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"675:3:21","nodeType":"YulIdentifier","src":"675:3:21"},"nativeSrc":"675:19:21","nodeType":"YulFunctionCall","src":"675:19:21"}],"functionName":{"name":"and","nativeSrc":"663:3:21","nodeType":"YulIdentifier","src":"663:3:21"},"nativeSrc":"663:32:21","nodeType":"YulFunctionCall","src":"663:32:21"}],"functionName":{"name":"mstore","nativeSrc":"645:6:21","nodeType":"YulIdentifier","src":"645:6:21"},"nativeSrc":"645:51:21","nodeType":"YulFunctionCall","src":"645:51:21"},"nativeSrc":"645:51:21","nodeType":"YulExpressionStatement","src":"645:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"499:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"569:9:21","nodeType":"YulTypedName","src":"569:9:21","type":""},{"name":"value0","nativeSrc":"580:6:21","nodeType":"YulTypedName","src":"580:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"591:4:21","nodeType":"YulTypedName","src":"591:4:21","type":""}],"src":"499:203:21"},{"body":{"nativeSrc":"831:361:21","nodeType":"YulBlock","src":"831:361:21","statements":[{"body":{"nativeSrc":"877:16:21","nodeType":"YulBlock","src":"877:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"886:1:21","nodeType":"YulLiteral","src":"886:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"889:1:21","nodeType":"YulLiteral","src":"889:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"879:6:21","nodeType":"YulIdentifier","src":"879:6:21"},"nativeSrc":"879:12:21","nodeType":"YulFunctionCall","src":"879:12:21"},"nativeSrc":"879:12:21","nodeType":"YulExpressionStatement","src":"879:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"852:7:21","nodeType":"YulIdentifier","src":"852:7:21"},{"name":"headStart","nativeSrc":"861:9:21","nodeType":"YulIdentifier","src":"861:9:21"}],"functionName":{"name":"sub","nativeSrc":"848:3:21","nodeType":"YulIdentifier","src":"848:3:21"},"nativeSrc":"848:23:21","nodeType":"YulFunctionCall","src":"848:23:21"},{"kind":"number","nativeSrc":"873:2:21","nodeType":"YulLiteral","src":"873:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"844:3:21","nodeType":"YulIdentifier","src":"844:3:21"},"nativeSrc":"844:32:21","nodeType":"YulFunctionCall","src":"844:32:21"},"nativeSrc":"841:52:21","nodeType":"YulIf","src":"841:52:21"},{"nativeSrc":"902:36:21","nodeType":"YulVariableDeclaration","src":"902:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"928:9:21","nodeType":"YulIdentifier","src":"928:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"915:12:21","nodeType":"YulIdentifier","src":"915:12:21"},"nativeSrc":"915:23:21","nodeType":"YulFunctionCall","src":"915:23:21"},"variables":[{"name":"value","nativeSrc":"906:5:21","nodeType":"YulTypedName","src":"906:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1002:5:21","nodeType":"YulIdentifier","src":"1002:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"947:54:21","nodeType":"YulIdentifier","src":"947:54:21"},"nativeSrc":"947:61:21","nodeType":"YulFunctionCall","src":"947:61:21"},"nativeSrc":"947:61:21","nodeType":"YulExpressionStatement","src":"947:61:21"},{"nativeSrc":"1017:15:21","nodeType":"YulAssignment","src":"1017:15:21","value":{"name":"value","nativeSrc":"1027:5:21","nodeType":"YulIdentifier","src":"1027:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1017:6:21","nodeType":"YulIdentifier","src":"1017:6:21"}]},{"nativeSrc":"1041:47:21","nodeType":"YulVariableDeclaration","src":"1041:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1073:9:21","nodeType":"YulIdentifier","src":"1073:9:21"},{"kind":"number","nativeSrc":"1084:2:21","nodeType":"YulLiteral","src":"1084:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1069:3:21","nodeType":"YulIdentifier","src":"1069:3:21"},"nativeSrc":"1069:18:21","nodeType":"YulFunctionCall","src":"1069:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1056:12:21","nodeType":"YulIdentifier","src":"1056:12:21"},"nativeSrc":"1056:32:21","nodeType":"YulFunctionCall","src":"1056:32:21"},"variables":[{"name":"value_1","nativeSrc":"1045:7:21","nodeType":"YulTypedName","src":"1045:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"1152:7:21","nodeType":"YulIdentifier","src":"1152:7:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"1097:54:21","nodeType":"YulIdentifier","src":"1097:54:21"},"nativeSrc":"1097:63:21","nodeType":"YulFunctionCall","src":"1097:63:21"},"nativeSrc":"1097:63:21","nodeType":"YulExpressionStatement","src":"1097:63:21"},{"nativeSrc":"1169:17:21","nodeType":"YulAssignment","src":"1169:17:21","value":{"name":"value_1","nativeSrc":"1179:7:21","nodeType":"YulIdentifier","src":"1179:7:21"},"variableNames":[{"name":"value1","nativeSrc":"1169:6:21","nodeType":"YulIdentifier","src":"1169:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_address","nativeSrc":"707:485:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"789:9:21","nodeType":"YulTypedName","src":"789:9:21","type":""},{"name":"dataEnd","nativeSrc":"800:7:21","nodeType":"YulTypedName","src":"800:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"812:6:21","nodeType":"YulTypedName","src":"812:6:21","type":""},{"name":"value1","nativeSrc":"820:6:21","nodeType":"YulTypedName","src":"820:6:21","type":""}],"src":"707:485:21"},{"body":{"nativeSrc":"1229:95:21","nodeType":"YulBlock","src":"1229:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1246:1:21","nodeType":"YulLiteral","src":"1246:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1253:3:21","nodeType":"YulLiteral","src":"1253:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"1258:10:21","nodeType":"YulLiteral","src":"1258:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1249:3:21","nodeType":"YulIdentifier","src":"1249:3:21"},"nativeSrc":"1249:20:21","nodeType":"YulFunctionCall","src":"1249:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1239:6:21","nodeType":"YulIdentifier","src":"1239:6:21"},"nativeSrc":"1239:31:21","nodeType":"YulFunctionCall","src":"1239:31:21"},"nativeSrc":"1239:31:21","nodeType":"YulExpressionStatement","src":"1239:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1286:1:21","nodeType":"YulLiteral","src":"1286:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1289:4:21","nodeType":"YulLiteral","src":"1289:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1279:6:21","nodeType":"YulIdentifier","src":"1279:6:21"},"nativeSrc":"1279:15:21","nodeType":"YulFunctionCall","src":"1279:15:21"},"nativeSrc":"1279:15:21","nodeType":"YulExpressionStatement","src":"1279:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1310:1:21","nodeType":"YulLiteral","src":"1310:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1313:4:21","nodeType":"YulLiteral","src":"1313:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1303:6:21","nodeType":"YulIdentifier","src":"1303:6:21"},"nativeSrc":"1303:15:21","nodeType":"YulFunctionCall","src":"1303:15:21"},"nativeSrc":"1303:15:21","nodeType":"YulExpressionStatement","src":"1303:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1197:127:21","nodeType":"YulFunctionDefinition","src":"1197:127:21"},{"body":{"nativeSrc":"1479:1144:21","nodeType":"YulBlock","src":"1479:1144:21","statements":[{"body":{"nativeSrc":"1525:16:21","nodeType":"YulBlock","src":"1525:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1534:1:21","nodeType":"YulLiteral","src":"1534:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1537:1:21","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1527:6:21","nodeType":"YulIdentifier","src":"1527:6:21"},"nativeSrc":"1527:12:21","nodeType":"YulFunctionCall","src":"1527:12:21"},"nativeSrc":"1527:12:21","nodeType":"YulExpressionStatement","src":"1527:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1500:7:21","nodeType":"YulIdentifier","src":"1500:7:21"},{"name":"headStart","nativeSrc":"1509:9:21","nodeType":"YulIdentifier","src":"1509:9:21"}],"functionName":{"name":"sub","nativeSrc":"1496:3:21","nodeType":"YulIdentifier","src":"1496:3:21"},"nativeSrc":"1496:23:21","nodeType":"YulFunctionCall","src":"1496:23:21"},{"kind":"number","nativeSrc":"1521:2:21","nodeType":"YulLiteral","src":"1521:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1492:3:21","nodeType":"YulIdentifier","src":"1492:3:21"},"nativeSrc":"1492:32:21","nodeType":"YulFunctionCall","src":"1492:32:21"},"nativeSrc":"1489:52:21","nodeType":"YulIf","src":"1489:52:21"},{"nativeSrc":"1550:36:21","nodeType":"YulVariableDeclaration","src":"1550:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1576:9:21","nodeType":"YulIdentifier","src":"1576:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1563:12:21","nodeType":"YulIdentifier","src":"1563:12:21"},"nativeSrc":"1563:23:21","nodeType":"YulFunctionCall","src":"1563:23:21"},"variables":[{"name":"value","nativeSrc":"1554:5:21","nodeType":"YulTypedName","src":"1554:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1650:5:21","nodeType":"YulIdentifier","src":"1650:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"1595:54:21","nodeType":"YulIdentifier","src":"1595:54:21"},"nativeSrc":"1595:61:21","nodeType":"YulFunctionCall","src":"1595:61:21"},"nativeSrc":"1595:61:21","nodeType":"YulExpressionStatement","src":"1595:61:21"},{"nativeSrc":"1665:15:21","nodeType":"YulAssignment","src":"1665:15:21","value":{"name":"value","nativeSrc":"1675:5:21","nodeType":"YulIdentifier","src":"1675:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1665:6:21","nodeType":"YulIdentifier","src":"1665:6:21"}]},{"nativeSrc":"1689:47:21","nodeType":"YulVariableDeclaration","src":"1689:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1721:9:21","nodeType":"YulIdentifier","src":"1721:9:21"},{"kind":"number","nativeSrc":"1732:2:21","nodeType":"YulLiteral","src":"1732:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1717:3:21","nodeType":"YulIdentifier","src":"1717:3:21"},"nativeSrc":"1717:18:21","nodeType":"YulFunctionCall","src":"1717:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1704:12:21","nodeType":"YulIdentifier","src":"1704:12:21"},"nativeSrc":"1704:32:21","nodeType":"YulFunctionCall","src":"1704:32:21"},"variables":[{"name":"value_1","nativeSrc":"1693:7:21","nodeType":"YulTypedName","src":"1693:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"1800:7:21","nodeType":"YulIdentifier","src":"1800:7:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"1745:54:21","nodeType":"YulIdentifier","src":"1745:54:21"},"nativeSrc":"1745:63:21","nodeType":"YulFunctionCall","src":"1745:63:21"},"nativeSrc":"1745:63:21","nodeType":"YulExpressionStatement","src":"1745:63:21"},{"nativeSrc":"1817:17:21","nodeType":"YulAssignment","src":"1817:17:21","value":{"name":"value_1","nativeSrc":"1827:7:21","nodeType":"YulIdentifier","src":"1827:7:21"},"variableNames":[{"name":"value1","nativeSrc":"1817:6:21","nodeType":"YulIdentifier","src":"1817:6:21"}]},{"nativeSrc":"1843:46:21","nodeType":"YulVariableDeclaration","src":"1843:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1874:9:21","nodeType":"YulIdentifier","src":"1874:9:21"},{"kind":"number","nativeSrc":"1885:2:21","nodeType":"YulLiteral","src":"1885:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1870:3:21","nodeType":"YulIdentifier","src":"1870:3:21"},"nativeSrc":"1870:18:21","nodeType":"YulFunctionCall","src":"1870:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1857:12:21","nodeType":"YulIdentifier","src":"1857:12:21"},"nativeSrc":"1857:32:21","nodeType":"YulFunctionCall","src":"1857:32:21"},"variables":[{"name":"offset","nativeSrc":"1847:6:21","nodeType":"YulTypedName","src":"1847:6:21","type":""}]},{"nativeSrc":"1898:28:21","nodeType":"YulVariableDeclaration","src":"1898:28:21","value":{"kind":"number","nativeSrc":"1908:18:21","nodeType":"YulLiteral","src":"1908:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1902:2:21","nodeType":"YulTypedName","src":"1902:2:21","type":""}]},{"body":{"nativeSrc":"1953:16:21","nodeType":"YulBlock","src":"1953:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1962:1:21","nodeType":"YulLiteral","src":"1962:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1965:1:21","nodeType":"YulLiteral","src":"1965:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1955:6:21","nodeType":"YulIdentifier","src":"1955:6:21"},"nativeSrc":"1955:12:21","nodeType":"YulFunctionCall","src":"1955:12:21"},"nativeSrc":"1955:12:21","nodeType":"YulExpressionStatement","src":"1955:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1941:6:21","nodeType":"YulIdentifier","src":"1941:6:21"},{"name":"_1","nativeSrc":"1949:2:21","nodeType":"YulIdentifier","src":"1949:2:21"}],"functionName":{"name":"gt","nativeSrc":"1938:2:21","nodeType":"YulIdentifier","src":"1938:2:21"},"nativeSrc":"1938:14:21","nodeType":"YulFunctionCall","src":"1938:14:21"},"nativeSrc":"1935:34:21","nodeType":"YulIf","src":"1935:34:21"},{"nativeSrc":"1978:32:21","nodeType":"YulVariableDeclaration","src":"1978:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1992:9:21","nodeType":"YulIdentifier","src":"1992:9:21"},{"name":"offset","nativeSrc":"2003:6:21","nodeType":"YulIdentifier","src":"2003:6:21"}],"functionName":{"name":"add","nativeSrc":"1988:3:21","nodeType":"YulIdentifier","src":"1988:3:21"},"nativeSrc":"1988:22:21","nodeType":"YulFunctionCall","src":"1988:22:21"},"variables":[{"name":"_2","nativeSrc":"1982:2:21","nodeType":"YulTypedName","src":"1982:2:21","type":""}]},{"body":{"nativeSrc":"2058:16:21","nodeType":"YulBlock","src":"2058:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2067:1:21","nodeType":"YulLiteral","src":"2067:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2070:1:21","nodeType":"YulLiteral","src":"2070:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2060:6:21","nodeType":"YulIdentifier","src":"2060:6:21"},"nativeSrc":"2060:12:21","nodeType":"YulFunctionCall","src":"2060:12:21"},"nativeSrc":"2060:12:21","nodeType":"YulExpressionStatement","src":"2060:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2037:2:21","nodeType":"YulIdentifier","src":"2037:2:21"},{"kind":"number","nativeSrc":"2041:4:21","nodeType":"YulLiteral","src":"2041:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2033:3:21","nodeType":"YulIdentifier","src":"2033:3:21"},"nativeSrc":"2033:13:21","nodeType":"YulFunctionCall","src":"2033:13:21"},{"name":"dataEnd","nativeSrc":"2048:7:21","nodeType":"YulIdentifier","src":"2048:7:21"}],"functionName":{"name":"slt","nativeSrc":"2029:3:21","nodeType":"YulIdentifier","src":"2029:3:21"},"nativeSrc":"2029:27:21","nodeType":"YulFunctionCall","src":"2029:27:21"}],"functionName":{"name":"iszero","nativeSrc":"2022:6:21","nodeType":"YulIdentifier","src":"2022:6:21"},"nativeSrc":"2022:35:21","nodeType":"YulFunctionCall","src":"2022:35:21"},"nativeSrc":"2019:55:21","nodeType":"YulIf","src":"2019:55:21"},{"nativeSrc":"2083:26:21","nodeType":"YulVariableDeclaration","src":"2083:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"2106:2:21","nodeType":"YulIdentifier","src":"2106:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"2093:12:21","nodeType":"YulIdentifier","src":"2093:12:21"},"nativeSrc":"2093:16:21","nodeType":"YulFunctionCall","src":"2093:16:21"},"variables":[{"name":"_3","nativeSrc":"2087:2:21","nodeType":"YulTypedName","src":"2087:2:21","type":""}]},{"body":{"nativeSrc":"2132:22:21","nodeType":"YulBlock","src":"2132:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2134:16:21","nodeType":"YulIdentifier","src":"2134:16:21"},"nativeSrc":"2134:18:21","nodeType":"YulFunctionCall","src":"2134:18:21"},"nativeSrc":"2134:18:21","nodeType":"YulExpressionStatement","src":"2134:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"2124:2:21","nodeType":"YulIdentifier","src":"2124:2:21"},{"name":"_1","nativeSrc":"2128:2:21","nodeType":"YulIdentifier","src":"2128:2:21"}],"functionName":{"name":"gt","nativeSrc":"2121:2:21","nodeType":"YulIdentifier","src":"2121:2:21"},"nativeSrc":"2121:10:21","nodeType":"YulFunctionCall","src":"2121:10:21"},"nativeSrc":"2118:36:21","nodeType":"YulIf","src":"2118:36:21"},{"nativeSrc":"2163:17:21","nodeType":"YulVariableDeclaration","src":"2163:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"2177:2:21","nodeType":"YulLiteral","src":"2177:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2173:3:21","nodeType":"YulIdentifier","src":"2173:3:21"},"nativeSrc":"2173:7:21","nodeType":"YulFunctionCall","src":"2173:7:21"},"variables":[{"name":"_4","nativeSrc":"2167:2:21","nodeType":"YulTypedName","src":"2167:2:21","type":""}]},{"nativeSrc":"2189:23:21","nodeType":"YulVariableDeclaration","src":"2189:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"2209:2:21","nodeType":"YulLiteral","src":"2209:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2203:5:21","nodeType":"YulIdentifier","src":"2203:5:21"},"nativeSrc":"2203:9:21","nodeType":"YulFunctionCall","src":"2203:9:21"},"variables":[{"name":"memPtr","nativeSrc":"2193:6:21","nodeType":"YulTypedName","src":"2193:6:21","type":""}]},{"nativeSrc":"2221:71:21","nodeType":"YulVariableDeclaration","src":"2221:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"2243:6:21","nodeType":"YulIdentifier","src":"2243:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2267:2:21","nodeType":"YulIdentifier","src":"2267:2:21"},{"kind":"number","nativeSrc":"2271:4:21","nodeType":"YulLiteral","src":"2271:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2263:3:21","nodeType":"YulIdentifier","src":"2263:3:21"},"nativeSrc":"2263:13:21","nodeType":"YulFunctionCall","src":"2263:13:21"},{"name":"_4","nativeSrc":"2278:2:21","nodeType":"YulIdentifier","src":"2278:2:21"}],"functionName":{"name":"and","nativeSrc":"2259:3:21","nodeType":"YulIdentifier","src":"2259:3:21"},"nativeSrc":"2259:22:21","nodeType":"YulFunctionCall","src":"2259:22:21"},{"kind":"number","nativeSrc":"2283:2:21","nodeType":"YulLiteral","src":"2283:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"2255:3:21","nodeType":"YulIdentifier","src":"2255:3:21"},"nativeSrc":"2255:31:21","nodeType":"YulFunctionCall","src":"2255:31:21"},{"name":"_4","nativeSrc":"2288:2:21","nodeType":"YulIdentifier","src":"2288:2:21"}],"functionName":{"name":"and","nativeSrc":"2251:3:21","nodeType":"YulIdentifier","src":"2251:3:21"},"nativeSrc":"2251:40:21","nodeType":"YulFunctionCall","src":"2251:40:21"}],"functionName":{"name":"add","nativeSrc":"2239:3:21","nodeType":"YulIdentifier","src":"2239:3:21"},"nativeSrc":"2239:53:21","nodeType":"YulFunctionCall","src":"2239:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"2225:10:21","nodeType":"YulTypedName","src":"2225:10:21","type":""}]},{"body":{"nativeSrc":"2351:22:21","nodeType":"YulBlock","src":"2351:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2353:16:21","nodeType":"YulIdentifier","src":"2353:16:21"},"nativeSrc":"2353:18:21","nodeType":"YulFunctionCall","src":"2353:18:21"},"nativeSrc":"2353:18:21","nodeType":"YulExpressionStatement","src":"2353:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2310:10:21","nodeType":"YulIdentifier","src":"2310:10:21"},{"name":"_1","nativeSrc":"2322:2:21","nodeType":"YulIdentifier","src":"2322:2:21"}],"functionName":{"name":"gt","nativeSrc":"2307:2:21","nodeType":"YulIdentifier","src":"2307:2:21"},"nativeSrc":"2307:18:21","nodeType":"YulFunctionCall","src":"2307:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2330:10:21","nodeType":"YulIdentifier","src":"2330:10:21"},{"name":"memPtr","nativeSrc":"2342:6:21","nodeType":"YulIdentifier","src":"2342:6:21"}],"functionName":{"name":"lt","nativeSrc":"2327:2:21","nodeType":"YulIdentifier","src":"2327:2:21"},"nativeSrc":"2327:22:21","nodeType":"YulFunctionCall","src":"2327:22:21"}],"functionName":{"name":"or","nativeSrc":"2304:2:21","nodeType":"YulIdentifier","src":"2304:2:21"},"nativeSrc":"2304:46:21","nodeType":"YulFunctionCall","src":"2304:46:21"},"nativeSrc":"2301:72:21","nodeType":"YulIf","src":"2301:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2389:2:21","nodeType":"YulLiteral","src":"2389:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2393:10:21","nodeType":"YulIdentifier","src":"2393:10:21"}],"functionName":{"name":"mstore","nativeSrc":"2382:6:21","nodeType":"YulIdentifier","src":"2382:6:21"},"nativeSrc":"2382:22:21","nodeType":"YulFunctionCall","src":"2382:22:21"},"nativeSrc":"2382:22:21","nodeType":"YulExpressionStatement","src":"2382:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2420:6:21","nodeType":"YulIdentifier","src":"2420:6:21"},{"name":"_3","nativeSrc":"2428:2:21","nodeType":"YulIdentifier","src":"2428:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2413:6:21","nodeType":"YulIdentifier","src":"2413:6:21"},"nativeSrc":"2413:18:21","nodeType":"YulFunctionCall","src":"2413:18:21"},"nativeSrc":"2413:18:21","nodeType":"YulExpressionStatement","src":"2413:18:21"},{"body":{"nativeSrc":"2477:16:21","nodeType":"YulBlock","src":"2477:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2486:1:21","nodeType":"YulLiteral","src":"2486:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2489:1:21","nodeType":"YulLiteral","src":"2489:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2479:6:21","nodeType":"YulIdentifier","src":"2479:6:21"},"nativeSrc":"2479:12:21","nodeType":"YulFunctionCall","src":"2479:12:21"},"nativeSrc":"2479:12:21","nodeType":"YulExpressionStatement","src":"2479:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2454:2:21","nodeType":"YulIdentifier","src":"2454:2:21"},{"name":"_3","nativeSrc":"2458:2:21","nodeType":"YulIdentifier","src":"2458:2:21"}],"functionName":{"name":"add","nativeSrc":"2450:3:21","nodeType":"YulIdentifier","src":"2450:3:21"},"nativeSrc":"2450:11:21","nodeType":"YulFunctionCall","src":"2450:11:21"},{"kind":"number","nativeSrc":"2463:2:21","nodeType":"YulLiteral","src":"2463:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2446:3:21","nodeType":"YulIdentifier","src":"2446:3:21"},"nativeSrc":"2446:20:21","nodeType":"YulFunctionCall","src":"2446:20:21"},{"name":"dataEnd","nativeSrc":"2468:7:21","nodeType":"YulIdentifier","src":"2468:7:21"}],"functionName":{"name":"gt","nativeSrc":"2443:2:21","nodeType":"YulIdentifier","src":"2443:2:21"},"nativeSrc":"2443:33:21","nodeType":"YulFunctionCall","src":"2443:33:21"},"nativeSrc":"2440:53:21","nodeType":"YulIf","src":"2440:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2519:6:21","nodeType":"YulIdentifier","src":"2519:6:21"},{"kind":"number","nativeSrc":"2527:2:21","nodeType":"YulLiteral","src":"2527:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2515:3:21","nodeType":"YulIdentifier","src":"2515:3:21"},"nativeSrc":"2515:15:21","nodeType":"YulFunctionCall","src":"2515:15:21"},{"arguments":[{"name":"_2","nativeSrc":"2536:2:21","nodeType":"YulIdentifier","src":"2536:2:21"},{"kind":"number","nativeSrc":"2540:2:21","nodeType":"YulLiteral","src":"2540:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2532:3:21","nodeType":"YulIdentifier","src":"2532:3:21"},"nativeSrc":"2532:11:21","nodeType":"YulFunctionCall","src":"2532:11:21"},{"name":"_3","nativeSrc":"2545:2:21","nodeType":"YulIdentifier","src":"2545:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"2502:12:21","nodeType":"YulIdentifier","src":"2502:12:21"},"nativeSrc":"2502:46:21","nodeType":"YulFunctionCall","src":"2502:46:21"},"nativeSrc":"2502:46:21","nodeType":"YulExpressionStatement","src":"2502:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2572:6:21","nodeType":"YulIdentifier","src":"2572:6:21"},{"name":"_3","nativeSrc":"2580:2:21","nodeType":"YulIdentifier","src":"2580:2:21"}],"functionName":{"name":"add","nativeSrc":"2568:3:21","nodeType":"YulIdentifier","src":"2568:3:21"},"nativeSrc":"2568:15:21","nodeType":"YulFunctionCall","src":"2568:15:21"},{"kind":"number","nativeSrc":"2585:2:21","nodeType":"YulLiteral","src":"2585:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2564:3:21","nodeType":"YulIdentifier","src":"2564:3:21"},"nativeSrc":"2564:24:21","nodeType":"YulFunctionCall","src":"2564:24:21"},{"kind":"number","nativeSrc":"2590:1:21","nodeType":"YulLiteral","src":"2590:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2557:6:21","nodeType":"YulIdentifier","src":"2557:6:21"},"nativeSrc":"2557:35:21","nodeType":"YulFunctionCall","src":"2557:35:21"},"nativeSrc":"2557:35:21","nodeType":"YulExpressionStatement","src":"2557:35:21"},{"nativeSrc":"2601:16:21","nodeType":"YulAssignment","src":"2601:16:21","value":{"name":"memPtr","nativeSrc":"2611:6:21","nodeType":"YulIdentifier","src":"2611:6:21"},"variableNames":[{"name":"value2","nativeSrc":"2601:6:21","nodeType":"YulIdentifier","src":"2601:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_addresst_bytes_memory_ptr","nativeSrc":"1329:1294:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1429:9:21","nodeType":"YulTypedName","src":"1429:9:21","type":""},{"name":"dataEnd","nativeSrc":"1440:7:21","nodeType":"YulTypedName","src":"1440:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1452:6:21","nodeType":"YulTypedName","src":"1452:6:21","type":""},{"name":"value1","nativeSrc":"1460:6:21","nodeType":"YulTypedName","src":"1460:6:21","type":""},{"name":"value2","nativeSrc":"1468:6:21","nodeType":"YulTypedName","src":"1468:6:21","type":""}],"src":"1329:1294:21"},{"body":{"nativeSrc":"2698:207:21","nodeType":"YulBlock","src":"2698:207:21","statements":[{"body":{"nativeSrc":"2744:16:21","nodeType":"YulBlock","src":"2744:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2753:1:21","nodeType":"YulLiteral","src":"2753:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2756:1:21","nodeType":"YulLiteral","src":"2756:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2746:6:21","nodeType":"YulIdentifier","src":"2746:6:21"},"nativeSrc":"2746:12:21","nodeType":"YulFunctionCall","src":"2746:12:21"},"nativeSrc":"2746:12:21","nodeType":"YulExpressionStatement","src":"2746:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2719:7:21","nodeType":"YulIdentifier","src":"2719:7:21"},{"name":"headStart","nativeSrc":"2728:9:21","nodeType":"YulIdentifier","src":"2728:9:21"}],"functionName":{"name":"sub","nativeSrc":"2715:3:21","nodeType":"YulIdentifier","src":"2715:3:21"},"nativeSrc":"2715:23:21","nodeType":"YulFunctionCall","src":"2715:23:21"},{"kind":"number","nativeSrc":"2740:2:21","nodeType":"YulLiteral","src":"2740:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2711:3:21","nodeType":"YulIdentifier","src":"2711:3:21"},"nativeSrc":"2711:32:21","nodeType":"YulFunctionCall","src":"2711:32:21"},"nativeSrc":"2708:52:21","nodeType":"YulIf","src":"2708:52:21"},{"nativeSrc":"2769:36:21","nodeType":"YulVariableDeclaration","src":"2769:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2795:9:21","nodeType":"YulIdentifier","src":"2795:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"2782:12:21","nodeType":"YulIdentifier","src":"2782:12:21"},"nativeSrc":"2782:23:21","nodeType":"YulFunctionCall","src":"2782:23:21"},"variables":[{"name":"value","nativeSrc":"2773:5:21","nodeType":"YulTypedName","src":"2773:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2869:5:21","nodeType":"YulIdentifier","src":"2869:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"2814:54:21","nodeType":"YulIdentifier","src":"2814:54:21"},"nativeSrc":"2814:61:21","nodeType":"YulFunctionCall","src":"2814:61:21"},"nativeSrc":"2814:61:21","nodeType":"YulExpressionStatement","src":"2814:61:21"},{"nativeSrc":"2884:15:21","nodeType":"YulAssignment","src":"2884:15:21","value":{"name":"value","nativeSrc":"2894:5:21","nodeType":"YulIdentifier","src":"2894:5:21"},"variableNames":[{"name":"value0","nativeSrc":"2884:6:21","nodeType":"YulIdentifier","src":"2884:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2628:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2664:9:21","nodeType":"YulTypedName","src":"2664:9:21","type":""},{"name":"dataEnd","nativeSrc":"2675:7:21","nodeType":"YulTypedName","src":"2675:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2687:6:21","nodeType":"YulTypedName","src":"2687:6:21","type":""}],"src":"2628:277:21"},{"body":{"nativeSrc":"3101:76:21","nodeType":"YulBlock","src":"3101:76:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3118:3:21","nodeType":"YulIdentifier","src":"3118:3:21"},{"arguments":[{"kind":"number","nativeSrc":"3127:3:21","nodeType":"YulLiteral","src":"3127:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"3132:10:21","nodeType":"YulLiteral","src":"3132:10:21","type":"","value":"0x5c60da1b"}],"functionName":{"name":"shl","nativeSrc":"3123:3:21","nodeType":"YulIdentifier","src":"3123:3:21"},"nativeSrc":"3123:20:21","nodeType":"YulFunctionCall","src":"3123:20:21"}],"functionName":{"name":"mstore","nativeSrc":"3111:6:21","nodeType":"YulIdentifier","src":"3111:6:21"},"nativeSrc":"3111:33:21","nodeType":"YulFunctionCall","src":"3111:33:21"},"nativeSrc":"3111:33:21","nodeType":"YulExpressionStatement","src":"3111:33:21"},{"nativeSrc":"3153:18:21","nodeType":"YulAssignment","src":"3153:18:21","value":{"arguments":[{"name":"pos","nativeSrc":"3164:3:21","nodeType":"YulIdentifier","src":"3164:3:21"},{"kind":"number","nativeSrc":"3169:1:21","nodeType":"YulLiteral","src":"3169:1:21","type":"","value":"4"}],"functionName":{"name":"add","nativeSrc":"3160:3:21","nodeType":"YulIdentifier","src":"3160:3:21"},"nativeSrc":"3160:11:21","nodeType":"YulFunctionCall","src":"3160:11:21"},"variableNames":[{"name":"end","nativeSrc":"3153:3:21","nodeType":"YulIdentifier","src":"3153:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"2910:267:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3085:3:21","nodeType":"YulTypedName","src":"3085:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3093:3:21","nodeType":"YulTypedName","src":"3093:3:21","type":""}],"src":"2910:267:21"},{"body":{"nativeSrc":"3271:200:21","nodeType":"YulBlock","src":"3271:200:21","statements":[{"body":{"nativeSrc":"3317:16:21","nodeType":"YulBlock","src":"3317:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3326:1:21","nodeType":"YulLiteral","src":"3326:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3329:1:21","nodeType":"YulLiteral","src":"3329:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3319:6:21","nodeType":"YulIdentifier","src":"3319:6:21"},"nativeSrc":"3319:12:21","nodeType":"YulFunctionCall","src":"3319:12:21"},"nativeSrc":"3319:12:21","nodeType":"YulExpressionStatement","src":"3319:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3292:7:21","nodeType":"YulIdentifier","src":"3292:7:21"},{"name":"headStart","nativeSrc":"3301:9:21","nodeType":"YulIdentifier","src":"3301:9:21"}],"functionName":{"name":"sub","nativeSrc":"3288:3:21","nodeType":"YulIdentifier","src":"3288:3:21"},"nativeSrc":"3288:23:21","nodeType":"YulFunctionCall","src":"3288:23:21"},{"kind":"number","nativeSrc":"3313:2:21","nodeType":"YulLiteral","src":"3313:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3284:3:21","nodeType":"YulIdentifier","src":"3284:3:21"},"nativeSrc":"3284:32:21","nodeType":"YulFunctionCall","src":"3284:32:21"},"nativeSrc":"3281:52:21","nodeType":"YulIf","src":"3281:52:21"},{"nativeSrc":"3342:29:21","nodeType":"YulVariableDeclaration","src":"3342:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3361:9:21","nodeType":"YulIdentifier","src":"3361:9:21"}],"functionName":{"name":"mload","nativeSrc":"3355:5:21","nodeType":"YulIdentifier","src":"3355:5:21"},"nativeSrc":"3355:16:21","nodeType":"YulFunctionCall","src":"3355:16:21"},"variables":[{"name":"value","nativeSrc":"3346:5:21","nodeType":"YulTypedName","src":"3346:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3435:5:21","nodeType":"YulIdentifier","src":"3435:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"3380:54:21","nodeType":"YulIdentifier","src":"3380:54:21"},"nativeSrc":"3380:61:21","nodeType":"YulFunctionCall","src":"3380:61:21"},"nativeSrc":"3380:61:21","nodeType":"YulExpressionStatement","src":"3380:61:21"},{"nativeSrc":"3450:15:21","nodeType":"YulAssignment","src":"3450:15:21","value":{"name":"value","nativeSrc":"3460:5:21","nodeType":"YulIdentifier","src":"3460:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3450:6:21","nodeType":"YulIdentifier","src":"3450:6:21"}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nativeSrc":"3182:289:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3237:9:21","nodeType":"YulTypedName","src":"3237:9:21","type":""},{"name":"dataEnd","nativeSrc":"3248:7:21","nodeType":"YulTypedName","src":"3248:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3260:6:21","nodeType":"YulTypedName","src":"3260:6:21","type":""}],"src":"3182:289:21"},{"body":{"nativeSrc":"3623:496:21","nodeType":"YulBlock","src":"3623:496:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3640:9:21","nodeType":"YulIdentifier","src":"3640:9:21"},{"arguments":[{"name":"value0","nativeSrc":"3655:6:21","nodeType":"YulIdentifier","src":"3655:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3671:3:21","nodeType":"YulLiteral","src":"3671:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"3676:1:21","nodeType":"YulLiteral","src":"3676:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3667:3:21","nodeType":"YulIdentifier","src":"3667:3:21"},"nativeSrc":"3667:11:21","nodeType":"YulFunctionCall","src":"3667:11:21"},{"kind":"number","nativeSrc":"3680:1:21","nodeType":"YulLiteral","src":"3680:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3663:3:21","nodeType":"YulIdentifier","src":"3663:3:21"},"nativeSrc":"3663:19:21","nodeType":"YulFunctionCall","src":"3663:19:21"}],"functionName":{"name":"and","nativeSrc":"3651:3:21","nodeType":"YulIdentifier","src":"3651:3:21"},"nativeSrc":"3651:32:21","nodeType":"YulFunctionCall","src":"3651:32:21"}],"functionName":{"name":"mstore","nativeSrc":"3633:6:21","nodeType":"YulIdentifier","src":"3633:6:21"},"nativeSrc":"3633:51:21","nodeType":"YulFunctionCall","src":"3633:51:21"},"nativeSrc":"3633:51:21","nodeType":"YulExpressionStatement","src":"3633:51:21"},{"nativeSrc":"3693:12:21","nodeType":"YulVariableDeclaration","src":"3693:12:21","value":{"kind":"number","nativeSrc":"3703:2:21","nodeType":"YulLiteral","src":"3703:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3697:2:21","nodeType":"YulTypedName","src":"3697:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3725:9:21","nodeType":"YulIdentifier","src":"3725:9:21"},{"kind":"number","nativeSrc":"3736:2:21","nodeType":"YulLiteral","src":"3736:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3721:3:21","nodeType":"YulIdentifier","src":"3721:3:21"},"nativeSrc":"3721:18:21","nodeType":"YulFunctionCall","src":"3721:18:21"},{"kind":"number","nativeSrc":"3741:2:21","nodeType":"YulLiteral","src":"3741:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"3714:6:21","nodeType":"YulIdentifier","src":"3714:6:21"},"nativeSrc":"3714:30:21","nodeType":"YulFunctionCall","src":"3714:30:21"},"nativeSrc":"3714:30:21","nodeType":"YulExpressionStatement","src":"3714:30:21"},{"nativeSrc":"3753:27:21","nodeType":"YulVariableDeclaration","src":"3753:27:21","value":{"arguments":[{"name":"value1","nativeSrc":"3773:6:21","nodeType":"YulIdentifier","src":"3773:6:21"}],"functionName":{"name":"mload","nativeSrc":"3767:5:21","nodeType":"YulIdentifier","src":"3767:5:21"},"nativeSrc":"3767:13:21","nodeType":"YulFunctionCall","src":"3767:13:21"},"variables":[{"name":"length","nativeSrc":"3757:6:21","nodeType":"YulTypedName","src":"3757:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3800:9:21","nodeType":"YulIdentifier","src":"3800:9:21"},{"kind":"number","nativeSrc":"3811:2:21","nodeType":"YulLiteral","src":"3811:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3796:3:21","nodeType":"YulIdentifier","src":"3796:3:21"},"nativeSrc":"3796:18:21","nodeType":"YulFunctionCall","src":"3796:18:21"},{"name":"length","nativeSrc":"3816:6:21","nodeType":"YulIdentifier","src":"3816:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3789:6:21","nodeType":"YulIdentifier","src":"3789:6:21"},"nativeSrc":"3789:34:21","nodeType":"YulFunctionCall","src":"3789:34:21"},"nativeSrc":"3789:34:21","nodeType":"YulExpressionStatement","src":"3789:34:21"},{"nativeSrc":"3832:10:21","nodeType":"YulVariableDeclaration","src":"3832:10:21","value":{"kind":"number","nativeSrc":"3841:1:21","nodeType":"YulLiteral","src":"3841:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3836:1:21","nodeType":"YulTypedName","src":"3836:1:21","type":""}]},{"body":{"nativeSrc":"3901:90:21","nodeType":"YulBlock","src":"3901:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3930:9:21","nodeType":"YulIdentifier","src":"3930:9:21"},{"name":"i","nativeSrc":"3941:1:21","nodeType":"YulIdentifier","src":"3941:1:21"}],"functionName":{"name":"add","nativeSrc":"3926:3:21","nodeType":"YulIdentifier","src":"3926:3:21"},"nativeSrc":"3926:17:21","nodeType":"YulFunctionCall","src":"3926:17:21"},{"kind":"number","nativeSrc":"3945:2:21","nodeType":"YulLiteral","src":"3945:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3922:3:21","nodeType":"YulIdentifier","src":"3922:3:21"},"nativeSrc":"3922:26:21","nodeType":"YulFunctionCall","src":"3922:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"3964:6:21","nodeType":"YulIdentifier","src":"3964:6:21"},{"name":"i","nativeSrc":"3972:1:21","nodeType":"YulIdentifier","src":"3972:1:21"}],"functionName":{"name":"add","nativeSrc":"3960:3:21","nodeType":"YulIdentifier","src":"3960:3:21"},"nativeSrc":"3960:14:21","nodeType":"YulFunctionCall","src":"3960:14:21"},{"name":"_1","nativeSrc":"3976:2:21","nodeType":"YulIdentifier","src":"3976:2:21"}],"functionName":{"name":"add","nativeSrc":"3956:3:21","nodeType":"YulIdentifier","src":"3956:3:21"},"nativeSrc":"3956:23:21","nodeType":"YulFunctionCall","src":"3956:23:21"}],"functionName":{"name":"mload","nativeSrc":"3950:5:21","nodeType":"YulIdentifier","src":"3950:5:21"},"nativeSrc":"3950:30:21","nodeType":"YulFunctionCall","src":"3950:30:21"}],"functionName":{"name":"mstore","nativeSrc":"3915:6:21","nodeType":"YulIdentifier","src":"3915:6:21"},"nativeSrc":"3915:66:21","nodeType":"YulFunctionCall","src":"3915:66:21"},"nativeSrc":"3915:66:21","nodeType":"YulExpressionStatement","src":"3915:66:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3862:1:21","nodeType":"YulIdentifier","src":"3862:1:21"},{"name":"length","nativeSrc":"3865:6:21","nodeType":"YulIdentifier","src":"3865:6:21"}],"functionName":{"name":"lt","nativeSrc":"3859:2:21","nodeType":"YulIdentifier","src":"3859:2:21"},"nativeSrc":"3859:13:21","nodeType":"YulFunctionCall","src":"3859:13:21"},"nativeSrc":"3851:140:21","nodeType":"YulForLoop","post":{"nativeSrc":"3873:19:21","nodeType":"YulBlock","src":"3873:19:21","statements":[{"nativeSrc":"3875:15:21","nodeType":"YulAssignment","src":"3875:15:21","value":{"arguments":[{"name":"i","nativeSrc":"3884:1:21","nodeType":"YulIdentifier","src":"3884:1:21"},{"name":"_1","nativeSrc":"3887:2:21","nodeType":"YulIdentifier","src":"3887:2:21"}],"functionName":{"name":"add","nativeSrc":"3880:3:21","nodeType":"YulIdentifier","src":"3880:3:21"},"nativeSrc":"3880:10:21","nodeType":"YulFunctionCall","src":"3880:10:21"},"variableNames":[{"name":"i","nativeSrc":"3875:1:21","nodeType":"YulIdentifier","src":"3875:1:21"}]}]},"pre":{"nativeSrc":"3855:3:21","nodeType":"YulBlock","src":"3855:3:21","statements":[]},"src":"3851:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4015:9:21","nodeType":"YulIdentifier","src":"4015:9:21"},{"name":"length","nativeSrc":"4026:6:21","nodeType":"YulIdentifier","src":"4026:6:21"}],"functionName":{"name":"add","nativeSrc":"4011:3:21","nodeType":"YulIdentifier","src":"4011:3:21"},"nativeSrc":"4011:22:21","nodeType":"YulFunctionCall","src":"4011:22:21"},{"kind":"number","nativeSrc":"4035:2:21","nodeType":"YulLiteral","src":"4035:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4007:3:21","nodeType":"YulIdentifier","src":"4007:3:21"},"nativeSrc":"4007:31:21","nodeType":"YulFunctionCall","src":"4007:31:21"},{"kind":"number","nativeSrc":"4040:1:21","nodeType":"YulLiteral","src":"4040:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4000:6:21","nodeType":"YulIdentifier","src":"4000:6:21"},"nativeSrc":"4000:42:21","nodeType":"YulFunctionCall","src":"4000:42:21"},"nativeSrc":"4000:42:21","nodeType":"YulExpressionStatement","src":"4000:42:21"},{"nativeSrc":"4051:62:21","nodeType":"YulAssignment","src":"4051:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4067:9:21","nodeType":"YulIdentifier","src":"4067:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4086:6:21","nodeType":"YulIdentifier","src":"4086:6:21"},{"kind":"number","nativeSrc":"4094:2:21","nodeType":"YulLiteral","src":"4094:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4082:3:21","nodeType":"YulIdentifier","src":"4082:3:21"},"nativeSrc":"4082:15:21","nodeType":"YulFunctionCall","src":"4082:15:21"},{"arguments":[{"kind":"number","nativeSrc":"4103:2:21","nodeType":"YulLiteral","src":"4103:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4099:3:21","nodeType":"YulIdentifier","src":"4099:3:21"},"nativeSrc":"4099:7:21","nodeType":"YulFunctionCall","src":"4099:7:21"}],"functionName":{"name":"and","nativeSrc":"4078:3:21","nodeType":"YulIdentifier","src":"4078:3:21"},"nativeSrc":"4078:29:21","nodeType":"YulFunctionCall","src":"4078:29:21"}],"functionName":{"name":"add","nativeSrc":"4063:3:21","nodeType":"YulIdentifier","src":"4063:3:21"},"nativeSrc":"4063:45:21","nodeType":"YulFunctionCall","src":"4063:45:21"},{"kind":"number","nativeSrc":"4110:2:21","nodeType":"YulLiteral","src":"4110:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4059:3:21","nodeType":"YulIdentifier","src":"4059:3:21"},"nativeSrc":"4059:54:21","nodeType":"YulFunctionCall","src":"4059:54:21"},"variableNames":[{"name":"tail","nativeSrc":"4051:4:21","nodeType":"YulIdentifier","src":"4051:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"3476:643:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3584:9:21","nodeType":"YulTypedName","src":"3584:9:21","type":""},{"name":"value1","nativeSrc":"3595:6:21","nodeType":"YulTypedName","src":"3595:6:21","type":""},{"name":"value0","nativeSrc":"3603:6:21","nodeType":"YulTypedName","src":"3603:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3614:4:21","nodeType":"YulTypedName","src":"3614:4:21","type":""}],"src":"3476:643:21"},{"body":{"nativeSrc":"4298:228:21","nodeType":"YulBlock","src":"4298:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4315:9:21","nodeType":"YulIdentifier","src":"4315:9:21"},{"kind":"number","nativeSrc":"4326:2:21","nodeType":"YulLiteral","src":"4326:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4308:6:21","nodeType":"YulIdentifier","src":"4308:6:21"},"nativeSrc":"4308:21:21","nodeType":"YulFunctionCall","src":"4308:21:21"},"nativeSrc":"4308:21:21","nodeType":"YulExpressionStatement","src":"4308:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4349:9:21","nodeType":"YulIdentifier","src":"4349:9:21"},{"kind":"number","nativeSrc":"4360:2:21","nodeType":"YulLiteral","src":"4360:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4345:3:21","nodeType":"YulIdentifier","src":"4345:3:21"},"nativeSrc":"4345:18:21","nodeType":"YulFunctionCall","src":"4345:18:21"},{"kind":"number","nativeSrc":"4365:2:21","nodeType":"YulLiteral","src":"4365:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"4338:6:21","nodeType":"YulIdentifier","src":"4338:6:21"},"nativeSrc":"4338:30:21","nodeType":"YulFunctionCall","src":"4338:30:21"},"nativeSrc":"4338:30:21","nodeType":"YulExpressionStatement","src":"4338:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4388:9:21","nodeType":"YulIdentifier","src":"4388:9:21"},{"kind":"number","nativeSrc":"4399:2:21","nodeType":"YulLiteral","src":"4399:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4384:3:21","nodeType":"YulIdentifier","src":"4384:3:21"},"nativeSrc":"4384:18:21","nodeType":"YulFunctionCall","src":"4384:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"4404:34:21","nodeType":"YulLiteral","src":"4404:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"4377:6:21","nodeType":"YulIdentifier","src":"4377:6:21"},"nativeSrc":"4377:62:21","nodeType":"YulFunctionCall","src":"4377:62:21"},"nativeSrc":"4377:62:21","nodeType":"YulExpressionStatement","src":"4377:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4459:9:21","nodeType":"YulIdentifier","src":"4459:9:21"},{"kind":"number","nativeSrc":"4470:2:21","nodeType":"YulLiteral","src":"4470:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4455:3:21","nodeType":"YulIdentifier","src":"4455:3:21"},"nativeSrc":"4455:18:21","nodeType":"YulFunctionCall","src":"4455:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"4475:8:21","nodeType":"YulLiteral","src":"4475:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"4448:6:21","nodeType":"YulIdentifier","src":"4448:6:21"},"nativeSrc":"4448:36:21","nodeType":"YulFunctionCall","src":"4448:36:21"},"nativeSrc":"4448:36:21","nodeType":"YulExpressionStatement","src":"4448:36:21"},{"nativeSrc":"4493:27:21","nodeType":"YulAssignment","src":"4493:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4505:9:21","nodeType":"YulIdentifier","src":"4505:9:21"},{"kind":"number","nativeSrc":"4516:3:21","nodeType":"YulLiteral","src":"4516:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4501:3:21","nodeType":"YulIdentifier","src":"4501:3:21"},"nativeSrc":"4501:19:21","nodeType":"YulFunctionCall","src":"4501:19:21"},"variableNames":[{"name":"tail","nativeSrc":"4493:4:21","nodeType":"YulIdentifier","src":"4493:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4124:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4275:9:21","nodeType":"YulTypedName","src":"4275:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4289:4:21","nodeType":"YulTypedName","src":"4289:4:21","type":""}],"src":"4124:402:21"},{"body":{"nativeSrc":"4722:76:21","nodeType":"YulBlock","src":"4722:76:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4739:3:21","nodeType":"YulIdentifier","src":"4739:3:21"},{"arguments":[{"kind":"number","nativeSrc":"4748:3:21","nodeType":"YulLiteral","src":"4748:3:21","type":"","value":"230"},{"kind":"number","nativeSrc":"4753:10:21","nodeType":"YulLiteral","src":"4753:10:21","type":"","value":"0x03e14691"}],"functionName":{"name":"shl","nativeSrc":"4744:3:21","nodeType":"YulIdentifier","src":"4744:3:21"},"nativeSrc":"4744:20:21","nodeType":"YulFunctionCall","src":"4744:20:21"}],"functionName":{"name":"mstore","nativeSrc":"4732:6:21","nodeType":"YulIdentifier","src":"4732:6:21"},"nativeSrc":"4732:33:21","nodeType":"YulFunctionCall","src":"4732:33:21"},"nativeSrc":"4732:33:21","nodeType":"YulExpressionStatement","src":"4732:33:21"},{"nativeSrc":"4774:18:21","nodeType":"YulAssignment","src":"4774:18:21","value":{"arguments":[{"name":"pos","nativeSrc":"4785:3:21","nodeType":"YulIdentifier","src":"4785:3:21"},{"kind":"number","nativeSrc":"4790:1:21","nodeType":"YulLiteral","src":"4790:1:21","type":"","value":"4"}],"functionName":{"name":"add","nativeSrc":"4781:3:21","nodeType":"YulIdentifier","src":"4781:3:21"},"nativeSrc":"4781:11:21","nodeType":"YulFunctionCall","src":"4781:11:21"},"variableNames":[{"name":"end","nativeSrc":"4774:3:21","nodeType":"YulIdentifier","src":"4774:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4531:267:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4706:3:21","nodeType":"YulTypedName","src":"4706:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4714:3:21","nodeType":"YulTypedName","src":"4714:3:21","type":""}],"src":"4531:267:21"},{"body":{"nativeSrc":"4977:182:21","nodeType":"YulBlock","src":"4977:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4994:9:21","nodeType":"YulIdentifier","src":"4994:9:21"},{"kind":"number","nativeSrc":"5005:2:21","nodeType":"YulLiteral","src":"5005:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4987:6:21","nodeType":"YulIdentifier","src":"4987:6:21"},"nativeSrc":"4987:21:21","nodeType":"YulFunctionCall","src":"4987:21:21"},"nativeSrc":"4987:21:21","nodeType":"YulExpressionStatement","src":"4987:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5028:9:21","nodeType":"YulIdentifier","src":"5028:9:21"},{"kind":"number","nativeSrc":"5039:2:21","nodeType":"YulLiteral","src":"5039:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5024:3:21","nodeType":"YulIdentifier","src":"5024:3:21"},"nativeSrc":"5024:18:21","nodeType":"YulFunctionCall","src":"5024:18:21"},{"kind":"number","nativeSrc":"5044:2:21","nodeType":"YulLiteral","src":"5044:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5017:6:21","nodeType":"YulIdentifier","src":"5017:6:21"},"nativeSrc":"5017:30:21","nodeType":"YulFunctionCall","src":"5017:30:21"},"nativeSrc":"5017:30:21","nodeType":"YulExpressionStatement","src":"5017:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5067:9:21","nodeType":"YulIdentifier","src":"5067:9:21"},{"kind":"number","nativeSrc":"5078:2:21","nodeType":"YulLiteral","src":"5078:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5063:3:21","nodeType":"YulIdentifier","src":"5063:3:21"},"nativeSrc":"5063:18:21","nodeType":"YulFunctionCall","src":"5063:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"5083:34:21","nodeType":"YulLiteral","src":"5083:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"5056:6:21","nodeType":"YulIdentifier","src":"5056:6:21"},"nativeSrc":"5056:62:21","nodeType":"YulFunctionCall","src":"5056:62:21"},"nativeSrc":"5056:62:21","nodeType":"YulExpressionStatement","src":"5056:62:21"},{"nativeSrc":"5127:26:21","nodeType":"YulAssignment","src":"5127:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5139:9:21","nodeType":"YulIdentifier","src":"5139:9:21"},{"kind":"number","nativeSrc":"5150:2:21","nodeType":"YulLiteral","src":"5150:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5135:3:21","nodeType":"YulIdentifier","src":"5135:3:21"},"nativeSrc":"5135:18:21","nodeType":"YulFunctionCall","src":"5135:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5127:4:21","nodeType":"YulIdentifier","src":"5127:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4803:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4954:9:21","nodeType":"YulTypedName","src":"4954:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4968:4:21","nodeType":"YulTypedName","src":"4968:4:21","type":""}],"src":"4803:356:21"}]},"contents":"{\n    { }\n    function validator_revert_contract_ITransparentUpgradeableProxy(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ITransparentUpgradeableProxy(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ITransparentUpgradeableProxy(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, shl(224, 0x5c60da1b))\n        end := add(pos, 4)\n    }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 32\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value1, i), _1)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, shl(230, 0x03e14691))\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead1461016457600080fd5b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610499565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee3660046104bd565b610229565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461050c565b610291565b34801561013057600080fd5b506100d161013f3660046104bd565b610300565b34801561015057600080fd5b506100d161015f366004610499565b610336565b34801561017057600080fd5b506100a061017f366004610499565b6103b4565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d91906105e2565b949350505050565b61021d6103da565b6102276000610434565b565b6102316103da565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050505050565b6102996103da565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102c990869086906004016105ff565b6000604051808303818588803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b5050505050505050565b6103086103da565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe69060240161025b565b61033e6103da565b6001600160a01b0381166103a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103b181610434565b50565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b6000546001600160a01b031633146102275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146103b157600080fd5b6000602082840312156104ab57600080fd5b81356104b681610484565b9392505050565b600080604083850312156104d057600080fd5b82356104db81610484565b915060208301356104eb81610484565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561052157600080fd5b833561052c81610484565b9250602084013561053c81610484565b9150604084013567ffffffffffffffff8082111561055957600080fd5b818601915086601f83011261056d57600080fd5b81358181111561057f5761057f6104f6565b604051601f8201601f19908116603f011681019083821181831017156105a7576105a76104f6565b816040528281528960208487010111156105c057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156105f457600080fd5b81516104b681610484565b60018060a01b03831681526000602060406020840152835180604085015260005b8181101561063c57858101830151858201606001528201610620565b506000606082860101526060601f19601f83011685010192505050939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA0 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x227 PUSH1 0x0 PUSH2 0x434 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F28397 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x8F283970 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x299 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x2C9 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x308 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x3659CFE6 SWAP1 PUSH1 0x24 ADD PUSH2 0x25B JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x3E14691 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4DB DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EB DUP2 PUSH2 0x484 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x52C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x53C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x4F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x620 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"450:2409:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:438;;;;;;;;;;-1:-1:-1;650:438:11;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;663:32:21;;;645:51;;633:2;618:18;650:438:11;;;;;;;1824:101:4;;;;;;;;;;;;;:::i;:::-;;1842:149:11;;;;;;;;;;-1:-1:-1;1842:149:11;;;;;:::i;:::-;;:::i;1201:85:4:-;;;;;;;;;;-1:-1:-1;1247:7:4;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;2612:245:11;;;;;;:::i;:::-;;:::i;2196:150::-;;;;;;;;;;-1:-1:-1;2196:150:11;;;;;:::i;:::-;;:::i;2074:198:4:-;;;;;;;;;;-1:-1:-1;2074:198:4;;;;;:::i;:::-;;:::i;1248:420:11:-;;;;;;;;;;-1:-1:-1;1248:420:11;;;;;:::i;:::-;;:::i;650:438::-;747:7;924:12;938:23;973:5;-1:-1:-1;;;;;965:25:11;:40;;;;-1:-1:-1;;;3111:33:21;;3169:1;3160:11;;2910:267;965:40:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:82;;;;1023:7;1015:16;;;;;;1059:10;1048:33;;;;;;;;;;;;:::i;:::-;1041:40;650:438;-1:-1:-1;;;;650:438:11:o;1824:101:4:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1842:149:11:-;1094:13:4;:11;:13::i;:::-;1957:27:11::1;::::0;-1:-1:-1;;;1957:27:11;;-1:-1:-1;;;;;663:32:21;;;1957:27:11::1;::::0;::::1;645:51:21::0;1957:17:11;::::1;::::0;::::1;::::0;618:18:21;;1957:27:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1842:149:::0;;:::o;2612:245::-;1094:13:4;:11;:13::i;:::-;2788:62:11::1;::::0;-1:-1:-1;;;2788:62:11;;-1:-1:-1;;;;;2788:22:11;::::1;::::0;::::1;::::0;2818:9:::1;::::0;2788:62:::1;::::0;2829:14;;2845:4;;2788:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2612:245:::0;;;:::o;2196:150::-;1094:13:4;:11;:13::i;:::-;2308:31:11::1;::::0;-1:-1:-1;;;2308:31:11;;-1:-1:-1;;;;;663:32:21;;;2308:31:11::1;::::0;::::1;645:51:21::0;2308:15:11;::::1;::::0;::::1;::::0;618:18:21;;2308:31:11::1;499:203:21::0;2074:198:4;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:4;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:4;;4326:2:21;2154:73:4::1;::::0;::::1;4308:21:21::0;4365:2;4345:18;;;4338:30;4404:34;4384:18;;;4377:62;-1:-1:-1;;;4455:18:21;;;4448:36;4501:19;;2154:73:4::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1248:420:11:-;1336:7;1504:12;1518:23;1553:5;-1:-1:-1;;;;;1545:25:11;:40;;;;-1:-1:-1;;;4732:33:21;;4790:1;4781:11;;4531:267;1359:130:4;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:14;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;5005:2:21;1414:68:4;;;4987:21:21;;;5024:18;;;5017:30;5083:34;5063:18;;;5056:62;5135:18;;1414:68:4;4803:356:21;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:161:21:-;-1:-1:-1;;;;;119:31:21;;109:42;;99:70;;165:1;162;155:12;180:314;276:6;329:2;317:9;308:7;304:23;300:32;297:52;;;345:1;342;335:12;297:52;384:9;371:23;403:61;458:5;403:61;:::i;:::-;483:5;180:314;-1:-1:-1;;;180:314:21:o;707:485::-;812:6;820;873:2;861:9;852:7;848:23;844:32;841:52;;;889:1;886;879:12;841:52;928:9;915:23;947:61;1002:5;947:61;:::i;:::-;1027:5;-1:-1:-1;1084:2:21;1069:18;;1056:32;1097:63;1056:32;1097:63;:::i;:::-;1179:7;1169:17;;;707:485;;;;;:::o;1197:127::-;1258:10;1253:3;1249:20;1246:1;1239:31;1289:4;1286:1;1279:15;1313:4;1310:1;1303:15;1329:1294;1452:6;1460;1468;1521:2;1509:9;1500:7;1496:23;1492:32;1489:52;;;1537:1;1534;1527:12;1489:52;1576:9;1563:23;1595:61;1650:5;1595:61;:::i;:::-;1675:5;-1:-1:-1;1732:2:21;1717:18;;1704:32;1745:63;1704:32;1745:63;:::i;:::-;1827:7;-1:-1:-1;1885:2:21;1870:18;;1857:32;1908:18;1938:14;;;1935:34;;;1965:1;1962;1955:12;1935:34;2003:6;1992:9;1988:22;1978:32;;2048:7;2041:4;2037:2;2033:13;2029:27;2019:55;;2070:1;2067;2060:12;2019:55;2106:2;2093:16;2128:2;2124;2121:10;2118:36;;;2134:18;;:::i;:::-;2209:2;2203:9;2177:2;2263:13;;-1:-1:-1;;2259:22:21;;;2283:2;2255:31;2251:40;2239:53;;;2307:18;;;2327:22;;;2304:46;2301:72;;;2353:18;;:::i;:::-;2393:10;2389:2;2382:22;2428:2;2420:6;2413:18;2468:7;2463:2;2458;2454;2450:11;2446:20;2443:33;2440:53;;;2489:1;2486;2479:12;2440:53;2545:2;2540;2536;2532:11;2527:2;2519:6;2515:15;2502:46;2590:1;2585:2;2580;2572:6;2568:15;2564:24;2557:35;2611:6;2601:16;;;;;;;1329:1294;;;;;:::o;3182:289::-;3260:6;3313:2;3301:9;3292:7;3288:23;3284:32;3281:52;;;3329:1;3326;3319:12;3281:52;3361:9;3355:16;3380:61;3435:5;3380:61;:::i;3476:643::-;3680:1;3676;3671:3;3667:11;3663:19;3655:6;3651:32;3640:9;3633:51;3614:4;3703:2;3741;3736;3725:9;3721:18;3714:30;3773:6;3767:13;3816:6;3811:2;3800:9;3796:18;3789:34;3841:1;3851:140;3865:6;3862:1;3859:13;3851:140;;;3960:14;;;3956:23;;3950:30;3926:17;;;3945:2;3922:26;3915:66;3880:10;;3851:140;;;3855:3;4040:1;4035:2;4026:6;4015:9;4011:22;4007:31;4000:42;4110:2;4103;4099:7;4094:2;4086:6;4082:15;4078:29;4067:9;4063:45;4059:54;4051:62;;;;3476:643;;;;;:::o"},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        ITransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":680,"contract":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ITransparentUpgradeableProxy":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"admin()":"f851a440","changeAdmin(address)":"8f283970","implementation()":"5c60da1b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"TransparentUpgradeableProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1411":{"entryPoint":null,"id":1411,"parameterSlots":3,"returnSlots":0},"@_840":{"entryPoint":null,"id":840,"parameterSlots":2,"returnSlots":0},"@_changeAdmin_1065":{"entryPoint":127,"id":1065,"parameterSlots":1,"returnSlots":0},"@_getAdmin_1022":{"entryPoint":null,"id":1022,"parameterSlots":0,"returnSlots":1},"@_revert_2007":{"entryPoint":926,"id":2007,"parameterSlots":2,"returnSlots":0},"@_setAdmin_1048":{"entryPoint":354,"id":1048,"parameterSlots":1,"returnSlots":0},"@_setImplementation_907":{"entryPoint":512,"id":907,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_952":{"entryPoint":77,"id":952,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_922":{"entryPoint":241,"id":922,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1895":{"entryPoint":307,"id":1895,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1924":{"entryPoint":663,"id":1924,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2062":{"entryPoint":null,"id":2062,"parameterSlots":1,"returnSlots":1},"@isContract_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1963":{"entryPoint":790,"id":1963,"parameterSlots":4,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1060,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1022,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":1000,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3832:21","nodeType":"YulBlock","src":"0:3832:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"74:117:21","nodeType":"YulBlock","src":"74:117:21","statements":[{"nativeSrc":"84:22:21","nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:21","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"},"nativeSrc":"93:13:21","nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nativeSrc":"84:5:21","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nativeSrc":"169:16:21","nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:21","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:21","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:21","nodeType":"YulIdentifier","src":"171:6:21"},"nativeSrc":"171:12:21","nodeType":"YulFunctionCall","src":"171:12:21"},"nativeSrc":"171:12:21","nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:21","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nativeSrc":"139:5:21","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:21","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:21","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:21","nodeType":"YulIdentifier","src":"150:3:21"},"nativeSrc":"150:11:21","nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nativeSrc":"163:1:21","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:21","nodeType":"YulIdentifier","src":"146:3:21"},"nativeSrc":"146:19:21","nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nativeSrc":"135:3:21","nodeType":"YulIdentifier","src":"135:3:21"},"nativeSrc":"135:31:21","nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nativeSrc":"125:2:21","nodeType":"YulIdentifier","src":"125:2:21"},"nativeSrc":"125:42:21","nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nativeSrc":"118:6:21","nodeType":"YulIdentifier","src":"118:6:21"},"nativeSrc":"118:50:21","nodeType":"YulFunctionCall","src":"118:50:21"},"nativeSrc":"115:70:21","nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:21","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:21","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nativeSrc":"228:95:21","nodeType":"YulBlock","src":"228:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"245:1:21","nodeType":"YulLiteral","src":"245:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"252:3:21","nodeType":"YulLiteral","src":"252:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"257:10:21","nodeType":"YulLiteral","src":"257:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"248:3:21","nodeType":"YulIdentifier","src":"248:3:21"},"nativeSrc":"248:20:21","nodeType":"YulFunctionCall","src":"248:20:21"}],"functionName":{"name":"mstore","nativeSrc":"238:6:21","nodeType":"YulIdentifier","src":"238:6:21"},"nativeSrc":"238:31:21","nodeType":"YulFunctionCall","src":"238:31:21"},"nativeSrc":"238:31:21","nodeType":"YulExpressionStatement","src":"238:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"285:1:21","nodeType":"YulLiteral","src":"285:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"288:4:21","nodeType":"YulLiteral","src":"288:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"278:6:21","nodeType":"YulIdentifier","src":"278:6:21"},"nativeSrc":"278:15:21","nodeType":"YulFunctionCall","src":"278:15:21"},"nativeSrc":"278:15:21","nodeType":"YulExpressionStatement","src":"278:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"309:1:21","nodeType":"YulLiteral","src":"309:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"312:4:21","nodeType":"YulLiteral","src":"312:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"302:6:21","nodeType":"YulIdentifier","src":"302:6:21"},"nativeSrc":"302:15:21","nodeType":"YulFunctionCall","src":"302:15:21"},"nativeSrc":"302:15:21","nodeType":"YulExpressionStatement","src":"302:15:21"}]},"name":"panic_error_0x41","nativeSrc":"196:127:21","nodeType":"YulFunctionDefinition","src":"196:127:21"},{"body":{"nativeSrc":"394:184:21","nodeType":"YulBlock","src":"394:184:21","statements":[{"nativeSrc":"404:10:21","nodeType":"YulVariableDeclaration","src":"404:10:21","value":{"kind":"number","nativeSrc":"413:1:21","nodeType":"YulLiteral","src":"413:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"408:1:21","nodeType":"YulTypedName","src":"408:1:21","type":""}]},{"body":{"nativeSrc":"473:63:21","nodeType":"YulBlock","src":"473:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"498:3:21","nodeType":"YulIdentifier","src":"498:3:21"},{"name":"i","nativeSrc":"503:1:21","nodeType":"YulIdentifier","src":"503:1:21"}],"functionName":{"name":"add","nativeSrc":"494:3:21","nodeType":"YulIdentifier","src":"494:3:21"},"nativeSrc":"494:11:21","nodeType":"YulFunctionCall","src":"494:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"517:3:21","nodeType":"YulIdentifier","src":"517:3:21"},{"name":"i","nativeSrc":"522:1:21","nodeType":"YulIdentifier","src":"522:1:21"}],"functionName":{"name":"add","nativeSrc":"513:3:21","nodeType":"YulIdentifier","src":"513:3:21"},"nativeSrc":"513:11:21","nodeType":"YulFunctionCall","src":"513:11:21"}],"functionName":{"name":"mload","nativeSrc":"507:5:21","nodeType":"YulIdentifier","src":"507:5:21"},"nativeSrc":"507:18:21","nodeType":"YulFunctionCall","src":"507:18:21"}],"functionName":{"name":"mstore","nativeSrc":"487:6:21","nodeType":"YulIdentifier","src":"487:6:21"},"nativeSrc":"487:39:21","nodeType":"YulFunctionCall","src":"487:39:21"},"nativeSrc":"487:39:21","nodeType":"YulExpressionStatement","src":"487:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"434:1:21","nodeType":"YulIdentifier","src":"434:1:21"},{"name":"length","nativeSrc":"437:6:21","nodeType":"YulIdentifier","src":"437:6:21"}],"functionName":{"name":"lt","nativeSrc":"431:2:21","nodeType":"YulIdentifier","src":"431:2:21"},"nativeSrc":"431:13:21","nodeType":"YulFunctionCall","src":"431:13:21"},"nativeSrc":"423:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"445:19:21","nodeType":"YulBlock","src":"445:19:21","statements":[{"nativeSrc":"447:15:21","nodeType":"YulAssignment","src":"447:15:21","value":{"arguments":[{"name":"i","nativeSrc":"456:1:21","nodeType":"YulIdentifier","src":"456:1:21"},{"kind":"number","nativeSrc":"459:2:21","nodeType":"YulLiteral","src":"459:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"452:3:21","nodeType":"YulIdentifier","src":"452:3:21"},"nativeSrc":"452:10:21","nodeType":"YulFunctionCall","src":"452:10:21"},"variableNames":[{"name":"i","nativeSrc":"447:1:21","nodeType":"YulIdentifier","src":"447:1:21"}]}]},"pre":{"nativeSrc":"427:3:21","nodeType":"YulBlock","src":"427:3:21","statements":[]},"src":"423:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"556:3:21","nodeType":"YulIdentifier","src":"556:3:21"},{"name":"length","nativeSrc":"561:6:21","nodeType":"YulIdentifier","src":"561:6:21"}],"functionName":{"name":"add","nativeSrc":"552:3:21","nodeType":"YulIdentifier","src":"552:3:21"},"nativeSrc":"552:16:21","nodeType":"YulFunctionCall","src":"552:16:21"},{"kind":"number","nativeSrc":"570:1:21","nodeType":"YulLiteral","src":"570:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"545:6:21","nodeType":"YulIdentifier","src":"545:6:21"},"nativeSrc":"545:27:21","nodeType":"YulFunctionCall","src":"545:27:21"},"nativeSrc":"545:27:21","nodeType":"YulExpressionStatement","src":"545:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"328:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"372:3:21","nodeType":"YulTypedName","src":"372:3:21","type":""},{"name":"dst","nativeSrc":"377:3:21","nodeType":"YulTypedName","src":"377:3:21","type":""},{"name":"length","nativeSrc":"382:6:21","nodeType":"YulTypedName","src":"382:6:21","type":""}],"src":"328:250:21"},{"body":{"nativeSrc":"707:942:21","nodeType":"YulBlock","src":"707:942:21","statements":[{"body":{"nativeSrc":"753:16:21","nodeType":"YulBlock","src":"753:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"762:1:21","nodeType":"YulLiteral","src":"762:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"765:1:21","nodeType":"YulLiteral","src":"765:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"755:6:21","nodeType":"YulIdentifier","src":"755:6:21"},"nativeSrc":"755:12:21","nodeType":"YulFunctionCall","src":"755:12:21"},"nativeSrc":"755:12:21","nodeType":"YulExpressionStatement","src":"755:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"728:7:21","nodeType":"YulIdentifier","src":"728:7:21"},{"name":"headStart","nativeSrc":"737:9:21","nodeType":"YulIdentifier","src":"737:9:21"}],"functionName":{"name":"sub","nativeSrc":"724:3:21","nodeType":"YulIdentifier","src":"724:3:21"},"nativeSrc":"724:23:21","nodeType":"YulFunctionCall","src":"724:23:21"},{"kind":"number","nativeSrc":"749:2:21","nodeType":"YulLiteral","src":"749:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"720:3:21","nodeType":"YulIdentifier","src":"720:3:21"},"nativeSrc":"720:32:21","nodeType":"YulFunctionCall","src":"720:32:21"},"nativeSrc":"717:52:21","nodeType":"YulIf","src":"717:52:21"},{"nativeSrc":"778:50:21","nodeType":"YulAssignment","src":"778:50:21","value":{"arguments":[{"name":"headStart","nativeSrc":"818:9:21","nodeType":"YulIdentifier","src":"818:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"788:29:21","nodeType":"YulIdentifier","src":"788:29:21"},"nativeSrc":"788:40:21","nodeType":"YulFunctionCall","src":"788:40:21"},"variableNames":[{"name":"value0","nativeSrc":"778:6:21","nodeType":"YulIdentifier","src":"778:6:21"}]},{"nativeSrc":"837:59:21","nodeType":"YulAssignment","src":"837:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"881:9:21","nodeType":"YulIdentifier","src":"881:9:21"},{"kind":"number","nativeSrc":"892:2:21","nodeType":"YulLiteral","src":"892:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"877:3:21","nodeType":"YulIdentifier","src":"877:3:21"},"nativeSrc":"877:18:21","nodeType":"YulFunctionCall","src":"877:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"847:29:21","nodeType":"YulIdentifier","src":"847:29:21"},"nativeSrc":"847:49:21","nodeType":"YulFunctionCall","src":"847:49:21"},"variableNames":[{"name":"value1","nativeSrc":"837:6:21","nodeType":"YulIdentifier","src":"837:6:21"}]},{"nativeSrc":"905:39:21","nodeType":"YulVariableDeclaration","src":"905:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"929:9:21","nodeType":"YulIdentifier","src":"929:9:21"},{"kind":"number","nativeSrc":"940:2:21","nodeType":"YulLiteral","src":"940:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"925:3:21","nodeType":"YulIdentifier","src":"925:3:21"},"nativeSrc":"925:18:21","nodeType":"YulFunctionCall","src":"925:18:21"}],"functionName":{"name":"mload","nativeSrc":"919:5:21","nodeType":"YulIdentifier","src":"919:5:21"},"nativeSrc":"919:25:21","nodeType":"YulFunctionCall","src":"919:25:21"},"variables":[{"name":"offset","nativeSrc":"909:6:21","nodeType":"YulTypedName","src":"909:6:21","type":""}]},{"nativeSrc":"953:28:21","nodeType":"YulVariableDeclaration","src":"953:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"971:2:21","nodeType":"YulLiteral","src":"971:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"975:1:21","nodeType":"YulLiteral","src":"975:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"967:3:21","nodeType":"YulIdentifier","src":"967:3:21"},"nativeSrc":"967:10:21","nodeType":"YulFunctionCall","src":"967:10:21"},{"kind":"number","nativeSrc":"979:1:21","nodeType":"YulLiteral","src":"979:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"963:3:21","nodeType":"YulIdentifier","src":"963:3:21"},"nativeSrc":"963:18:21","nodeType":"YulFunctionCall","src":"963:18:21"},"variables":[{"name":"_1","nativeSrc":"957:2:21","nodeType":"YulTypedName","src":"957:2:21","type":""}]},{"body":{"nativeSrc":"1008:16:21","nodeType":"YulBlock","src":"1008:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1017:1:21","nodeType":"YulLiteral","src":"1017:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1020:1:21","nodeType":"YulLiteral","src":"1020:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1010:6:21","nodeType":"YulIdentifier","src":"1010:6:21"},"nativeSrc":"1010:12:21","nodeType":"YulFunctionCall","src":"1010:12:21"},"nativeSrc":"1010:12:21","nodeType":"YulExpressionStatement","src":"1010:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"996:6:21","nodeType":"YulIdentifier","src":"996:6:21"},{"name":"_1","nativeSrc":"1004:2:21","nodeType":"YulIdentifier","src":"1004:2:21"}],"functionName":{"name":"gt","nativeSrc":"993:2:21","nodeType":"YulIdentifier","src":"993:2:21"},"nativeSrc":"993:14:21","nodeType":"YulFunctionCall","src":"993:14:21"},"nativeSrc":"990:34:21","nodeType":"YulIf","src":"990:34:21"},{"nativeSrc":"1033:32:21","nodeType":"YulVariableDeclaration","src":"1033:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1047:9:21","nodeType":"YulIdentifier","src":"1047:9:21"},{"name":"offset","nativeSrc":"1058:6:21","nodeType":"YulIdentifier","src":"1058:6:21"}],"functionName":{"name":"add","nativeSrc":"1043:3:21","nodeType":"YulIdentifier","src":"1043:3:21"},"nativeSrc":"1043:22:21","nodeType":"YulFunctionCall","src":"1043:22:21"},"variables":[{"name":"_2","nativeSrc":"1037:2:21","nodeType":"YulTypedName","src":"1037:2:21","type":""}]},{"body":{"nativeSrc":"1113:16:21","nodeType":"YulBlock","src":"1113:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1122:1:21","nodeType":"YulLiteral","src":"1122:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1125:1:21","nodeType":"YulLiteral","src":"1125:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1115:6:21","nodeType":"YulIdentifier","src":"1115:6:21"},"nativeSrc":"1115:12:21","nodeType":"YulFunctionCall","src":"1115:12:21"},"nativeSrc":"1115:12:21","nodeType":"YulExpressionStatement","src":"1115:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1092:2:21","nodeType":"YulIdentifier","src":"1092:2:21"},{"kind":"number","nativeSrc":"1096:4:21","nodeType":"YulLiteral","src":"1096:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1088:3:21","nodeType":"YulIdentifier","src":"1088:3:21"},"nativeSrc":"1088:13:21","nodeType":"YulFunctionCall","src":"1088:13:21"},{"name":"dataEnd","nativeSrc":"1103:7:21","nodeType":"YulIdentifier","src":"1103:7:21"}],"functionName":{"name":"slt","nativeSrc":"1084:3:21","nodeType":"YulIdentifier","src":"1084:3:21"},"nativeSrc":"1084:27:21","nodeType":"YulFunctionCall","src":"1084:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1077:6:21","nodeType":"YulIdentifier","src":"1077:6:21"},"nativeSrc":"1077:35:21","nodeType":"YulFunctionCall","src":"1077:35:21"},"nativeSrc":"1074:55:21","nodeType":"YulIf","src":"1074:55:21"},{"nativeSrc":"1138:19:21","nodeType":"YulVariableDeclaration","src":"1138:19:21","value":{"arguments":[{"name":"_2","nativeSrc":"1154:2:21","nodeType":"YulIdentifier","src":"1154:2:21"}],"functionName":{"name":"mload","nativeSrc":"1148:5:21","nodeType":"YulIdentifier","src":"1148:5:21"},"nativeSrc":"1148:9:21","nodeType":"YulFunctionCall","src":"1148:9:21"},"variables":[{"name":"_3","nativeSrc":"1142:2:21","nodeType":"YulTypedName","src":"1142:2:21","type":""}]},{"body":{"nativeSrc":"1180:22:21","nodeType":"YulBlock","src":"1180:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1182:16:21","nodeType":"YulIdentifier","src":"1182:16:21"},"nativeSrc":"1182:18:21","nodeType":"YulFunctionCall","src":"1182:18:21"},"nativeSrc":"1182:18:21","nodeType":"YulExpressionStatement","src":"1182:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"1172:2:21","nodeType":"YulIdentifier","src":"1172:2:21"},{"name":"_1","nativeSrc":"1176:2:21","nodeType":"YulIdentifier","src":"1176:2:21"}],"functionName":{"name":"gt","nativeSrc":"1169:2:21","nodeType":"YulIdentifier","src":"1169:2:21"},"nativeSrc":"1169:10:21","nodeType":"YulFunctionCall","src":"1169:10:21"},"nativeSrc":"1166:36:21","nodeType":"YulIf","src":"1166:36:21"},{"nativeSrc":"1211:17:21","nodeType":"YulVariableDeclaration","src":"1211:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"1225:2:21","nodeType":"YulLiteral","src":"1225:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1221:3:21","nodeType":"YulIdentifier","src":"1221:3:21"},"nativeSrc":"1221:7:21","nodeType":"YulFunctionCall","src":"1221:7:21"},"variables":[{"name":"_4","nativeSrc":"1215:2:21","nodeType":"YulTypedName","src":"1215:2:21","type":""}]},{"nativeSrc":"1237:23:21","nodeType":"YulVariableDeclaration","src":"1237:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"1257:2:21","nodeType":"YulLiteral","src":"1257:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1251:5:21","nodeType":"YulIdentifier","src":"1251:5:21"},"nativeSrc":"1251:9:21","nodeType":"YulFunctionCall","src":"1251:9:21"},"variables":[{"name":"memPtr","nativeSrc":"1241:6:21","nodeType":"YulTypedName","src":"1241:6:21","type":""}]},{"nativeSrc":"1269:71:21","nodeType":"YulVariableDeclaration","src":"1269:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1291:6:21","nodeType":"YulIdentifier","src":"1291:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"1315:2:21","nodeType":"YulIdentifier","src":"1315:2:21"},{"kind":"number","nativeSrc":"1319:4:21","nodeType":"YulLiteral","src":"1319:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1311:3:21","nodeType":"YulIdentifier","src":"1311:3:21"},"nativeSrc":"1311:13:21","nodeType":"YulFunctionCall","src":"1311:13:21"},{"name":"_4","nativeSrc":"1326:2:21","nodeType":"YulIdentifier","src":"1326:2:21"}],"functionName":{"name":"and","nativeSrc":"1307:3:21","nodeType":"YulIdentifier","src":"1307:3:21"},"nativeSrc":"1307:22:21","nodeType":"YulFunctionCall","src":"1307:22:21"},{"kind":"number","nativeSrc":"1331:2:21","nodeType":"YulLiteral","src":"1331:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"1303:3:21","nodeType":"YulIdentifier","src":"1303:3:21"},"nativeSrc":"1303:31:21","nodeType":"YulFunctionCall","src":"1303:31:21"},{"name":"_4","nativeSrc":"1336:2:21","nodeType":"YulIdentifier","src":"1336:2:21"}],"functionName":{"name":"and","nativeSrc":"1299:3:21","nodeType":"YulIdentifier","src":"1299:3:21"},"nativeSrc":"1299:40:21","nodeType":"YulFunctionCall","src":"1299:40:21"}],"functionName":{"name":"add","nativeSrc":"1287:3:21","nodeType":"YulIdentifier","src":"1287:3:21"},"nativeSrc":"1287:53:21","nodeType":"YulFunctionCall","src":"1287:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1273:10:21","nodeType":"YulTypedName","src":"1273:10:21","type":""}]},{"body":{"nativeSrc":"1399:22:21","nodeType":"YulBlock","src":"1399:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1401:16:21","nodeType":"YulIdentifier","src":"1401:16:21"},"nativeSrc":"1401:18:21","nodeType":"YulFunctionCall","src":"1401:18:21"},"nativeSrc":"1401:18:21","nodeType":"YulExpressionStatement","src":"1401:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1358:10:21","nodeType":"YulIdentifier","src":"1358:10:21"},{"name":"_1","nativeSrc":"1370:2:21","nodeType":"YulIdentifier","src":"1370:2:21"}],"functionName":{"name":"gt","nativeSrc":"1355:2:21","nodeType":"YulIdentifier","src":"1355:2:21"},"nativeSrc":"1355:18:21","nodeType":"YulFunctionCall","src":"1355:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1378:10:21","nodeType":"YulIdentifier","src":"1378:10:21"},{"name":"memPtr","nativeSrc":"1390:6:21","nodeType":"YulIdentifier","src":"1390:6:21"}],"functionName":{"name":"lt","nativeSrc":"1375:2:21","nodeType":"YulIdentifier","src":"1375:2:21"},"nativeSrc":"1375:22:21","nodeType":"YulFunctionCall","src":"1375:22:21"}],"functionName":{"name":"or","nativeSrc":"1352:2:21","nodeType":"YulIdentifier","src":"1352:2:21"},"nativeSrc":"1352:46:21","nodeType":"YulFunctionCall","src":"1352:46:21"},"nativeSrc":"1349:72:21","nodeType":"YulIf","src":"1349:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1437:2:21","nodeType":"YulLiteral","src":"1437:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1441:10:21","nodeType":"YulIdentifier","src":"1441:10:21"}],"functionName":{"name":"mstore","nativeSrc":"1430:6:21","nodeType":"YulIdentifier","src":"1430:6:21"},"nativeSrc":"1430:22:21","nodeType":"YulFunctionCall","src":"1430:22:21"},"nativeSrc":"1430:22:21","nodeType":"YulExpressionStatement","src":"1430:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1468:6:21","nodeType":"YulIdentifier","src":"1468:6:21"},{"name":"_3","nativeSrc":"1476:2:21","nodeType":"YulIdentifier","src":"1476:2:21"}],"functionName":{"name":"mstore","nativeSrc":"1461:6:21","nodeType":"YulIdentifier","src":"1461:6:21"},"nativeSrc":"1461:18:21","nodeType":"YulFunctionCall","src":"1461:18:21"},"nativeSrc":"1461:18:21","nodeType":"YulExpressionStatement","src":"1461:18:21"},{"body":{"nativeSrc":"1525:16:21","nodeType":"YulBlock","src":"1525:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1534:1:21","nodeType":"YulLiteral","src":"1534:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1537:1:21","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1527:6:21","nodeType":"YulIdentifier","src":"1527:6:21"},"nativeSrc":"1527:12:21","nodeType":"YulFunctionCall","src":"1527:12:21"},"nativeSrc":"1527:12:21","nodeType":"YulExpressionStatement","src":"1527:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1502:2:21","nodeType":"YulIdentifier","src":"1502:2:21"},{"name":"_3","nativeSrc":"1506:2:21","nodeType":"YulIdentifier","src":"1506:2:21"}],"functionName":{"name":"add","nativeSrc":"1498:3:21","nodeType":"YulIdentifier","src":"1498:3:21"},"nativeSrc":"1498:11:21","nodeType":"YulFunctionCall","src":"1498:11:21"},{"kind":"number","nativeSrc":"1511:2:21","nodeType":"YulLiteral","src":"1511:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1494:3:21","nodeType":"YulIdentifier","src":"1494:3:21"},"nativeSrc":"1494:20:21","nodeType":"YulFunctionCall","src":"1494:20:21"},{"name":"dataEnd","nativeSrc":"1516:7:21","nodeType":"YulIdentifier","src":"1516:7:21"}],"functionName":{"name":"gt","nativeSrc":"1491:2:21","nodeType":"YulIdentifier","src":"1491:2:21"},"nativeSrc":"1491:33:21","nodeType":"YulFunctionCall","src":"1491:33:21"},"nativeSrc":"1488:53:21","nodeType":"YulIf","src":"1488:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1589:2:21","nodeType":"YulIdentifier","src":"1589:2:21"},{"kind":"number","nativeSrc":"1593:2:21","nodeType":"YulLiteral","src":"1593:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1585:3:21","nodeType":"YulIdentifier","src":"1585:3:21"},"nativeSrc":"1585:11:21","nodeType":"YulFunctionCall","src":"1585:11:21"},{"arguments":[{"name":"memPtr","nativeSrc":"1602:6:21","nodeType":"YulIdentifier","src":"1602:6:21"},{"kind":"number","nativeSrc":"1610:2:21","nodeType":"YulLiteral","src":"1610:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1598:3:21","nodeType":"YulIdentifier","src":"1598:3:21"},"nativeSrc":"1598:15:21","nodeType":"YulFunctionCall","src":"1598:15:21"},{"name":"_3","nativeSrc":"1615:2:21","nodeType":"YulIdentifier","src":"1615:2:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1550:34:21","nodeType":"YulIdentifier","src":"1550:34:21"},"nativeSrc":"1550:68:21","nodeType":"YulFunctionCall","src":"1550:68:21"},"nativeSrc":"1550:68:21","nodeType":"YulExpressionStatement","src":"1550:68:21"},{"nativeSrc":"1627:16:21","nodeType":"YulAssignment","src":"1627:16:21","value":{"name":"memPtr","nativeSrc":"1637:6:21","nodeType":"YulIdentifier","src":"1637:6:21"},"variableNames":[{"name":"value2","nativeSrc":"1627:6:21","nodeType":"YulIdentifier","src":"1627:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory","nativeSrc":"583:1066:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"657:9:21","nodeType":"YulTypedName","src":"657:9:21","type":""},{"name":"dataEnd","nativeSrc":"668:7:21","nodeType":"YulTypedName","src":"668:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"680:6:21","nodeType":"YulTypedName","src":"680:6:21","type":""},{"name":"value1","nativeSrc":"688:6:21","nodeType":"YulTypedName","src":"688:6:21","type":""},{"name":"value2","nativeSrc":"696:6:21","nodeType":"YulTypedName","src":"696:6:21","type":""}],"src":"583:1066:21"},{"body":{"nativeSrc":"1783:175:21","nodeType":"YulBlock","src":"1783:175:21","statements":[{"nativeSrc":"1793:26:21","nodeType":"YulAssignment","src":"1793:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1805:9:21","nodeType":"YulIdentifier","src":"1805:9:21"},{"kind":"number","nativeSrc":"1816:2:21","nodeType":"YulLiteral","src":"1816:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1801:3:21","nodeType":"YulIdentifier","src":"1801:3:21"},"nativeSrc":"1801:18:21","nodeType":"YulFunctionCall","src":"1801:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1793:4:21","nodeType":"YulIdentifier","src":"1793:4:21"}]},{"nativeSrc":"1828:29:21","nodeType":"YulVariableDeclaration","src":"1828:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1846:3:21","nodeType":"YulLiteral","src":"1846:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1851:1:21","nodeType":"YulLiteral","src":"1851:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1842:3:21","nodeType":"YulIdentifier","src":"1842:3:21"},"nativeSrc":"1842:11:21","nodeType":"YulFunctionCall","src":"1842:11:21"},{"kind":"number","nativeSrc":"1855:1:21","nodeType":"YulLiteral","src":"1855:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1838:3:21","nodeType":"YulIdentifier","src":"1838:3:21"},"nativeSrc":"1838:19:21","nodeType":"YulFunctionCall","src":"1838:19:21"},"variables":[{"name":"_1","nativeSrc":"1832:2:21","nodeType":"YulTypedName","src":"1832:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1873:9:21","nodeType":"YulIdentifier","src":"1873:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1888:6:21","nodeType":"YulIdentifier","src":"1888:6:21"},{"name":"_1","nativeSrc":"1896:2:21","nodeType":"YulIdentifier","src":"1896:2:21"}],"functionName":{"name":"and","nativeSrc":"1884:3:21","nodeType":"YulIdentifier","src":"1884:3:21"},"nativeSrc":"1884:15:21","nodeType":"YulFunctionCall","src":"1884:15:21"}],"functionName":{"name":"mstore","nativeSrc":"1866:6:21","nodeType":"YulIdentifier","src":"1866:6:21"},"nativeSrc":"1866:34:21","nodeType":"YulFunctionCall","src":"1866:34:21"},"nativeSrc":"1866:34:21","nodeType":"YulExpressionStatement","src":"1866:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1920:9:21","nodeType":"YulIdentifier","src":"1920:9:21"},{"kind":"number","nativeSrc":"1931:2:21","nodeType":"YulLiteral","src":"1931:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1916:3:21","nodeType":"YulIdentifier","src":"1916:3:21"},"nativeSrc":"1916:18:21","nodeType":"YulFunctionCall","src":"1916:18:21"},{"arguments":[{"name":"value1","nativeSrc":"1940:6:21","nodeType":"YulIdentifier","src":"1940:6:21"},{"name":"_1","nativeSrc":"1948:2:21","nodeType":"YulIdentifier","src":"1948:2:21"}],"functionName":{"name":"and","nativeSrc":"1936:3:21","nodeType":"YulIdentifier","src":"1936:3:21"},"nativeSrc":"1936:15:21","nodeType":"YulFunctionCall","src":"1936:15:21"}],"functionName":{"name":"mstore","nativeSrc":"1909:6:21","nodeType":"YulIdentifier","src":"1909:6:21"},"nativeSrc":"1909:43:21","nodeType":"YulFunctionCall","src":"1909:43:21"},"nativeSrc":"1909:43:21","nodeType":"YulExpressionStatement","src":"1909:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"1654:304:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1744:9:21","nodeType":"YulTypedName","src":"1744:9:21","type":""},{"name":"value1","nativeSrc":"1755:6:21","nodeType":"YulTypedName","src":"1755:6:21","type":""},{"name":"value0","nativeSrc":"1763:6:21","nodeType":"YulTypedName","src":"1763:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1774:4:21","nodeType":"YulTypedName","src":"1774:4:21","type":""}],"src":"1654:304:21"},{"body":{"nativeSrc":"2137:228:21","nodeType":"YulBlock","src":"2137:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2154:9:21","nodeType":"YulIdentifier","src":"2154:9:21"},{"kind":"number","nativeSrc":"2165:2:21","nodeType":"YulLiteral","src":"2165:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2147:6:21","nodeType":"YulIdentifier","src":"2147:6:21"},"nativeSrc":"2147:21:21","nodeType":"YulFunctionCall","src":"2147:21:21"},"nativeSrc":"2147:21:21","nodeType":"YulExpressionStatement","src":"2147:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2188:9:21","nodeType":"YulIdentifier","src":"2188:9:21"},{"kind":"number","nativeSrc":"2199:2:21","nodeType":"YulLiteral","src":"2199:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2184:3:21","nodeType":"YulIdentifier","src":"2184:3:21"},"nativeSrc":"2184:18:21","nodeType":"YulFunctionCall","src":"2184:18:21"},{"kind":"number","nativeSrc":"2204:2:21","nodeType":"YulLiteral","src":"2204:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"2177:6:21","nodeType":"YulIdentifier","src":"2177:6:21"},"nativeSrc":"2177:30:21","nodeType":"YulFunctionCall","src":"2177:30:21"},"nativeSrc":"2177:30:21","nodeType":"YulExpressionStatement","src":"2177:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2227:9:21","nodeType":"YulIdentifier","src":"2227:9:21"},{"kind":"number","nativeSrc":"2238:2:21","nodeType":"YulLiteral","src":"2238:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2223:3:21","nodeType":"YulIdentifier","src":"2223:3:21"},"nativeSrc":"2223:18:21","nodeType":"YulFunctionCall","src":"2223:18:21"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nativeSrc":"2243:34:21","nodeType":"YulLiteral","src":"2243:34:21","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"2216:6:21","nodeType":"YulIdentifier","src":"2216:6:21"},"nativeSrc":"2216:62:21","nodeType":"YulFunctionCall","src":"2216:62:21"},"nativeSrc":"2216:62:21","nodeType":"YulExpressionStatement","src":"2216:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2298:9:21","nodeType":"YulIdentifier","src":"2298:9:21"},{"kind":"number","nativeSrc":"2309:2:21","nodeType":"YulLiteral","src":"2309:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2294:3:21","nodeType":"YulIdentifier","src":"2294:3:21"},"nativeSrc":"2294:18:21","nodeType":"YulFunctionCall","src":"2294:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"2314:8:21","nodeType":"YulLiteral","src":"2314:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"2287:6:21","nodeType":"YulIdentifier","src":"2287:6:21"},"nativeSrc":"2287:36:21","nodeType":"YulFunctionCall","src":"2287:36:21"},"nativeSrc":"2287:36:21","nodeType":"YulExpressionStatement","src":"2287:36:21"},{"nativeSrc":"2332:27:21","nodeType":"YulAssignment","src":"2332:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2344:9:21","nodeType":"YulIdentifier","src":"2344:9:21"},{"kind":"number","nativeSrc":"2355:3:21","nodeType":"YulLiteral","src":"2355:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2340:3:21","nodeType":"YulIdentifier","src":"2340:3:21"},"nativeSrc":"2340:19:21","nodeType":"YulFunctionCall","src":"2340:19:21"},"variableNames":[{"name":"tail","nativeSrc":"2332:4:21","nodeType":"YulIdentifier","src":"2332:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1963:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2114:9:21","nodeType":"YulTypedName","src":"2114:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2128:4:21","nodeType":"YulTypedName","src":"2128:4:21","type":""}],"src":"1963:402:21"},{"body":{"nativeSrc":"2544:235:21","nodeType":"YulBlock","src":"2544:235:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2561:9:21","nodeType":"YulIdentifier","src":"2561:9:21"},{"kind":"number","nativeSrc":"2572:2:21","nodeType":"YulLiteral","src":"2572:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2554:6:21","nodeType":"YulIdentifier","src":"2554:6:21"},"nativeSrc":"2554:21:21","nodeType":"YulFunctionCall","src":"2554:21:21"},"nativeSrc":"2554:21:21","nodeType":"YulExpressionStatement","src":"2554:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2595:9:21","nodeType":"YulIdentifier","src":"2595:9:21"},{"kind":"number","nativeSrc":"2606:2:21","nodeType":"YulLiteral","src":"2606:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2591:3:21","nodeType":"YulIdentifier","src":"2591:3:21"},"nativeSrc":"2591:18:21","nodeType":"YulFunctionCall","src":"2591:18:21"},{"kind":"number","nativeSrc":"2611:2:21","nodeType":"YulLiteral","src":"2611:2:21","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"2584:6:21","nodeType":"YulIdentifier","src":"2584:6:21"},"nativeSrc":"2584:30:21","nodeType":"YulFunctionCall","src":"2584:30:21"},"nativeSrc":"2584:30:21","nodeType":"YulExpressionStatement","src":"2584:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2634:9:21","nodeType":"YulIdentifier","src":"2634:9:21"},{"kind":"number","nativeSrc":"2645:2:21","nodeType":"YulLiteral","src":"2645:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2630:3:21","nodeType":"YulIdentifier","src":"2630:3:21"},"nativeSrc":"2630:18:21","nodeType":"YulFunctionCall","src":"2630:18:21"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"2650:34:21","nodeType":"YulLiteral","src":"2650:34:21","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"2623:6:21","nodeType":"YulIdentifier","src":"2623:6:21"},"nativeSrc":"2623:62:21","nodeType":"YulFunctionCall","src":"2623:62:21"},"nativeSrc":"2623:62:21","nodeType":"YulExpressionStatement","src":"2623:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2705:9:21","nodeType":"YulIdentifier","src":"2705:9:21"},{"kind":"number","nativeSrc":"2716:2:21","nodeType":"YulLiteral","src":"2716:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2701:3:21","nodeType":"YulIdentifier","src":"2701:3:21"},"nativeSrc":"2701:18:21","nodeType":"YulFunctionCall","src":"2701:18:21"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"2721:15:21","nodeType":"YulLiteral","src":"2721:15:21","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"2694:6:21","nodeType":"YulIdentifier","src":"2694:6:21"},"nativeSrc":"2694:43:21","nodeType":"YulFunctionCall","src":"2694:43:21"},"nativeSrc":"2694:43:21","nodeType":"YulExpressionStatement","src":"2694:43:21"},{"nativeSrc":"2746:27:21","nodeType":"YulAssignment","src":"2746:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2758:9:21","nodeType":"YulIdentifier","src":"2758:9:21"},{"kind":"number","nativeSrc":"2769:3:21","nodeType":"YulLiteral","src":"2769:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2754:3:21","nodeType":"YulIdentifier","src":"2754:3:21"},"nativeSrc":"2754:19:21","nodeType":"YulFunctionCall","src":"2754:19:21"},"variableNames":[{"name":"tail","nativeSrc":"2746:4:21","nodeType":"YulIdentifier","src":"2746:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2370:409:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2521:9:21","nodeType":"YulTypedName","src":"2521:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2535:4:21","nodeType":"YulTypedName","src":"2535:4:21","type":""}],"src":"2370:409:21"},{"body":{"nativeSrc":"2921:150:21","nodeType":"YulBlock","src":"2921:150:21","statements":[{"nativeSrc":"2931:27:21","nodeType":"YulVariableDeclaration","src":"2931:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"2951:6:21","nodeType":"YulIdentifier","src":"2951:6:21"}],"functionName":{"name":"mload","nativeSrc":"2945:5:21","nodeType":"YulIdentifier","src":"2945:5:21"},"nativeSrc":"2945:13:21","nodeType":"YulFunctionCall","src":"2945:13:21"},"variables":[{"name":"length","nativeSrc":"2935:6:21","nodeType":"YulTypedName","src":"2935:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3006:6:21","nodeType":"YulIdentifier","src":"3006:6:21"},{"kind":"number","nativeSrc":"3014:4:21","nodeType":"YulLiteral","src":"3014:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3002:3:21","nodeType":"YulIdentifier","src":"3002:3:21"},"nativeSrc":"3002:17:21","nodeType":"YulFunctionCall","src":"3002:17:21"},{"name":"pos","nativeSrc":"3021:3:21","nodeType":"YulIdentifier","src":"3021:3:21"},{"name":"length","nativeSrc":"3026:6:21","nodeType":"YulIdentifier","src":"3026:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2967:34:21","nodeType":"YulIdentifier","src":"2967:34:21"},"nativeSrc":"2967:66:21","nodeType":"YulFunctionCall","src":"2967:66:21"},"nativeSrc":"2967:66:21","nodeType":"YulExpressionStatement","src":"2967:66:21"},{"nativeSrc":"3042:23:21","nodeType":"YulAssignment","src":"3042:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"3053:3:21","nodeType":"YulIdentifier","src":"3053:3:21"},{"name":"length","nativeSrc":"3058:6:21","nodeType":"YulIdentifier","src":"3058:6:21"}],"functionName":{"name":"add","nativeSrc":"3049:3:21","nodeType":"YulIdentifier","src":"3049:3:21"},"nativeSrc":"3049:16:21","nodeType":"YulFunctionCall","src":"3049:16:21"},"variableNames":[{"name":"end","nativeSrc":"3042:3:21","nodeType":"YulIdentifier","src":"3042:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"2784:287:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2897:3:21","nodeType":"YulTypedName","src":"2897:3:21","type":""},{"name":"value0","nativeSrc":"2902:6:21","nodeType":"YulTypedName","src":"2902:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2913:3:21","nodeType":"YulTypedName","src":"2913:3:21","type":""}],"src":"2784:287:21"},{"body":{"nativeSrc":"3250:179:21","nodeType":"YulBlock","src":"3250:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3267:9:21","nodeType":"YulIdentifier","src":"3267:9:21"},{"kind":"number","nativeSrc":"3278:2:21","nodeType":"YulLiteral","src":"3278:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3260:6:21","nodeType":"YulIdentifier","src":"3260:6:21"},"nativeSrc":"3260:21:21","nodeType":"YulFunctionCall","src":"3260:21:21"},"nativeSrc":"3260:21:21","nodeType":"YulExpressionStatement","src":"3260:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3301:9:21","nodeType":"YulIdentifier","src":"3301:9:21"},{"kind":"number","nativeSrc":"3312:2:21","nodeType":"YulLiteral","src":"3312:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3297:3:21","nodeType":"YulIdentifier","src":"3297:3:21"},"nativeSrc":"3297:18:21","nodeType":"YulFunctionCall","src":"3297:18:21"},{"kind":"number","nativeSrc":"3317:2:21","nodeType":"YulLiteral","src":"3317:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"3290:6:21","nodeType":"YulIdentifier","src":"3290:6:21"},"nativeSrc":"3290:30:21","nodeType":"YulFunctionCall","src":"3290:30:21"},"nativeSrc":"3290:30:21","nodeType":"YulExpressionStatement","src":"3290:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3340:9:21","nodeType":"YulIdentifier","src":"3340:9:21"},{"kind":"number","nativeSrc":"3351:2:21","nodeType":"YulLiteral","src":"3351:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3336:3:21","nodeType":"YulIdentifier","src":"3336:3:21"},"nativeSrc":"3336:18:21","nodeType":"YulFunctionCall","src":"3336:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"3356:31:21","nodeType":"YulLiteral","src":"3356:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"3329:6:21","nodeType":"YulIdentifier","src":"3329:6:21"},"nativeSrc":"3329:59:21","nodeType":"YulFunctionCall","src":"3329:59:21"},"nativeSrc":"3329:59:21","nodeType":"YulExpressionStatement","src":"3329:59:21"},{"nativeSrc":"3397:26:21","nodeType":"YulAssignment","src":"3397:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3409:9:21","nodeType":"YulIdentifier","src":"3409:9:21"},{"kind":"number","nativeSrc":"3420:2:21","nodeType":"YulLiteral","src":"3420:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3405:3:21","nodeType":"YulIdentifier","src":"3405:3:21"},"nativeSrc":"3405:18:21","nodeType":"YulFunctionCall","src":"3405:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3397:4:21","nodeType":"YulIdentifier","src":"3397:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3076:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3227:9:21","nodeType":"YulTypedName","src":"3227:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3241:4:21","nodeType":"YulTypedName","src":"3241:4:21","type":""}],"src":"3076:353:21"},{"body":{"nativeSrc":"3555:275:21","nodeType":"YulBlock","src":"3555:275:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3572:9:21","nodeType":"YulIdentifier","src":"3572:9:21"},{"kind":"number","nativeSrc":"3583:2:21","nodeType":"YulLiteral","src":"3583:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3565:6:21","nodeType":"YulIdentifier","src":"3565:6:21"},"nativeSrc":"3565:21:21","nodeType":"YulFunctionCall","src":"3565:21:21"},"nativeSrc":"3565:21:21","nodeType":"YulExpressionStatement","src":"3565:21:21"},{"nativeSrc":"3595:27:21","nodeType":"YulVariableDeclaration","src":"3595:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"3615:6:21","nodeType":"YulIdentifier","src":"3615:6:21"}],"functionName":{"name":"mload","nativeSrc":"3609:5:21","nodeType":"YulIdentifier","src":"3609:5:21"},"nativeSrc":"3609:13:21","nodeType":"YulFunctionCall","src":"3609:13:21"},"variables":[{"name":"length","nativeSrc":"3599:6:21","nodeType":"YulTypedName","src":"3599:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3642:9:21","nodeType":"YulIdentifier","src":"3642:9:21"},{"kind":"number","nativeSrc":"3653:2:21","nodeType":"YulLiteral","src":"3653:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3638:3:21","nodeType":"YulIdentifier","src":"3638:3:21"},"nativeSrc":"3638:18:21","nodeType":"YulFunctionCall","src":"3638:18:21"},{"name":"length","nativeSrc":"3658:6:21","nodeType":"YulIdentifier","src":"3658:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3631:6:21","nodeType":"YulIdentifier","src":"3631:6:21"},"nativeSrc":"3631:34:21","nodeType":"YulFunctionCall","src":"3631:34:21"},"nativeSrc":"3631:34:21","nodeType":"YulExpressionStatement","src":"3631:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3713:6:21","nodeType":"YulIdentifier","src":"3713:6:21"},{"kind":"number","nativeSrc":"3721:2:21","nodeType":"YulLiteral","src":"3721:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3709:3:21","nodeType":"YulIdentifier","src":"3709:3:21"},"nativeSrc":"3709:15:21","nodeType":"YulFunctionCall","src":"3709:15:21"},{"arguments":[{"name":"headStart","nativeSrc":"3730:9:21","nodeType":"YulIdentifier","src":"3730:9:21"},{"kind":"number","nativeSrc":"3741:2:21","nodeType":"YulLiteral","src":"3741:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3726:3:21","nodeType":"YulIdentifier","src":"3726:3:21"},"nativeSrc":"3726:18:21","nodeType":"YulFunctionCall","src":"3726:18:21"},{"name":"length","nativeSrc":"3746:6:21","nodeType":"YulIdentifier","src":"3746:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3674:34:21","nodeType":"YulIdentifier","src":"3674:34:21"},"nativeSrc":"3674:79:21","nodeType":"YulFunctionCall","src":"3674:79:21"},"nativeSrc":"3674:79:21","nodeType":"YulExpressionStatement","src":"3674:79:21"},{"nativeSrc":"3762:62:21","nodeType":"YulAssignment","src":"3762:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3778:9:21","nodeType":"YulIdentifier","src":"3778:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3797:6:21","nodeType":"YulIdentifier","src":"3797:6:21"},{"kind":"number","nativeSrc":"3805:2:21","nodeType":"YulLiteral","src":"3805:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3793:3:21","nodeType":"YulIdentifier","src":"3793:3:21"},"nativeSrc":"3793:15:21","nodeType":"YulFunctionCall","src":"3793:15:21"},{"arguments":[{"kind":"number","nativeSrc":"3814:2:21","nodeType":"YulLiteral","src":"3814:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3810:3:21","nodeType":"YulIdentifier","src":"3810:3:21"},"nativeSrc":"3810:7:21","nodeType":"YulFunctionCall","src":"3810:7:21"}],"functionName":{"name":"and","nativeSrc":"3789:3:21","nodeType":"YulIdentifier","src":"3789:3:21"},"nativeSrc":"3789:29:21","nodeType":"YulFunctionCall","src":"3789:29:21"}],"functionName":{"name":"add","nativeSrc":"3774:3:21","nodeType":"YulIdentifier","src":"3774:3:21"},"nativeSrc":"3774:45:21","nodeType":"YulFunctionCall","src":"3774:45:21"},{"kind":"number","nativeSrc":"3821:2:21","nodeType":"YulLiteral","src":"3821:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3770:3:21","nodeType":"YulIdentifier","src":"3770:3:21"},"nativeSrc":"3770:54:21","nodeType":"YulFunctionCall","src":"3770:54:21"},"variableNames":[{"name":"tail","nativeSrc":"3762:4:21","nodeType":"YulIdentifier","src":"3762:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3434:396:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3524:9:21","nodeType":"YulTypedName","src":"3524:9:21","type":""},{"name":"value0","nativeSrc":"3535:6:21","nodeType":"YulTypedName","src":"3535:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3546:4:21","nodeType":"YulTypedName","src":"3546:4:21","type":""}],"src":"3434:396:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value2 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1967: new admin is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405162000e1138038062000e11833981016040819052620000269162000424565b828162000036828260006200004d565b50620000449050826200007f565b50505062000557565b6200005883620000f1565b600082511180620000665750805b156200007a5762000078838362000133565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000c160008051602062000dca833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000ee8162000162565b50565b620000fc8162000200565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200015b838360405180606001604052806027815260200162000dea6027913962000297565b9392505050565b6001600160a01b038116620001cd5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b8060008051602062000dca8339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6200026f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001c4565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc620001df565b6060600080856001600160a01b031685604051620002b6919062000504565b600060405180830381855af49150503d8060008114620002f3576040519150601f19603f3d011682016040523d82523d6000602084013e620002f8565b606091505b5090925090506200030c8683838762000316565b9695505050505050565b606083156200038a57825160000362000382576001600160a01b0385163b620003825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001c4565b508162000396565b6200039683836200039e565b949350505050565b815115620003af5781518083602001fd5b8060405162461bcd60e51b8152600401620001c4919062000522565b80516001600160a01b0381168114620003e357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200041b57818101518382015260200162000401565b50506000910152565b6000806000606084860312156200043a57600080fd5b6200044584620003cb565b92506200045560208501620003cb565b60408501519092506001600160401b03808211156200047357600080fd5b818601915086601f8301126200048857600080fd5b8151818111156200049d576200049d620003e8565b604051601f8201601f19908116603f01168101908382118183101715620004c857620004c8620003e8565b81604052828152896020848701011115620004e257600080fd5b620004f5836020830160208801620003fe565b80955050505050509250925092565b6000825162000518818460208701620003fe565b9190910192915050565b602081526000825180602084015262000543816040850160208701620003fe565b601f01601f19169190910160400192915050565b61086380620005676000396000f3fe60806040523661001357610011610017565b005b6100115b61001f610169565b6001600160a01b0316330361015f5760606001600160e01b0319600035166364d3180d60e11b810161005a5761005361019c565b9150610157565b63587086bd60e11b6001600160e01b031982160161007a576100536101f3565b63070d7c6960e41b6001600160e01b031982160161009a57610053610239565b621eb96f60e61b6001600160e01b03198216016100b95761005361026a565b63a39f25e560e01b6001600160e01b03198216016100d9576100536102aa565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101676102be565b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60606101a66102ce565b60006101b53660048184610683565b8101906101c291906106c9565b90506101df816040518060200160405280600081525060006102d9565b505060408051602081019091526000815290565b60606000806102053660048184610683565b81019061021291906106fa565b91509150610222828260016102d9565b604051806020016040528060008152509250505090565b60606102436102ce565b60006102523660048184610683565b81019061025f91906106c9565b90506101df81610305565b60606102746102ce565b600061027e610169565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102b46102ce565b600061027e61035c565b6101676102c961035c565b61036b565b341561016757600080fd5b6102e28361038f565b6000825111806102ef5750805b15610300576102fe83836103cf565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61032e610169565b604080516001600160a01b03928316815291841660208301520160405180910390a1610359816103fb565b50565b60006103666104a4565b905090565b3660008037600080366000845af43d6000803e80801561038a573d6000f35b3d6000fd5b610398816104cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f4838360405180606001604052806027815260200161083060279139610560565b9392505050565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61018d565b6001600160a01b0381163b6105395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161014e565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610483565b6060600080856001600160a01b03168560405161057d91906107e0565b600060405180830381855af49150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105bd565b606091505b50915091506105ce868383876105d8565b9695505050505050565b60608315610647578251600003610640576001600160a01b0385163b6106405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b5081610651565b6106518383610659565b949350505050565b8151156106695781518083602001fd5b8060405162461bcd60e51b815260040161014e91906107fc565b6000808585111561069357600080fd5b838611156106a057600080fd5b5050820193919092039150565b80356001600160a01b03811681146106c457600080fd5b919050565b6000602082840312156106db57600080fd5b6103f4826106ad565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561070d57600080fd5b610716836106ad565b9150602083013567ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b813581811115610759576107596106e4565b604051601f8201601f19908116603f01168101908382118183101715610781576107816106e4565b8160405282815288602084870101111561079a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600082516107f28184602087016107bc565b9190910192915050565b602081526000825180602084015261081b8160408501602087016107bc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000816000ab53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xE11 CODESIZE SUB DUP1 PUSH3 0xE11 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x26 SWAP2 PUSH3 0x424 JUMP JUMPDEST DUP3 DUP2 PUSH3 0x36 DUP3 DUP3 PUSH1 0x0 PUSH3 0x4D JUMP JUMPDEST POP PUSH3 0x44 SWAP1 POP DUP3 PUSH3 0x7F JUMP JUMPDEST POP POP POP PUSH3 0x557 JUMP JUMPDEST PUSH3 0x58 DUP4 PUSH3 0xF1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x66 JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x7A JUMPI PUSH3 0x78 DUP4 DUP4 PUSH3 0x133 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH3 0xC1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0xEE DUP2 PUSH3 0x162 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0xFC DUP2 PUSH3 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x15B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xDEA PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x297 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH3 0x26F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1C4 JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH3 0x1DF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x2B6 SWAP2 SWAP1 PUSH3 0x504 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x2F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x2F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x30C DUP7 DUP4 DUP4 DUP8 PUSH3 0x316 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x38A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH3 0x382 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH3 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1C4 JUMP JUMPDEST POP DUP2 PUSH3 0x396 JUMP JUMPDEST PUSH3 0x396 DUP4 DUP4 PUSH3 0x39E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH3 0x3AF JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1C4 SWAP2 SWAP1 PUSH3 0x522 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x41B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x401 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x445 DUP5 PUSH3 0x3CB JUMP JUMPDEST SWAP3 POP PUSH3 0x455 PUSH1 0x20 DUP6 ADD PUSH3 0x3CB JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x49D JUMPI PUSH3 0x49D PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x4C8 JUMPI PUSH3 0x4C8 PUSH3 0x3E8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4F5 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x3FE JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x518 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x3FE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x543 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x863 DUP1 PUSH3 0x567 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x1F PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15F JUMPI PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH4 0x64D3180D PUSH1 0xE1 SHL DUP2 ADD PUSH2 0x5A JUMPI PUSH2 0x53 PUSH2 0x19C JUMP JUMPDEST SWAP2 POP PUSH2 0x157 JUMP JUMPDEST PUSH4 0x587086BD PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x7A JUMPI PUSH2 0x53 PUSH2 0x1F3 JUMP JUMPDEST PUSH4 0x70D7C69 PUSH1 0xE4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x9A JUMPI PUSH2 0x53 PUSH2 0x239 JUMP JUMPDEST PUSH3 0x1EB96F PUSH1 0xE6 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xB9 JUMPI PUSH2 0x53 PUSH2 0x26A JUMP JUMPDEST PUSH4 0xA39F25E5 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xD9 JUMPI PUSH2 0x53 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD RETURN JUMPDEST PUSH2 0x167 PUSH2 0x2BE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A6 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x2D9 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x222 DUP3 DUP3 PUSH1 0x1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x243 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x274 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B4 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x35C JUMP JUMPDEST PUSH2 0x167 PUSH2 0x2C9 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2EF JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FE DUP4 DUP4 PUSH2 0x3CF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x32E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x359 DUP2 PUSH2 0x3FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x38A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x830 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x560 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x483 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5CE DUP7 DUP4 DUP4 DUP8 PUSH2 0x5D8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x647 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x640 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST POP DUP2 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x651 DUP4 DUP4 PUSH2 0x659 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x669 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x6AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6AD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x759 JUMPI PUSH2 0x759 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0x6E4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7F2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x81B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A164 PUSH20 0x6F6C6343000816000AB53127684A568B3173AE13 0xB9 0xF8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ","sourceMap":"3389:4951:12:-:0;;;3663:137;;;;;;;;;;;;;;;;;;:::i;:::-;3748:6;3756:5;1024:39:7;3748:6:12;3756:5;1057::7;1024:17;:39::i;:::-;-1:-1:-1;3773:20:12::1;::::0;-1:-1:-1;3786:6:12;3773:12:::1;:20::i;:::-;3663:137:::0;;;3389:4951;;2057:265:8;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2204:112;2057:265;;;:::o;4300:135::-;4364:35;4377:11;-1:-1:-1;;;;;;;;;;;3854:45:8;-1:-1:-1;;;;;3854:45:8;;3784:122;4377:11;4364:35;;;-1:-1:-1;;;;;1884:15:21;;;1866:34;;1936:15;;;1931:2;1916:18;;1909:43;1801:18;4364:35:8;;;;;;;4409:19;4419:8;4409:9;:19::i;:::-;4300:135;:::o;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:8;;;;;;;;1771:152;:::o;6674:198:13:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:13:o;3988:201:8:-;-1:-1:-1;;;;;4051:22:8;;4043:73;;;;-1:-1:-1;;;4043:73:8;;2165:2:21;4043:73:8;;;2147:21:21;2204:2;2184:18;;;2177:30;2243:34;2223:18;;;2216:62;-1:-1:-1;;;2294:18:21;;;2287:36;2340:19;;4043:73:8;;;;;;;;;4174:8;-1:-1:-1;;;;;;;;;;;4126:39:8;:56;;-1:-1:-1;;;;;;4126:56:8;-1:-1:-1;;;;;4126:56:8;;;;;;;;;;-1:-1:-1;3988:201:8:o;1406:259::-;-1:-1:-1;;;;;1702:19:13;;;1479:95:8;;;;-1:-1:-1;;;1479:95:8;;2572:2:21;1479:95:8;;;2554:21:21;2611:2;2591:18;;;2584:30;2650:34;2630:18;;;2623:62;-1:-1:-1;;;2701:18:21;;;2694:43;2754:19;;1479:95:8;2370:409:21;1479:95:8;1641:17;1030:66;1584:48;1859:190:15;7058:325:13;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:13;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:13;;-1:-1:-1;7223:67:13;-1:-1:-1;7307:69:13;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:13:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:13;;;8113:60;;;;-1:-1:-1;;;8113:60:13;;3278:2:21;8113:60:13;;;3260:21:21;3317:2;3297:18;;;3290:30;3356:31;3336:18;;;3329:59;3405:18;;8113:60:13;3076:353:21;8113:60:13;-1:-1:-1;8208:10:13;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:13;;;;;;;;:::i;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:21;552:16;;545:27;328:250::o;583:1066::-;680:6;688;696;749:2;737:9;728:7;724:23;720:32;717:52;;;765:1;762;755:12;717:52;788:40;818:9;788:40;:::i;:::-;778:50;;847:49;892:2;881:9;877:18;847:49;:::i;:::-;940:2;925:18;;919:25;837:59;;-1:-1:-1;;;;;;993:14:21;;;990:34;;;1020:1;1017;1010:12;990:34;1058:6;1047:9;1043:22;1033:32;;1103:7;1096:4;1092:2;1088:13;1084:27;1074:55;;1125:1;1122;1115:12;1074:55;1154:2;1148:9;1176:2;1172;1169:10;1166:36;;;1182:18;;:::i;:::-;1257:2;1251:9;1225:2;1311:13;;-1:-1:-1;;1307:22:21;;;1331:2;1303:31;1299:40;1287:53;;;1355:18;;;1375:22;;;1352:46;1349:72;;;1401:18;;:::i;:::-;1441:10;1437:2;1430:22;1476:2;1468:6;1461:18;1516:7;1511:2;1506;1502;1498:11;1494:20;1491:33;1488:53;;;1537:1;1534;1527:12;1488:53;1550:68;1615:2;1610;1602:6;1598:15;1593:2;1589;1585:11;1550:68;:::i;:::-;1637:6;1627:16;;;;;;;583:1066;;;;;:::o;2784:287::-;2913:3;2951:6;2945:13;2967:66;3026:6;3021:3;3014:4;3006:6;3002:17;2967:66;:::i;:::-;3049:16;;;;;2784:287;-1:-1:-1;;2784:287:21:o;3434:396::-;3583:2;3572:9;3565:21;3546:4;3615:6;3609:13;3658:6;3653:2;3642:9;3638:18;3631:34;3674:79;3746:6;3741:2;3730:9;3726:18;3721:2;3713:6;3709:15;3674:79;:::i;:::-;3814:2;3793:15;-1:-1:-1;;3789:29:21;3774:45;;;;3821:2;3770:54;;3434:396;-1:-1:-1;;3434:396:21:o;:::-;3389:4951:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1195":{"entryPoint":null,"id":1195,"parameterSlots":0,"returnSlots":0},"@_1203":{"entryPoint":null,"id":1203,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_1208":{"entryPoint":null,"id":1208,"parameterSlots":0,"returnSlots":0},"@_changeAdmin_1065":{"entryPoint":773,"id":1065,"parameterSlots":1,"returnSlots":0},"@_delegate_1168":{"entryPoint":875,"id":1168,"parameterSlots":1,"returnSlots":0},"@_dispatchAdmin_1540":{"entryPoint":618,"id":1540,"parameterSlots":0,"returnSlots":1},"@_dispatchChangeAdmin_1589":{"entryPoint":569,"id":1589,"parameterSlots":0,"returnSlots":1},"@_dispatchImplementation_1560":{"entryPoint":682,"id":1560,"parameterSlots":0,"returnSlots":1},"@_dispatchUpgradeToAndCall_1655":{"entryPoint":499,"id":1655,"parameterSlots":0,"returnSlots":1},"@_dispatchUpgradeTo_1623":{"entryPoint":412,"id":1623,"parameterSlots":0,"returnSlots":1},"@_fallback_1187":{"entryPoint":702,"id":1187,"parameterSlots":0,"returnSlots":0},"@_fallback_1520":{"entryPoint":23,"id":1520,"parameterSlots":0,"returnSlots":0},"@_getAdmin_1022":{"entryPoint":361,"id":1022,"parameterSlots":0,"returnSlots":1},"@_getImplementation_883":{"entryPoint":1188,"id":883,"parameterSlots":0,"returnSlots":1},"@_implementation_852":{"entryPoint":860,"id":852,"parameterSlots":0,"returnSlots":1},"@_requireZeroValue_1677":{"entryPoint":718,"id":1677,"parameterSlots":0,"returnSlots":0},"@_revert_2007":{"entryPoint":1625,"id":2007,"parameterSlots":2,"returnSlots":0},"@_setAdmin_1048":{"entryPoint":1019,"id":1048,"parameterSlots":1,"returnSlots":0},"@_setImplementation_907":{"entryPoint":1228,"id":907,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_952":{"entryPoint":729,"id":952,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_922":{"entryPoint":911,"id":922,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1895":{"entryPoint":975,"id":1895,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1924":{"entryPoint":1376,"id":1924,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2062":{"entryPoint":null,"id":2062,"parameterSlots":1,"returnSlots":1},"@isContract_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1963":{"entryPoint":1496,"id":1963,"parameterSlots":4,"returnSlots":1},"abi_decode_address_payable":{"entryPoint":1709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":1737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_bytes_memory_ptr":{"entryPoint":1786,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":1667,"id":null,"parameterSlots":4,"returnSlots":2},"copy_memory_to_memory_with_cleanup":{"entryPoint":1980,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":1764,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5007:21","nodeType":"YulBlock","src":"0:5007:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"188:296:21","nodeType":"YulBlock","src":"188:296:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"205:9:21","nodeType":"YulIdentifier","src":"205:9:21"},{"kind":"number","nativeSrc":"216:2:21","nodeType":"YulLiteral","src":"216:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"198:6:21","nodeType":"YulIdentifier","src":"198:6:21"},"nativeSrc":"198:21:21","nodeType":"YulFunctionCall","src":"198:21:21"},"nativeSrc":"198:21:21","nodeType":"YulExpressionStatement","src":"198:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"239:9:21","nodeType":"YulIdentifier","src":"239:9:21"},{"kind":"number","nativeSrc":"250:2:21","nodeType":"YulLiteral","src":"250:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"235:3:21","nodeType":"YulIdentifier","src":"235:3:21"},"nativeSrc":"235:18:21","nodeType":"YulFunctionCall","src":"235:18:21"},{"kind":"number","nativeSrc":"255:2:21","nodeType":"YulLiteral","src":"255:2:21","type":"","value":"66"}],"functionName":{"name":"mstore","nativeSrc":"228:6:21","nodeType":"YulIdentifier","src":"228:6:21"},"nativeSrc":"228:30:21","nodeType":"YulFunctionCall","src":"228:30:21"},"nativeSrc":"228:30:21","nodeType":"YulExpressionStatement","src":"228:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"278:9:21","nodeType":"YulIdentifier","src":"278:9:21"},{"kind":"number","nativeSrc":"289:2:21","nodeType":"YulLiteral","src":"289:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"274:3:21","nodeType":"YulIdentifier","src":"274:3:21"},"nativeSrc":"274:18:21","nodeType":"YulFunctionCall","src":"274:18:21"},{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d","kind":"string","nativeSrc":"294:34:21","nodeType":"YulLiteral","src":"294:34:21","type":"","value":"TransparentUpgradeableProxy: adm"}],"functionName":{"name":"mstore","nativeSrc":"267:6:21","nodeType":"YulIdentifier","src":"267:6:21"},"nativeSrc":"267:62:21","nodeType":"YulFunctionCall","src":"267:62:21"},"nativeSrc":"267:62:21","nodeType":"YulExpressionStatement","src":"267:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"349:9:21","nodeType":"YulIdentifier","src":"349:9:21"},{"kind":"number","nativeSrc":"360:2:21","nodeType":"YulLiteral","src":"360:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"345:3:21","nodeType":"YulIdentifier","src":"345:3:21"},"nativeSrc":"345:18:21","nodeType":"YulFunctionCall","src":"345:18:21"},{"hexValue":"696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267","kind":"string","nativeSrc":"365:34:21","nodeType":"YulLiteral","src":"365:34:21","type":"","value":"in cannot fallback to proxy targ"}],"functionName":{"name":"mstore","nativeSrc":"338:6:21","nodeType":"YulIdentifier","src":"338:6:21"},"nativeSrc":"338:62:21","nodeType":"YulFunctionCall","src":"338:62:21"},"nativeSrc":"338:62:21","nodeType":"YulExpressionStatement","src":"338:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"420:9:21","nodeType":"YulIdentifier","src":"420:9:21"},{"kind":"number","nativeSrc":"431:3:21","nodeType":"YulLiteral","src":"431:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"416:3:21","nodeType":"YulIdentifier","src":"416:3:21"},"nativeSrc":"416:19:21","nodeType":"YulFunctionCall","src":"416:19:21"},{"hexValue":"6574","kind":"string","nativeSrc":"437:4:21","nodeType":"YulLiteral","src":"437:4:21","type":"","value":"et"}],"functionName":{"name":"mstore","nativeSrc":"409:6:21","nodeType":"YulIdentifier","src":"409:6:21"},"nativeSrc":"409:33:21","nodeType":"YulFunctionCall","src":"409:33:21"},"nativeSrc":"409:33:21","nodeType":"YulExpressionStatement","src":"409:33:21"},{"nativeSrc":"451:27:21","nodeType":"YulAssignment","src":"451:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"463:9:21","nodeType":"YulIdentifier","src":"463:9:21"},{"kind":"number","nativeSrc":"474:3:21","nodeType":"YulLiteral","src":"474:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"459:3:21","nodeType":"YulIdentifier","src":"459:3:21"},"nativeSrc":"459:19:21","nodeType":"YulFunctionCall","src":"459:19:21"},"variableNames":[{"name":"tail","nativeSrc":"451:4:21","nodeType":"YulIdentifier","src":"451:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:470:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"165:9:21","nodeType":"YulTypedName","src":"165:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"179:4:21","nodeType":"YulTypedName","src":"179:4:21","type":""}],"src":"14:470:21"},{"body":{"nativeSrc":"619:201:21","nodeType":"YulBlock","src":"619:201:21","statements":[{"body":{"nativeSrc":"657:16:21","nodeType":"YulBlock","src":"657:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"666:1:21","nodeType":"YulLiteral","src":"666:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"669:1:21","nodeType":"YulLiteral","src":"669:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"659:6:21","nodeType":"YulIdentifier","src":"659:6:21"},"nativeSrc":"659:12:21","nodeType":"YulFunctionCall","src":"659:12:21"},"nativeSrc":"659:12:21","nodeType":"YulExpressionStatement","src":"659:12:21"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"635:10:21","nodeType":"YulIdentifier","src":"635:10:21"},{"name":"endIndex","nativeSrc":"647:8:21","nodeType":"YulIdentifier","src":"647:8:21"}],"functionName":{"name":"gt","nativeSrc":"632:2:21","nodeType":"YulIdentifier","src":"632:2:21"},"nativeSrc":"632:24:21","nodeType":"YulFunctionCall","src":"632:24:21"},"nativeSrc":"629:44:21","nodeType":"YulIf","src":"629:44:21"},{"body":{"nativeSrc":"706:16:21","nodeType":"YulBlock","src":"706:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"715:1:21","nodeType":"YulLiteral","src":"715:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"718:1:21","nodeType":"YulLiteral","src":"718:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"708:6:21","nodeType":"YulIdentifier","src":"708:6:21"},"nativeSrc":"708:12:21","nodeType":"YulFunctionCall","src":"708:12:21"},"nativeSrc":"708:12:21","nodeType":"YulExpressionStatement","src":"708:12:21"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"688:8:21","nodeType":"YulIdentifier","src":"688:8:21"},{"name":"length","nativeSrc":"698:6:21","nodeType":"YulIdentifier","src":"698:6:21"}],"functionName":{"name":"gt","nativeSrc":"685:2:21","nodeType":"YulIdentifier","src":"685:2:21"},"nativeSrc":"685:20:21","nodeType":"YulFunctionCall","src":"685:20:21"},"nativeSrc":"682:40:21","nodeType":"YulIf","src":"682:40:21"},{"nativeSrc":"731:36:21","nodeType":"YulAssignment","src":"731:36:21","value":{"arguments":[{"name":"offset","nativeSrc":"748:6:21","nodeType":"YulIdentifier","src":"748:6:21"},{"name":"startIndex","nativeSrc":"756:10:21","nodeType":"YulIdentifier","src":"756:10:21"}],"functionName":{"name":"add","nativeSrc":"744:3:21","nodeType":"YulIdentifier","src":"744:3:21"},"nativeSrc":"744:23:21","nodeType":"YulFunctionCall","src":"744:23:21"},"variableNames":[{"name":"offsetOut","nativeSrc":"731:9:21","nodeType":"YulIdentifier","src":"731:9:21"}]},{"nativeSrc":"776:38:21","nodeType":"YulAssignment","src":"776:38:21","value":{"arguments":[{"name":"endIndex","nativeSrc":"793:8:21","nodeType":"YulIdentifier","src":"793:8:21"},{"name":"startIndex","nativeSrc":"803:10:21","nodeType":"YulIdentifier","src":"803:10:21"}],"functionName":{"name":"sub","nativeSrc":"789:3:21","nodeType":"YulIdentifier","src":"789:3:21"},"nativeSrc":"789:25:21","nodeType":"YulFunctionCall","src":"789:25:21"},"variableNames":[{"name":"lengthOut","nativeSrc":"776:9:21","nodeType":"YulIdentifier","src":"776:9:21"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"489:331:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"553:6:21","nodeType":"YulTypedName","src":"553:6:21","type":""},{"name":"length","nativeSrc":"561:6:21","nodeType":"YulTypedName","src":"561:6:21","type":""},{"name":"startIndex","nativeSrc":"569:10:21","nodeType":"YulTypedName","src":"569:10:21","type":""},{"name":"endIndex","nativeSrc":"581:8:21","nodeType":"YulTypedName","src":"581:8:21","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"594:9:21","nodeType":"YulTypedName","src":"594:9:21","type":""},{"name":"lengthOut","nativeSrc":"605:9:21","nodeType":"YulTypedName","src":"605:9:21","type":""}],"src":"489:331:21"},{"body":{"nativeSrc":"882:124:21","nodeType":"YulBlock","src":"882:124:21","statements":[{"nativeSrc":"892:29:21","nodeType":"YulAssignment","src":"892:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"914:6:21","nodeType":"YulIdentifier","src":"914:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"901:12:21","nodeType":"YulIdentifier","src":"901:12:21"},"nativeSrc":"901:20:21","nodeType":"YulFunctionCall","src":"901:20:21"},"variableNames":[{"name":"value","nativeSrc":"892:5:21","nodeType":"YulIdentifier","src":"892:5:21"}]},{"body":{"nativeSrc":"984:16:21","nodeType":"YulBlock","src":"984:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"993:1:21","nodeType":"YulLiteral","src":"993:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"996:1:21","nodeType":"YulLiteral","src":"996:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"986:6:21","nodeType":"YulIdentifier","src":"986:6:21"},"nativeSrc":"986:12:21","nodeType":"YulFunctionCall","src":"986:12:21"},"nativeSrc":"986:12:21","nodeType":"YulExpressionStatement","src":"986:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"943:5:21","nodeType":"YulIdentifier","src":"943:5:21"},{"arguments":[{"name":"value","nativeSrc":"954:5:21","nodeType":"YulIdentifier","src":"954:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"969:3:21","nodeType":"YulLiteral","src":"969:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"974:1:21","nodeType":"YulLiteral","src":"974:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"965:3:21","nodeType":"YulIdentifier","src":"965:3:21"},"nativeSrc":"965:11:21","nodeType":"YulFunctionCall","src":"965:11:21"},{"kind":"number","nativeSrc":"978:1:21","nodeType":"YulLiteral","src":"978:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"961:3:21","nodeType":"YulIdentifier","src":"961:3:21"},"nativeSrc":"961:19:21","nodeType":"YulFunctionCall","src":"961:19:21"}],"functionName":{"name":"and","nativeSrc":"950:3:21","nodeType":"YulIdentifier","src":"950:3:21"},"nativeSrc":"950:31:21","nodeType":"YulFunctionCall","src":"950:31:21"}],"functionName":{"name":"eq","nativeSrc":"940:2:21","nodeType":"YulIdentifier","src":"940:2:21"},"nativeSrc":"940:42:21","nodeType":"YulFunctionCall","src":"940:42:21"}],"functionName":{"name":"iszero","nativeSrc":"933:6:21","nodeType":"YulIdentifier","src":"933:6:21"},"nativeSrc":"933:50:21","nodeType":"YulFunctionCall","src":"933:50:21"},"nativeSrc":"930:70:21","nodeType":"YulIf","src":"930:70:21"}]},"name":"abi_decode_address_payable","nativeSrc":"825:181:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"861:6:21","nodeType":"YulTypedName","src":"861:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"872:5:21","nodeType":"YulTypedName","src":"872:5:21","type":""}],"src":"825:181:21"},{"body":{"nativeSrc":"1089:124:21","nodeType":"YulBlock","src":"1089:124:21","statements":[{"body":{"nativeSrc":"1135:16:21","nodeType":"YulBlock","src":"1135:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1144:1:21","nodeType":"YulLiteral","src":"1144:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1147:1:21","nodeType":"YulLiteral","src":"1147:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1137:6:21","nodeType":"YulIdentifier","src":"1137:6:21"},"nativeSrc":"1137:12:21","nodeType":"YulFunctionCall","src":"1137:12:21"},"nativeSrc":"1137:12:21","nodeType":"YulExpressionStatement","src":"1137:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1110:7:21","nodeType":"YulIdentifier","src":"1110:7:21"},{"name":"headStart","nativeSrc":"1119:9:21","nodeType":"YulIdentifier","src":"1119:9:21"}],"functionName":{"name":"sub","nativeSrc":"1106:3:21","nodeType":"YulIdentifier","src":"1106:3:21"},"nativeSrc":"1106:23:21","nodeType":"YulFunctionCall","src":"1106:23:21"},{"kind":"number","nativeSrc":"1131:2:21","nodeType":"YulLiteral","src":"1131:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1102:3:21","nodeType":"YulIdentifier","src":"1102:3:21"},"nativeSrc":"1102:32:21","nodeType":"YulFunctionCall","src":"1102:32:21"},"nativeSrc":"1099:52:21","nodeType":"YulIf","src":"1099:52:21"},{"nativeSrc":"1160:47:21","nodeType":"YulAssignment","src":"1160:47:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1197:9:21","nodeType":"YulIdentifier","src":"1197:9:21"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"1170:26:21","nodeType":"YulIdentifier","src":"1170:26:21"},"nativeSrc":"1170:37:21","nodeType":"YulFunctionCall","src":"1170:37:21"},"variableNames":[{"name":"value0","nativeSrc":"1160:6:21","nodeType":"YulIdentifier","src":"1160:6:21"}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"1011:202:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1055:9:21","nodeType":"YulTypedName","src":"1055:9:21","type":""},{"name":"dataEnd","nativeSrc":"1066:7:21","nodeType":"YulTypedName","src":"1066:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1078:6:21","nodeType":"YulTypedName","src":"1078:6:21","type":""}],"src":"1011:202:21"},{"body":{"nativeSrc":"1250:95:21","nodeType":"YulBlock","src":"1250:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1267:1:21","nodeType":"YulLiteral","src":"1267:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1274:3:21","nodeType":"YulLiteral","src":"1274:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"1279:10:21","nodeType":"YulLiteral","src":"1279:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1270:3:21","nodeType":"YulIdentifier","src":"1270:3:21"},"nativeSrc":"1270:20:21","nodeType":"YulFunctionCall","src":"1270:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1260:6:21","nodeType":"YulIdentifier","src":"1260:6:21"},"nativeSrc":"1260:31:21","nodeType":"YulFunctionCall","src":"1260:31:21"},"nativeSrc":"1260:31:21","nodeType":"YulExpressionStatement","src":"1260:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1307:1:21","nodeType":"YulLiteral","src":"1307:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1310:4:21","nodeType":"YulLiteral","src":"1310:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1300:6:21","nodeType":"YulIdentifier","src":"1300:6:21"},"nativeSrc":"1300:15:21","nodeType":"YulFunctionCall","src":"1300:15:21"},"nativeSrc":"1300:15:21","nodeType":"YulExpressionStatement","src":"1300:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1331:1:21","nodeType":"YulLiteral","src":"1331:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1334:4:21","nodeType":"YulLiteral","src":"1334:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1324:6:21","nodeType":"YulIdentifier","src":"1324:6:21"},"nativeSrc":"1324:15:21","nodeType":"YulFunctionCall","src":"1324:15:21"},"nativeSrc":"1324:15:21","nodeType":"YulExpressionStatement","src":"1324:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1218:127:21","nodeType":"YulFunctionDefinition","src":"1218:127:21"},{"body":{"nativeSrc":"1454:907:21","nodeType":"YulBlock","src":"1454:907:21","statements":[{"body":{"nativeSrc":"1500:16:21","nodeType":"YulBlock","src":"1500:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1509:1:21","nodeType":"YulLiteral","src":"1509:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1512:1:21","nodeType":"YulLiteral","src":"1512:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1502:6:21","nodeType":"YulIdentifier","src":"1502:6:21"},"nativeSrc":"1502:12:21","nodeType":"YulFunctionCall","src":"1502:12:21"},"nativeSrc":"1502:12:21","nodeType":"YulExpressionStatement","src":"1502:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1475:7:21","nodeType":"YulIdentifier","src":"1475:7:21"},{"name":"headStart","nativeSrc":"1484:9:21","nodeType":"YulIdentifier","src":"1484:9:21"}],"functionName":{"name":"sub","nativeSrc":"1471:3:21","nodeType":"YulIdentifier","src":"1471:3:21"},"nativeSrc":"1471:23:21","nodeType":"YulFunctionCall","src":"1471:23:21"},{"kind":"number","nativeSrc":"1496:2:21","nodeType":"YulLiteral","src":"1496:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1467:3:21","nodeType":"YulIdentifier","src":"1467:3:21"},"nativeSrc":"1467:32:21","nodeType":"YulFunctionCall","src":"1467:32:21"},"nativeSrc":"1464:52:21","nodeType":"YulIf","src":"1464:52:21"},{"nativeSrc":"1525:47:21","nodeType":"YulAssignment","src":"1525:47:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1562:9:21","nodeType":"YulIdentifier","src":"1562:9:21"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"1535:26:21","nodeType":"YulIdentifier","src":"1535:26:21"},"nativeSrc":"1535:37:21","nodeType":"YulFunctionCall","src":"1535:37:21"},"variableNames":[{"name":"value0","nativeSrc":"1525:6:21","nodeType":"YulIdentifier","src":"1525:6:21"}]},{"nativeSrc":"1581:46:21","nodeType":"YulVariableDeclaration","src":"1581:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1612:9:21","nodeType":"YulIdentifier","src":"1612:9:21"},{"kind":"number","nativeSrc":"1623:2:21","nodeType":"YulLiteral","src":"1623:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1608:3:21","nodeType":"YulIdentifier","src":"1608:3:21"},"nativeSrc":"1608:18:21","nodeType":"YulFunctionCall","src":"1608:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1595:12:21","nodeType":"YulIdentifier","src":"1595:12:21"},"nativeSrc":"1595:32:21","nodeType":"YulFunctionCall","src":"1595:32:21"},"variables":[{"name":"offset","nativeSrc":"1585:6:21","nodeType":"YulTypedName","src":"1585:6:21","type":""}]},{"nativeSrc":"1636:28:21","nodeType":"YulVariableDeclaration","src":"1636:28:21","value":{"kind":"number","nativeSrc":"1646:18:21","nodeType":"YulLiteral","src":"1646:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1640:2:21","nodeType":"YulTypedName","src":"1640:2:21","type":""}]},{"body":{"nativeSrc":"1691:16:21","nodeType":"YulBlock","src":"1691:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1700:1:21","nodeType":"YulLiteral","src":"1700:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1703:1:21","nodeType":"YulLiteral","src":"1703:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1693:6:21","nodeType":"YulIdentifier","src":"1693:6:21"},"nativeSrc":"1693:12:21","nodeType":"YulFunctionCall","src":"1693:12:21"},"nativeSrc":"1693:12:21","nodeType":"YulExpressionStatement","src":"1693:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1679:6:21","nodeType":"YulIdentifier","src":"1679:6:21"},{"name":"_1","nativeSrc":"1687:2:21","nodeType":"YulIdentifier","src":"1687:2:21"}],"functionName":{"name":"gt","nativeSrc":"1676:2:21","nodeType":"YulIdentifier","src":"1676:2:21"},"nativeSrc":"1676:14:21","nodeType":"YulFunctionCall","src":"1676:14:21"},"nativeSrc":"1673:34:21","nodeType":"YulIf","src":"1673:34:21"},{"nativeSrc":"1716:32:21","nodeType":"YulVariableDeclaration","src":"1716:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1730:9:21","nodeType":"YulIdentifier","src":"1730:9:21"},{"name":"offset","nativeSrc":"1741:6:21","nodeType":"YulIdentifier","src":"1741:6:21"}],"functionName":{"name":"add","nativeSrc":"1726:3:21","nodeType":"YulIdentifier","src":"1726:3:21"},"nativeSrc":"1726:22:21","nodeType":"YulFunctionCall","src":"1726:22:21"},"variables":[{"name":"_2","nativeSrc":"1720:2:21","nodeType":"YulTypedName","src":"1720:2:21","type":""}]},{"body":{"nativeSrc":"1796:16:21","nodeType":"YulBlock","src":"1796:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1805:1:21","nodeType":"YulLiteral","src":"1805:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1808:1:21","nodeType":"YulLiteral","src":"1808:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1798:6:21","nodeType":"YulIdentifier","src":"1798:6:21"},"nativeSrc":"1798:12:21","nodeType":"YulFunctionCall","src":"1798:12:21"},"nativeSrc":"1798:12:21","nodeType":"YulExpressionStatement","src":"1798:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1775:2:21","nodeType":"YulIdentifier","src":"1775:2:21"},{"kind":"number","nativeSrc":"1779:4:21","nodeType":"YulLiteral","src":"1779:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1771:3:21","nodeType":"YulIdentifier","src":"1771:3:21"},"nativeSrc":"1771:13:21","nodeType":"YulFunctionCall","src":"1771:13:21"},{"name":"dataEnd","nativeSrc":"1786:7:21","nodeType":"YulIdentifier","src":"1786:7:21"}],"functionName":{"name":"slt","nativeSrc":"1767:3:21","nodeType":"YulIdentifier","src":"1767:3:21"},"nativeSrc":"1767:27:21","nodeType":"YulFunctionCall","src":"1767:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1760:6:21","nodeType":"YulIdentifier","src":"1760:6:21"},"nativeSrc":"1760:35:21","nodeType":"YulFunctionCall","src":"1760:35:21"},"nativeSrc":"1757:55:21","nodeType":"YulIf","src":"1757:55:21"},{"nativeSrc":"1821:26:21","nodeType":"YulVariableDeclaration","src":"1821:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"1844:2:21","nodeType":"YulIdentifier","src":"1844:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"1831:12:21","nodeType":"YulIdentifier","src":"1831:12:21"},"nativeSrc":"1831:16:21","nodeType":"YulFunctionCall","src":"1831:16:21"},"variables":[{"name":"_3","nativeSrc":"1825:2:21","nodeType":"YulTypedName","src":"1825:2:21","type":""}]},{"body":{"nativeSrc":"1870:22:21","nodeType":"YulBlock","src":"1870:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1872:16:21","nodeType":"YulIdentifier","src":"1872:16:21"},"nativeSrc":"1872:18:21","nodeType":"YulFunctionCall","src":"1872:18:21"},"nativeSrc":"1872:18:21","nodeType":"YulExpressionStatement","src":"1872:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"1862:2:21","nodeType":"YulIdentifier","src":"1862:2:21"},{"name":"_1","nativeSrc":"1866:2:21","nodeType":"YulIdentifier","src":"1866:2:21"}],"functionName":{"name":"gt","nativeSrc":"1859:2:21","nodeType":"YulIdentifier","src":"1859:2:21"},"nativeSrc":"1859:10:21","nodeType":"YulFunctionCall","src":"1859:10:21"},"nativeSrc":"1856:36:21","nodeType":"YulIf","src":"1856:36:21"},{"nativeSrc":"1901:17:21","nodeType":"YulVariableDeclaration","src":"1901:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"1915:2:21","nodeType":"YulLiteral","src":"1915:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1911:3:21","nodeType":"YulIdentifier","src":"1911:3:21"},"nativeSrc":"1911:7:21","nodeType":"YulFunctionCall","src":"1911:7:21"},"variables":[{"name":"_4","nativeSrc":"1905:2:21","nodeType":"YulTypedName","src":"1905:2:21","type":""}]},{"nativeSrc":"1927:23:21","nodeType":"YulVariableDeclaration","src":"1927:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"1947:2:21","nodeType":"YulLiteral","src":"1947:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1941:5:21","nodeType":"YulIdentifier","src":"1941:5:21"},"nativeSrc":"1941:9:21","nodeType":"YulFunctionCall","src":"1941:9:21"},"variables":[{"name":"memPtr","nativeSrc":"1931:6:21","nodeType":"YulTypedName","src":"1931:6:21","type":""}]},{"nativeSrc":"1959:71:21","nodeType":"YulVariableDeclaration","src":"1959:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1981:6:21","nodeType":"YulIdentifier","src":"1981:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2005:2:21","nodeType":"YulIdentifier","src":"2005:2:21"},{"kind":"number","nativeSrc":"2009:4:21","nodeType":"YulLiteral","src":"2009:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2001:3:21","nodeType":"YulIdentifier","src":"2001:3:21"},"nativeSrc":"2001:13:21","nodeType":"YulFunctionCall","src":"2001:13:21"},{"name":"_4","nativeSrc":"2016:2:21","nodeType":"YulIdentifier","src":"2016:2:21"}],"functionName":{"name":"and","nativeSrc":"1997:3:21","nodeType":"YulIdentifier","src":"1997:3:21"},"nativeSrc":"1997:22:21","nodeType":"YulFunctionCall","src":"1997:22:21"},{"kind":"number","nativeSrc":"2021:2:21","nodeType":"YulLiteral","src":"2021:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"1993:3:21","nodeType":"YulIdentifier","src":"1993:3:21"},"nativeSrc":"1993:31:21","nodeType":"YulFunctionCall","src":"1993:31:21"},{"name":"_4","nativeSrc":"2026:2:21","nodeType":"YulIdentifier","src":"2026:2:21"}],"functionName":{"name":"and","nativeSrc":"1989:3:21","nodeType":"YulIdentifier","src":"1989:3:21"},"nativeSrc":"1989:40:21","nodeType":"YulFunctionCall","src":"1989:40:21"}],"functionName":{"name":"add","nativeSrc":"1977:3:21","nodeType":"YulIdentifier","src":"1977:3:21"},"nativeSrc":"1977:53:21","nodeType":"YulFunctionCall","src":"1977:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1963:10:21","nodeType":"YulTypedName","src":"1963:10:21","type":""}]},{"body":{"nativeSrc":"2089:22:21","nodeType":"YulBlock","src":"2089:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2091:16:21","nodeType":"YulIdentifier","src":"2091:16:21"},"nativeSrc":"2091:18:21","nodeType":"YulFunctionCall","src":"2091:18:21"},"nativeSrc":"2091:18:21","nodeType":"YulExpressionStatement","src":"2091:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2048:10:21","nodeType":"YulIdentifier","src":"2048:10:21"},{"name":"_1","nativeSrc":"2060:2:21","nodeType":"YulIdentifier","src":"2060:2:21"}],"functionName":{"name":"gt","nativeSrc":"2045:2:21","nodeType":"YulIdentifier","src":"2045:2:21"},"nativeSrc":"2045:18:21","nodeType":"YulFunctionCall","src":"2045:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2068:10:21","nodeType":"YulIdentifier","src":"2068:10:21"},{"name":"memPtr","nativeSrc":"2080:6:21","nodeType":"YulIdentifier","src":"2080:6:21"}],"functionName":{"name":"lt","nativeSrc":"2065:2:21","nodeType":"YulIdentifier","src":"2065:2:21"},"nativeSrc":"2065:22:21","nodeType":"YulFunctionCall","src":"2065:22:21"}],"functionName":{"name":"or","nativeSrc":"2042:2:21","nodeType":"YulIdentifier","src":"2042:2:21"},"nativeSrc":"2042:46:21","nodeType":"YulFunctionCall","src":"2042:46:21"},"nativeSrc":"2039:72:21","nodeType":"YulIf","src":"2039:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2127:2:21","nodeType":"YulLiteral","src":"2127:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2131:10:21","nodeType":"YulIdentifier","src":"2131:10:21"}],"functionName":{"name":"mstore","nativeSrc":"2120:6:21","nodeType":"YulIdentifier","src":"2120:6:21"},"nativeSrc":"2120:22:21","nodeType":"YulFunctionCall","src":"2120:22:21"},"nativeSrc":"2120:22:21","nodeType":"YulExpressionStatement","src":"2120:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2158:6:21","nodeType":"YulIdentifier","src":"2158:6:21"},{"name":"_3","nativeSrc":"2166:2:21","nodeType":"YulIdentifier","src":"2166:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2151:6:21","nodeType":"YulIdentifier","src":"2151:6:21"},"nativeSrc":"2151:18:21","nodeType":"YulFunctionCall","src":"2151:18:21"},"nativeSrc":"2151:18:21","nodeType":"YulExpressionStatement","src":"2151:18:21"},{"body":{"nativeSrc":"2215:16:21","nodeType":"YulBlock","src":"2215:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2224:1:21","nodeType":"YulLiteral","src":"2224:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2227:1:21","nodeType":"YulLiteral","src":"2227:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2217:6:21","nodeType":"YulIdentifier","src":"2217:6:21"},"nativeSrc":"2217:12:21","nodeType":"YulFunctionCall","src":"2217:12:21"},"nativeSrc":"2217:12:21","nodeType":"YulExpressionStatement","src":"2217:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2192:2:21","nodeType":"YulIdentifier","src":"2192:2:21"},{"name":"_3","nativeSrc":"2196:2:21","nodeType":"YulIdentifier","src":"2196:2:21"}],"functionName":{"name":"add","nativeSrc":"2188:3:21","nodeType":"YulIdentifier","src":"2188:3:21"},"nativeSrc":"2188:11:21","nodeType":"YulFunctionCall","src":"2188:11:21"},{"kind":"number","nativeSrc":"2201:2:21","nodeType":"YulLiteral","src":"2201:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2184:3:21","nodeType":"YulIdentifier","src":"2184:3:21"},"nativeSrc":"2184:20:21","nodeType":"YulFunctionCall","src":"2184:20:21"},{"name":"dataEnd","nativeSrc":"2206:7:21","nodeType":"YulIdentifier","src":"2206:7:21"}],"functionName":{"name":"gt","nativeSrc":"2181:2:21","nodeType":"YulIdentifier","src":"2181:2:21"},"nativeSrc":"2181:33:21","nodeType":"YulFunctionCall","src":"2181:33:21"},"nativeSrc":"2178:53:21","nodeType":"YulIf","src":"2178:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2257:6:21","nodeType":"YulIdentifier","src":"2257:6:21"},{"kind":"number","nativeSrc":"2265:2:21","nodeType":"YulLiteral","src":"2265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2253:3:21","nodeType":"YulIdentifier","src":"2253:3:21"},"nativeSrc":"2253:15:21","nodeType":"YulFunctionCall","src":"2253:15:21"},{"arguments":[{"name":"_2","nativeSrc":"2274:2:21","nodeType":"YulIdentifier","src":"2274:2:21"},{"kind":"number","nativeSrc":"2278:2:21","nodeType":"YulLiteral","src":"2278:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2270:3:21","nodeType":"YulIdentifier","src":"2270:3:21"},"nativeSrc":"2270:11:21","nodeType":"YulFunctionCall","src":"2270:11:21"},{"name":"_3","nativeSrc":"2283:2:21","nodeType":"YulIdentifier","src":"2283:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"2240:12:21","nodeType":"YulIdentifier","src":"2240:12:21"},"nativeSrc":"2240:46:21","nodeType":"YulFunctionCall","src":"2240:46:21"},"nativeSrc":"2240:46:21","nodeType":"YulExpressionStatement","src":"2240:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2310:6:21","nodeType":"YulIdentifier","src":"2310:6:21"},{"name":"_3","nativeSrc":"2318:2:21","nodeType":"YulIdentifier","src":"2318:2:21"}],"functionName":{"name":"add","nativeSrc":"2306:3:21","nodeType":"YulIdentifier","src":"2306:3:21"},"nativeSrc":"2306:15:21","nodeType":"YulFunctionCall","src":"2306:15:21"},{"kind":"number","nativeSrc":"2323:2:21","nodeType":"YulLiteral","src":"2323:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2302:3:21","nodeType":"YulIdentifier","src":"2302:3:21"},"nativeSrc":"2302:24:21","nodeType":"YulFunctionCall","src":"2302:24:21"},{"kind":"number","nativeSrc":"2328:1:21","nodeType":"YulLiteral","src":"2328:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2295:6:21","nodeType":"YulIdentifier","src":"2295:6:21"},"nativeSrc":"2295:35:21","nodeType":"YulFunctionCall","src":"2295:35:21"},"nativeSrc":"2295:35:21","nodeType":"YulExpressionStatement","src":"2295:35:21"},{"nativeSrc":"2339:16:21","nodeType":"YulAssignment","src":"2339:16:21","value":{"name":"memPtr","nativeSrc":"2349:6:21","nodeType":"YulIdentifier","src":"2349:6:21"},"variableNames":[{"name":"value1","nativeSrc":"2339:6:21","nodeType":"YulIdentifier","src":"2339:6:21"}]}]},"name":"abi_decode_tuple_t_address_payablet_bytes_memory_ptr","nativeSrc":"1350:1011:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1412:9:21","nodeType":"YulTypedName","src":"1412:9:21","type":""},{"name":"dataEnd","nativeSrc":"1423:7:21","nodeType":"YulTypedName","src":"1423:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1435:6:21","nodeType":"YulTypedName","src":"1435:6:21","type":""},{"name":"value1","nativeSrc":"1443:6:21","nodeType":"YulTypedName","src":"1443:6:21","type":""}],"src":"1350:1011:21"},{"body":{"nativeSrc":"2467:102:21","nodeType":"YulBlock","src":"2467:102:21","statements":[{"nativeSrc":"2477:26:21","nodeType":"YulAssignment","src":"2477:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2489:9:21","nodeType":"YulIdentifier","src":"2489:9:21"},{"kind":"number","nativeSrc":"2500:2:21","nodeType":"YulLiteral","src":"2500:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2485:3:21","nodeType":"YulIdentifier","src":"2485:3:21"},"nativeSrc":"2485:18:21","nodeType":"YulFunctionCall","src":"2485:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2477:4:21","nodeType":"YulIdentifier","src":"2477:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2519:9:21","nodeType":"YulIdentifier","src":"2519:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2534:6:21","nodeType":"YulIdentifier","src":"2534:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2550:3:21","nodeType":"YulLiteral","src":"2550:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"2555:1:21","nodeType":"YulLiteral","src":"2555:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2546:3:21","nodeType":"YulIdentifier","src":"2546:3:21"},"nativeSrc":"2546:11:21","nodeType":"YulFunctionCall","src":"2546:11:21"},{"kind":"number","nativeSrc":"2559:1:21","nodeType":"YulLiteral","src":"2559:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2542:3:21","nodeType":"YulIdentifier","src":"2542:3:21"},"nativeSrc":"2542:19:21","nodeType":"YulFunctionCall","src":"2542:19:21"}],"functionName":{"name":"and","nativeSrc":"2530:3:21","nodeType":"YulIdentifier","src":"2530:3:21"},"nativeSrc":"2530:32:21","nodeType":"YulFunctionCall","src":"2530:32:21"}],"functionName":{"name":"mstore","nativeSrc":"2512:6:21","nodeType":"YulIdentifier","src":"2512:6:21"},"nativeSrc":"2512:51:21","nodeType":"YulFunctionCall","src":"2512:51:21"},"nativeSrc":"2512:51:21","nodeType":"YulExpressionStatement","src":"2512:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2366:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2436:9:21","nodeType":"YulTypedName","src":"2436:9:21","type":""},{"name":"value0","nativeSrc":"2447:6:21","nodeType":"YulTypedName","src":"2447:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2458:4:21","nodeType":"YulTypedName","src":"2458:4:21","type":""}],"src":"2366:203:21"},{"body":{"nativeSrc":"2703:175:21","nodeType":"YulBlock","src":"2703:175:21","statements":[{"nativeSrc":"2713:26:21","nodeType":"YulAssignment","src":"2713:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2725:9:21","nodeType":"YulIdentifier","src":"2725:9:21"},{"kind":"number","nativeSrc":"2736:2:21","nodeType":"YulLiteral","src":"2736:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2721:3:21","nodeType":"YulIdentifier","src":"2721:3:21"},"nativeSrc":"2721:18:21","nodeType":"YulFunctionCall","src":"2721:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2713:4:21","nodeType":"YulIdentifier","src":"2713:4:21"}]},{"nativeSrc":"2748:29:21","nodeType":"YulVariableDeclaration","src":"2748:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2766:3:21","nodeType":"YulLiteral","src":"2766:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"2771:1:21","nodeType":"YulLiteral","src":"2771:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2762:3:21","nodeType":"YulIdentifier","src":"2762:3:21"},"nativeSrc":"2762:11:21","nodeType":"YulFunctionCall","src":"2762:11:21"},{"kind":"number","nativeSrc":"2775:1:21","nodeType":"YulLiteral","src":"2775:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2758:3:21","nodeType":"YulIdentifier","src":"2758:3:21"},"nativeSrc":"2758:19:21","nodeType":"YulFunctionCall","src":"2758:19:21"},"variables":[{"name":"_1","nativeSrc":"2752:2:21","nodeType":"YulTypedName","src":"2752:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2793:9:21","nodeType":"YulIdentifier","src":"2793:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2808:6:21","nodeType":"YulIdentifier","src":"2808:6:21"},{"name":"_1","nativeSrc":"2816:2:21","nodeType":"YulIdentifier","src":"2816:2:21"}],"functionName":{"name":"and","nativeSrc":"2804:3:21","nodeType":"YulIdentifier","src":"2804:3:21"},"nativeSrc":"2804:15:21","nodeType":"YulFunctionCall","src":"2804:15:21"}],"functionName":{"name":"mstore","nativeSrc":"2786:6:21","nodeType":"YulIdentifier","src":"2786:6:21"},"nativeSrc":"2786:34:21","nodeType":"YulFunctionCall","src":"2786:34:21"},"nativeSrc":"2786:34:21","nodeType":"YulExpressionStatement","src":"2786:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:21","nodeType":"YulIdentifier","src":"2840:9:21"},{"kind":"number","nativeSrc":"2851:2:21","nodeType":"YulLiteral","src":"2851:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2836:3:21","nodeType":"YulIdentifier","src":"2836:3:21"},"nativeSrc":"2836:18:21","nodeType":"YulFunctionCall","src":"2836:18:21"},{"arguments":[{"name":"value1","nativeSrc":"2860:6:21","nodeType":"YulIdentifier","src":"2860:6:21"},{"name":"_1","nativeSrc":"2868:2:21","nodeType":"YulIdentifier","src":"2868:2:21"}],"functionName":{"name":"and","nativeSrc":"2856:3:21","nodeType":"YulIdentifier","src":"2856:3:21"},"nativeSrc":"2856:15:21","nodeType":"YulFunctionCall","src":"2856:15:21"}],"functionName":{"name":"mstore","nativeSrc":"2829:6:21","nodeType":"YulIdentifier","src":"2829:6:21"},"nativeSrc":"2829:43:21","nodeType":"YulFunctionCall","src":"2829:43:21"},"nativeSrc":"2829:43:21","nodeType":"YulExpressionStatement","src":"2829:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"2574:304:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2664:9:21","nodeType":"YulTypedName","src":"2664:9:21","type":""},{"name":"value1","nativeSrc":"2675:6:21","nodeType":"YulTypedName","src":"2675:6:21","type":""},{"name":"value0","nativeSrc":"2683:6:21","nodeType":"YulTypedName","src":"2683:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2694:4:21","nodeType":"YulTypedName","src":"2694:4:21","type":""}],"src":"2574:304:21"},{"body":{"nativeSrc":"3057:228:21","nodeType":"YulBlock","src":"3057:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3074:9:21","nodeType":"YulIdentifier","src":"3074:9:21"},{"kind":"number","nativeSrc":"3085:2:21","nodeType":"YulLiteral","src":"3085:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3067:6:21","nodeType":"YulIdentifier","src":"3067:6:21"},"nativeSrc":"3067:21:21","nodeType":"YulFunctionCall","src":"3067:21:21"},"nativeSrc":"3067:21:21","nodeType":"YulExpressionStatement","src":"3067:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3108:9:21","nodeType":"YulIdentifier","src":"3108:9:21"},{"kind":"number","nativeSrc":"3119:2:21","nodeType":"YulLiteral","src":"3119:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3104:3:21","nodeType":"YulIdentifier","src":"3104:3:21"},"nativeSrc":"3104:18:21","nodeType":"YulFunctionCall","src":"3104:18:21"},{"kind":"number","nativeSrc":"3124:2:21","nodeType":"YulLiteral","src":"3124:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"3097:6:21","nodeType":"YulIdentifier","src":"3097:6:21"},"nativeSrc":"3097:30:21","nodeType":"YulFunctionCall","src":"3097:30:21"},"nativeSrc":"3097:30:21","nodeType":"YulExpressionStatement","src":"3097:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3147:9:21","nodeType":"YulIdentifier","src":"3147:9:21"},{"kind":"number","nativeSrc":"3158:2:21","nodeType":"YulLiteral","src":"3158:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3143:3:21","nodeType":"YulIdentifier","src":"3143:3:21"},"nativeSrc":"3143:18:21","nodeType":"YulFunctionCall","src":"3143:18:21"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nativeSrc":"3163:34:21","nodeType":"YulLiteral","src":"3163:34:21","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"3136:6:21","nodeType":"YulIdentifier","src":"3136:6:21"},"nativeSrc":"3136:62:21","nodeType":"YulFunctionCall","src":"3136:62:21"},"nativeSrc":"3136:62:21","nodeType":"YulExpressionStatement","src":"3136:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3218:9:21","nodeType":"YulIdentifier","src":"3218:9:21"},{"kind":"number","nativeSrc":"3229:2:21","nodeType":"YulLiteral","src":"3229:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3214:3:21","nodeType":"YulIdentifier","src":"3214:3:21"},"nativeSrc":"3214:18:21","nodeType":"YulFunctionCall","src":"3214:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"3234:8:21","nodeType":"YulLiteral","src":"3234:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"3207:6:21","nodeType":"YulIdentifier","src":"3207:6:21"},"nativeSrc":"3207:36:21","nodeType":"YulFunctionCall","src":"3207:36:21"},"nativeSrc":"3207:36:21","nodeType":"YulExpressionStatement","src":"3207:36:21"},{"nativeSrc":"3252:27:21","nodeType":"YulAssignment","src":"3252:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3264:9:21","nodeType":"YulIdentifier","src":"3264:9:21"},{"kind":"number","nativeSrc":"3275:3:21","nodeType":"YulLiteral","src":"3275:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3260:3:21","nodeType":"YulIdentifier","src":"3260:3:21"},"nativeSrc":"3260:19:21","nodeType":"YulFunctionCall","src":"3260:19:21"},"variableNames":[{"name":"tail","nativeSrc":"3252:4:21","nodeType":"YulIdentifier","src":"3252:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2883:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3034:9:21","nodeType":"YulTypedName","src":"3034:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3048:4:21","nodeType":"YulTypedName","src":"3048:4:21","type":""}],"src":"2883:402:21"},{"body":{"nativeSrc":"3464:235:21","nodeType":"YulBlock","src":"3464:235:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3481:9:21","nodeType":"YulIdentifier","src":"3481:9:21"},{"kind":"number","nativeSrc":"3492:2:21","nodeType":"YulLiteral","src":"3492:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3474:6:21","nodeType":"YulIdentifier","src":"3474:6:21"},"nativeSrc":"3474:21:21","nodeType":"YulFunctionCall","src":"3474:21:21"},"nativeSrc":"3474:21:21","nodeType":"YulExpressionStatement","src":"3474:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3515:9:21","nodeType":"YulIdentifier","src":"3515:9:21"},{"kind":"number","nativeSrc":"3526:2:21","nodeType":"YulLiteral","src":"3526:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3511:3:21","nodeType":"YulIdentifier","src":"3511:3:21"},"nativeSrc":"3511:18:21","nodeType":"YulFunctionCall","src":"3511:18:21"},{"kind":"number","nativeSrc":"3531:2:21","nodeType":"YulLiteral","src":"3531:2:21","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"3504:6:21","nodeType":"YulIdentifier","src":"3504:6:21"},"nativeSrc":"3504:30:21","nodeType":"YulFunctionCall","src":"3504:30:21"},"nativeSrc":"3504:30:21","nodeType":"YulExpressionStatement","src":"3504:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3554:9:21","nodeType":"YulIdentifier","src":"3554:9:21"},{"kind":"number","nativeSrc":"3565:2:21","nodeType":"YulLiteral","src":"3565:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3550:3:21","nodeType":"YulIdentifier","src":"3550:3:21"},"nativeSrc":"3550:18:21","nodeType":"YulFunctionCall","src":"3550:18:21"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"3570:34:21","nodeType":"YulLiteral","src":"3570:34:21","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"3543:6:21","nodeType":"YulIdentifier","src":"3543:6:21"},"nativeSrc":"3543:62:21","nodeType":"YulFunctionCall","src":"3543:62:21"},"nativeSrc":"3543:62:21","nodeType":"YulExpressionStatement","src":"3543:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3625:9:21","nodeType":"YulIdentifier","src":"3625:9:21"},{"kind":"number","nativeSrc":"3636:2:21","nodeType":"YulLiteral","src":"3636:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3621:3:21","nodeType":"YulIdentifier","src":"3621:3:21"},"nativeSrc":"3621:18:21","nodeType":"YulFunctionCall","src":"3621:18:21"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"3641:15:21","nodeType":"YulLiteral","src":"3641:15:21","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"3614:6:21","nodeType":"YulIdentifier","src":"3614:6:21"},"nativeSrc":"3614:43:21","nodeType":"YulFunctionCall","src":"3614:43:21"},"nativeSrc":"3614:43:21","nodeType":"YulExpressionStatement","src":"3614:43:21"},{"nativeSrc":"3666:27:21","nodeType":"YulAssignment","src":"3666:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3678:9:21","nodeType":"YulIdentifier","src":"3678:9:21"},{"kind":"number","nativeSrc":"3689:3:21","nodeType":"YulLiteral","src":"3689:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3674:3:21","nodeType":"YulIdentifier","src":"3674:3:21"},"nativeSrc":"3674:19:21","nodeType":"YulFunctionCall","src":"3674:19:21"},"variableNames":[{"name":"tail","nativeSrc":"3666:4:21","nodeType":"YulIdentifier","src":"3666:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3290:409:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3441:9:21","nodeType":"YulTypedName","src":"3441:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3455:4:21","nodeType":"YulTypedName","src":"3455:4:21","type":""}],"src":"3290:409:21"},{"body":{"nativeSrc":"3770:184:21","nodeType":"YulBlock","src":"3770:184:21","statements":[{"nativeSrc":"3780:10:21","nodeType":"YulVariableDeclaration","src":"3780:10:21","value":{"kind":"number","nativeSrc":"3789:1:21","nodeType":"YulLiteral","src":"3789:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3784:1:21","nodeType":"YulTypedName","src":"3784:1:21","type":""}]},{"body":{"nativeSrc":"3849:63:21","nodeType":"YulBlock","src":"3849:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3874:3:21","nodeType":"YulIdentifier","src":"3874:3:21"},{"name":"i","nativeSrc":"3879:1:21","nodeType":"YulIdentifier","src":"3879:1:21"}],"functionName":{"name":"add","nativeSrc":"3870:3:21","nodeType":"YulIdentifier","src":"3870:3:21"},"nativeSrc":"3870:11:21","nodeType":"YulFunctionCall","src":"3870:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3893:3:21","nodeType":"YulIdentifier","src":"3893:3:21"},{"name":"i","nativeSrc":"3898:1:21","nodeType":"YulIdentifier","src":"3898:1:21"}],"functionName":{"name":"add","nativeSrc":"3889:3:21","nodeType":"YulIdentifier","src":"3889:3:21"},"nativeSrc":"3889:11:21","nodeType":"YulFunctionCall","src":"3889:11:21"}],"functionName":{"name":"mload","nativeSrc":"3883:5:21","nodeType":"YulIdentifier","src":"3883:5:21"},"nativeSrc":"3883:18:21","nodeType":"YulFunctionCall","src":"3883:18:21"}],"functionName":{"name":"mstore","nativeSrc":"3863:6:21","nodeType":"YulIdentifier","src":"3863:6:21"},"nativeSrc":"3863:39:21","nodeType":"YulFunctionCall","src":"3863:39:21"},"nativeSrc":"3863:39:21","nodeType":"YulExpressionStatement","src":"3863:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3810:1:21","nodeType":"YulIdentifier","src":"3810:1:21"},{"name":"length","nativeSrc":"3813:6:21","nodeType":"YulIdentifier","src":"3813:6:21"}],"functionName":{"name":"lt","nativeSrc":"3807:2:21","nodeType":"YulIdentifier","src":"3807:2:21"},"nativeSrc":"3807:13:21","nodeType":"YulFunctionCall","src":"3807:13:21"},"nativeSrc":"3799:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"3821:19:21","nodeType":"YulBlock","src":"3821:19:21","statements":[{"nativeSrc":"3823:15:21","nodeType":"YulAssignment","src":"3823:15:21","value":{"arguments":[{"name":"i","nativeSrc":"3832:1:21","nodeType":"YulIdentifier","src":"3832:1:21"},{"kind":"number","nativeSrc":"3835:2:21","nodeType":"YulLiteral","src":"3835:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3828:3:21","nodeType":"YulIdentifier","src":"3828:3:21"},"nativeSrc":"3828:10:21","nodeType":"YulFunctionCall","src":"3828:10:21"},"variableNames":[{"name":"i","nativeSrc":"3823:1:21","nodeType":"YulIdentifier","src":"3823:1:21"}]}]},"pre":{"nativeSrc":"3803:3:21","nodeType":"YulBlock","src":"3803:3:21","statements":[]},"src":"3799:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3932:3:21","nodeType":"YulIdentifier","src":"3932:3:21"},{"name":"length","nativeSrc":"3937:6:21","nodeType":"YulIdentifier","src":"3937:6:21"}],"functionName":{"name":"add","nativeSrc":"3928:3:21","nodeType":"YulIdentifier","src":"3928:3:21"},"nativeSrc":"3928:16:21","nodeType":"YulFunctionCall","src":"3928:16:21"},{"kind":"number","nativeSrc":"3946:1:21","nodeType":"YulLiteral","src":"3946:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3921:6:21","nodeType":"YulIdentifier","src":"3921:6:21"},"nativeSrc":"3921:27:21","nodeType":"YulFunctionCall","src":"3921:27:21"},"nativeSrc":"3921:27:21","nodeType":"YulExpressionStatement","src":"3921:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3704:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3748:3:21","nodeType":"YulTypedName","src":"3748:3:21","type":""},{"name":"dst","nativeSrc":"3753:3:21","nodeType":"YulTypedName","src":"3753:3:21","type":""},{"name":"length","nativeSrc":"3758:6:21","nodeType":"YulTypedName","src":"3758:6:21","type":""}],"src":"3704:250:21"},{"body":{"nativeSrc":"4096:150:21","nodeType":"YulBlock","src":"4096:150:21","statements":[{"nativeSrc":"4106:27:21","nodeType":"YulVariableDeclaration","src":"4106:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"4126:6:21","nodeType":"YulIdentifier","src":"4126:6:21"}],"functionName":{"name":"mload","nativeSrc":"4120:5:21","nodeType":"YulIdentifier","src":"4120:5:21"},"nativeSrc":"4120:13:21","nodeType":"YulFunctionCall","src":"4120:13:21"},"variables":[{"name":"length","nativeSrc":"4110:6:21","nodeType":"YulTypedName","src":"4110:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4181:6:21","nodeType":"YulIdentifier","src":"4181:6:21"},{"kind":"number","nativeSrc":"4189:4:21","nodeType":"YulLiteral","src":"4189:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4177:3:21","nodeType":"YulIdentifier","src":"4177:3:21"},"nativeSrc":"4177:17:21","nodeType":"YulFunctionCall","src":"4177:17:21"},{"name":"pos","nativeSrc":"4196:3:21","nodeType":"YulIdentifier","src":"4196:3:21"},{"name":"length","nativeSrc":"4201:6:21","nodeType":"YulIdentifier","src":"4201:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4142:34:21","nodeType":"YulIdentifier","src":"4142:34:21"},"nativeSrc":"4142:66:21","nodeType":"YulFunctionCall","src":"4142:66:21"},"nativeSrc":"4142:66:21","nodeType":"YulExpressionStatement","src":"4142:66:21"},{"nativeSrc":"4217:23:21","nodeType":"YulAssignment","src":"4217:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"4228:3:21","nodeType":"YulIdentifier","src":"4228:3:21"},{"name":"length","nativeSrc":"4233:6:21","nodeType":"YulIdentifier","src":"4233:6:21"}],"functionName":{"name":"add","nativeSrc":"4224:3:21","nodeType":"YulIdentifier","src":"4224:3:21"},"nativeSrc":"4224:16:21","nodeType":"YulFunctionCall","src":"4224:16:21"},"variableNames":[{"name":"end","nativeSrc":"4217:3:21","nodeType":"YulIdentifier","src":"4217:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"3959:287:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4072:3:21","nodeType":"YulTypedName","src":"4072:3:21","type":""},{"name":"value0","nativeSrc":"4077:6:21","nodeType":"YulTypedName","src":"4077:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4088:3:21","nodeType":"YulTypedName","src":"4088:3:21","type":""}],"src":"3959:287:21"},{"body":{"nativeSrc":"4425:179:21","nodeType":"YulBlock","src":"4425:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4442:9:21","nodeType":"YulIdentifier","src":"4442:9:21"},{"kind":"number","nativeSrc":"4453:2:21","nodeType":"YulLiteral","src":"4453:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4435:6:21","nodeType":"YulIdentifier","src":"4435:6:21"},"nativeSrc":"4435:21:21","nodeType":"YulFunctionCall","src":"4435:21:21"},"nativeSrc":"4435:21:21","nodeType":"YulExpressionStatement","src":"4435:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4476:9:21","nodeType":"YulIdentifier","src":"4476:9:21"},{"kind":"number","nativeSrc":"4487:2:21","nodeType":"YulLiteral","src":"4487:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4472:3:21","nodeType":"YulIdentifier","src":"4472:3:21"},"nativeSrc":"4472:18:21","nodeType":"YulFunctionCall","src":"4472:18:21"},{"kind":"number","nativeSrc":"4492:2:21","nodeType":"YulLiteral","src":"4492:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"4465:6:21","nodeType":"YulIdentifier","src":"4465:6:21"},"nativeSrc":"4465:30:21","nodeType":"YulFunctionCall","src":"4465:30:21"},"nativeSrc":"4465:30:21","nodeType":"YulExpressionStatement","src":"4465:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4515:9:21","nodeType":"YulIdentifier","src":"4515:9:21"},{"kind":"number","nativeSrc":"4526:2:21","nodeType":"YulLiteral","src":"4526:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4511:3:21","nodeType":"YulIdentifier","src":"4511:3:21"},"nativeSrc":"4511:18:21","nodeType":"YulFunctionCall","src":"4511:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"4531:31:21","nodeType":"YulLiteral","src":"4531:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"4504:6:21","nodeType":"YulIdentifier","src":"4504:6:21"},"nativeSrc":"4504:59:21","nodeType":"YulFunctionCall","src":"4504:59:21"},"nativeSrc":"4504:59:21","nodeType":"YulExpressionStatement","src":"4504:59:21"},{"nativeSrc":"4572:26:21","nodeType":"YulAssignment","src":"4572:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4584:9:21","nodeType":"YulIdentifier","src":"4584:9:21"},{"kind":"number","nativeSrc":"4595:2:21","nodeType":"YulLiteral","src":"4595:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4580:3:21","nodeType":"YulIdentifier","src":"4580:3:21"},"nativeSrc":"4580:18:21","nodeType":"YulFunctionCall","src":"4580:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4572:4:21","nodeType":"YulIdentifier","src":"4572:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4251:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4402:9:21","nodeType":"YulTypedName","src":"4402:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4416:4:21","nodeType":"YulTypedName","src":"4416:4:21","type":""}],"src":"4251:353:21"},{"body":{"nativeSrc":"4730:275:21","nodeType":"YulBlock","src":"4730:275:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4747:9:21","nodeType":"YulIdentifier","src":"4747:9:21"},{"kind":"number","nativeSrc":"4758:2:21","nodeType":"YulLiteral","src":"4758:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4740:6:21","nodeType":"YulIdentifier","src":"4740:6:21"},"nativeSrc":"4740:21:21","nodeType":"YulFunctionCall","src":"4740:21:21"},"nativeSrc":"4740:21:21","nodeType":"YulExpressionStatement","src":"4740:21:21"},{"nativeSrc":"4770:27:21","nodeType":"YulVariableDeclaration","src":"4770:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"4790:6:21","nodeType":"YulIdentifier","src":"4790:6:21"}],"functionName":{"name":"mload","nativeSrc":"4784:5:21","nodeType":"YulIdentifier","src":"4784:5:21"},"nativeSrc":"4784:13:21","nodeType":"YulFunctionCall","src":"4784:13:21"},"variables":[{"name":"length","nativeSrc":"4774:6:21","nodeType":"YulTypedName","src":"4774:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4817:9:21","nodeType":"YulIdentifier","src":"4817:9:21"},{"kind":"number","nativeSrc":"4828:2:21","nodeType":"YulLiteral","src":"4828:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4813:3:21","nodeType":"YulIdentifier","src":"4813:3:21"},"nativeSrc":"4813:18:21","nodeType":"YulFunctionCall","src":"4813:18:21"},{"name":"length","nativeSrc":"4833:6:21","nodeType":"YulIdentifier","src":"4833:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4806:6:21","nodeType":"YulIdentifier","src":"4806:6:21"},"nativeSrc":"4806:34:21","nodeType":"YulFunctionCall","src":"4806:34:21"},"nativeSrc":"4806:34:21","nodeType":"YulExpressionStatement","src":"4806:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4888:6:21","nodeType":"YulIdentifier","src":"4888:6:21"},{"kind":"number","nativeSrc":"4896:2:21","nodeType":"YulLiteral","src":"4896:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4884:3:21","nodeType":"YulIdentifier","src":"4884:3:21"},"nativeSrc":"4884:15:21","nodeType":"YulFunctionCall","src":"4884:15:21"},{"arguments":[{"name":"headStart","nativeSrc":"4905:9:21","nodeType":"YulIdentifier","src":"4905:9:21"},{"kind":"number","nativeSrc":"4916:2:21","nodeType":"YulLiteral","src":"4916:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4901:3:21","nodeType":"YulIdentifier","src":"4901:3:21"},"nativeSrc":"4901:18:21","nodeType":"YulFunctionCall","src":"4901:18:21"},{"name":"length","nativeSrc":"4921:6:21","nodeType":"YulIdentifier","src":"4921:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4849:34:21","nodeType":"YulIdentifier","src":"4849:34:21"},"nativeSrc":"4849:79:21","nodeType":"YulFunctionCall","src":"4849:79:21"},"nativeSrc":"4849:79:21","nodeType":"YulExpressionStatement","src":"4849:79:21"},{"nativeSrc":"4937:62:21","nodeType":"YulAssignment","src":"4937:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4953:9:21","nodeType":"YulIdentifier","src":"4953:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4972:6:21","nodeType":"YulIdentifier","src":"4972:6:21"},{"kind":"number","nativeSrc":"4980:2:21","nodeType":"YulLiteral","src":"4980:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4968:3:21","nodeType":"YulIdentifier","src":"4968:3:21"},"nativeSrc":"4968:15:21","nodeType":"YulFunctionCall","src":"4968:15:21"},{"arguments":[{"kind":"number","nativeSrc":"4989:2:21","nodeType":"YulLiteral","src":"4989:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4985:3:21","nodeType":"YulIdentifier","src":"4985:3:21"},"nativeSrc":"4985:7:21","nodeType":"YulFunctionCall","src":"4985:7:21"}],"functionName":{"name":"and","nativeSrc":"4964:3:21","nodeType":"YulIdentifier","src":"4964:3:21"},"nativeSrc":"4964:29:21","nodeType":"YulFunctionCall","src":"4964:29:21"}],"functionName":{"name":"add","nativeSrc":"4949:3:21","nodeType":"YulIdentifier","src":"4949:3:21"},"nativeSrc":"4949:45:21","nodeType":"YulFunctionCall","src":"4949:45:21"},{"kind":"number","nativeSrc":"4996:2:21","nodeType":"YulLiteral","src":"4996:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4945:3:21","nodeType":"YulIdentifier","src":"4945:3:21"},"nativeSrc":"4945:54:21","nodeType":"YulFunctionCall","src":"4945:54:21"},"variableNames":[{"name":"tail","nativeSrc":"4937:4:21","nodeType":"YulIdentifier","src":"4937:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4609:396:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:21","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nativeSrc":"4710:6:21","nodeType":"YulTypedName","src":"4710:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4721:4:21","nodeType":"YulTypedName","src":"4721:4:21","type":""}],"src":"4609:396:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"TransparentUpgradeableProxy: adm\")\n        mstore(add(headStart, 96), \"in cannot fallback to proxy targ\")\n        mstore(add(headStart, 128), \"et\")\n        tail := add(headStart, 160)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function abi_decode_address_payable(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_payable(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_payablet_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_payable(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1967: new admin is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523661001357610011610017565b005b6100115b61001f610169565b6001600160a01b0316330361015f5760606001600160e01b0319600035166364d3180d60e11b810161005a5761005361019c565b9150610157565b63587086bd60e11b6001600160e01b031982160161007a576100536101f3565b63070d7c6960e41b6001600160e01b031982160161009a57610053610239565b621eb96f60e61b6001600160e01b03198216016100b95761005361026a565b63a39f25e560e01b6001600160e01b03198216016100d9576100536102aa565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101676102be565b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60606101a66102ce565b60006101b53660048184610683565b8101906101c291906106c9565b90506101df816040518060200160405280600081525060006102d9565b505060408051602081019091526000815290565b60606000806102053660048184610683565b81019061021291906106fa565b91509150610222828260016102d9565b604051806020016040528060008152509250505090565b60606102436102ce565b60006102523660048184610683565b81019061025f91906106c9565b90506101df81610305565b60606102746102ce565b600061027e610169565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102b46102ce565b600061027e61035c565b6101676102c961035c565b61036b565b341561016757600080fd5b6102e28361038f565b6000825111806102ef5750805b15610300576102fe83836103cf565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61032e610169565b604080516001600160a01b03928316815291841660208301520160405180910390a1610359816103fb565b50565b60006103666104a4565b905090565b3660008037600080366000845af43d6000803e80801561038a573d6000f35b3d6000fd5b610398816104cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f4838360405180606001604052806027815260200161083060279139610560565b9392505050565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61018d565b6001600160a01b0381163b6105395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161014e565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610483565b6060600080856001600160a01b03168560405161057d91906107e0565b600060405180830381855af49150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105bd565b606091505b50915091506105ce868383876105d8565b9695505050505050565b60608315610647578251600003610640576001600160a01b0385163b6106405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b5081610651565b6106518383610659565b949350505050565b8151156106695781518083602001fd5b8060405162461bcd60e51b815260040161014e91906107fc565b6000808585111561069357600080fd5b838611156106a057600080fd5b5050820193919092039150565b80356001600160a01b03811681146106c457600080fd5b919050565b6000602082840312156106db57600080fd5b6103f4826106ad565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561070d57600080fd5b610716836106ad565b9150602083013567ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b813581811115610759576107596106e4565b604051601f8201601f19908116603f01168101908382118183101715610781576107816106e4565b8160405282815288602084870101111561079a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600082516107f28184602087016107bc565b9190910192915050565b602081526000825180602084015261081b8160408501602087016107bc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x1F PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15F JUMPI PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH4 0x64D3180D PUSH1 0xE1 SHL DUP2 ADD PUSH2 0x5A JUMPI PUSH2 0x53 PUSH2 0x19C JUMP JUMPDEST SWAP2 POP PUSH2 0x157 JUMP JUMPDEST PUSH4 0x587086BD PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x7A JUMPI PUSH2 0x53 PUSH2 0x1F3 JUMP JUMPDEST PUSH4 0x70D7C69 PUSH1 0xE4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x9A JUMPI PUSH2 0x53 PUSH2 0x239 JUMP JUMPDEST PUSH3 0x1EB96F PUSH1 0xE6 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xB9 JUMPI PUSH2 0x53 PUSH2 0x26A JUMP JUMPDEST PUSH4 0xA39F25E5 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xD9 JUMPI PUSH2 0x53 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD RETURN JUMPDEST PUSH2 0x167 PUSH2 0x2BE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A6 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x2D9 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x222 DUP3 DUP3 PUSH1 0x1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x243 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x274 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B4 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x35C JUMP JUMPDEST PUSH2 0x167 PUSH2 0x2C9 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2EF JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FE DUP4 DUP4 PUSH2 0x3CF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x32E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x359 DUP2 PUSH2 0x3FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x38A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x830 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x560 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x483 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5CE DUP7 DUP4 DUP4 DUP8 PUSH2 0x5D8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x647 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x640 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST POP DUP2 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x651 DUP4 DUP4 PUSH2 0x659 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x669 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x6AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6AD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x759 JUMPI PUSH2 0x759 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0x6E4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7F2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x81B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A164 PUSH20 0x6F6C6343000816000A0000000000000000000000 ","sourceMap":"3389:4951:12:-:0;;;;;;2898:11:9;:9;:11::i;:::-;3389:4951:12;;2675:11:9;4407:1102:12;4482:11;:9;:11::i;:::-;-1:-1:-1;;;;;4468:25:12;:10;:25;4464:1039;;4509:16;-1:-1:-1;;;;;;4539:15:12;4557:7;;-1:-1:-1;;;4582:59:12;;4578:779;;4667:20;:18;:20::i;:::-;4661:26;;4578:779;;;-1:-1:-1;;;;;;;;;4712:66:12;;;4708:649;;4804:27;:25;:27::i;4708:649::-;-1:-1:-1;;;;;;;;;4856:61:12;;;4852:505;;4943:22;:20;:22::i;4852:505::-;-1:-1:-1;;;;;;;;;4990:55:12;;;4986:371;;5071:16;:14;:16::i;4986:371::-;-1:-1:-1;;;;;;;;;5112:64:12;;;5108:249;;5202:25;:23;:25::i;5108:249::-;5266:76;;-1:-1:-1;;;5266:76:12;;216:2:21;5266:76:12;;;198:21:21;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:34;345:18;;;338:62;-1:-1:-1;;;416:19:21;;;409:33;459:19;;5266:76:12;;;;;;;;5108:249;5426:3;5420:10;5413:4;5408:3;5404:14;5397:34;4464:1039;5475:17;:15;:17::i;:::-;4407:1102::o;3784:122:8:-;3828:7;3656:66;3854:39;:45;-1:-1:-1;;;;;3854:45:8;;3784:122;-1:-1:-1;3784:122:8:o;6985:255:12:-;7032:12;7056:19;:17;:19::i;:::-;7086:25;7125:12;:8;7134:1;7125:8;7086:25;7125:12;:::i;:::-;7114:35;;;;;;;:::i;:::-;7086:63;;7159:54;7177:17;7196:9;;;;;;;;;;;;7207:5;7159:17;:54::i;:::-;-1:-1:-1;;7224:9:12;;;;;;;;;-1:-1:-1;7224:9:12;;;6985:255::o;7524:254::-;7578:12;7603:25;;7662:12;:8;7671:1;7662:8;7603:25;7662:12;:::i;:::-;7651:42;;;;;;;:::i;:::-;7602:91;;;;7703:48;7721:17;7740:4;7746;7703:17;:48::i;:::-;7762:9;;;;;;;;;;;;;;;;7524:254;:::o;6694:216::-;6743:12;6767:19;:17;:19::i;:::-;6797:16;6827:12;:8;6836:1;6827:8;6797:16;6827:12;:::i;:::-;6816:35;;;;;;;:::i;:::-;6797:54;;6861:22;6874:8;6861:12;:22::i;5860:165::-;5903:12;5927:19;:17;:19::i;:::-;5957:13;5973:11;:9;:11::i;:::-;6001:17;;;-1:-1:-1;;;;;2530:32:21;;6001:17:12;;;2512:51:21;5957:27:12;;-1:-1:-1;2485:18:21;6001:17:12;;;;;;;;;;;;5994:24;;;5860:165;:::o;6385:198::-;6437:12;6461:19;:17;:19::i;:::-;6491:22;6516:17;:15;:17::i;2322:110:9:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;8261:77:12:-;8316:9;:14;8308:23;;;;;2057:265:8;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2204:112;2057:265;;;:::o;4300:135::-;4364:35;4377:11;:9;:11::i;:::-;4364:35;;;-1:-1:-1;;;;;2804:15:21;;;2786:34;;2856:15;;;2851:2;2836:18;;2829:43;2721:18;4364:35:8;;;;;;;4409:19;4419:8;4409:9;:19::i;:::-;4300:135;:::o;1148:140:7:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;948:895:9:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1771:152:8;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:8;;;;;;;;1771:152;:::o;6674:198:13:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:13:o;3988:201:8:-;-1:-1:-1;;;;;4051:22:8;;4043:73;;;;-1:-1:-1;;;4043:73:8;;3085:2:21;4043:73:8;;;3067:21:21;3124:2;3104:18;;;3097:30;3163:34;3143:18;;;3136:62;-1:-1:-1;;;3214:18:21;;;3207:36;3260:19;;4043:73:8;2883:402:21;4043:73:8;4174:8;3656:66;4126:39;:56;;-1:-1:-1;;;;;;4126:56:8;-1:-1:-1;;;;;4126:56:8;;;;;;;;;;-1:-1:-1;3988:201:8:o;1175:140::-;1228:7;1030:66;1254:48;1859:190:15;1406:259:8;-1:-1:-1;;;;;1702:19:13;;;1479:95:8;;;;-1:-1:-1;;;1479:95:8;;3492:2:21;1479:95:8;;;3474:21:21;3531:2;3511:18;;;3504:30;3570:34;3550:18;;;3543:62;-1:-1:-1;;;3621:18:21;;;3614:43;3674:19;;1479:95:8;3290:409:21;1479:95:8;1641:17;1030:66;1584:48;1859:190:15;7058:325:13;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:13;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:13:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:13;;;8113:60;;;;-1:-1:-1;;;8113:60:13;;4453:2:21;8113:60:13;;;4435:21:21;4492:2;4472:18;;;4465:30;4531:31;4511:18;;;4504:59;4580:18;;8113:60:13;4251:353:21;8113:60:13;-1:-1:-1;8208:10:13;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:13;;;;;;;;:::i;489:331:21:-;594:9;605;647:8;635:10;632:24;629:44;;;669:1;666;659:12;629:44;698:6;688:8;685:20;682:40;;;718:1;715;708:12;682:40;-1:-1:-1;;744:23:21;;;789:25;;;;;-1:-1:-1;489:331:21:o;825:181::-;901:20;;-1:-1:-1;;;;;950:31:21;;940:42;;930:70;;996:1;993;986:12;930:70;825:181;;;:::o;1011:202::-;1078:6;1131:2;1119:9;1110:7;1106:23;1102:32;1099:52;;;1147:1;1144;1137:12;1099:52;1170:37;1197:9;1170:37;:::i;1218:127::-;1279:10;1274:3;1270:20;1267:1;1260:31;1310:4;1307:1;1300:15;1334:4;1331:1;1324:15;1350:1011;1435:6;1443;1496:2;1484:9;1475:7;1471:23;1467:32;1464:52;;;1512:1;1509;1502:12;1464:52;1535:37;1562:9;1535:37;:::i;:::-;1525:47;;1623:2;1612:9;1608:18;1595:32;1646:18;1687:2;1679:6;1676:14;1673:34;;;1703:1;1700;1693:12;1673:34;1741:6;1730:9;1726:22;1716:32;;1786:7;1779:4;1775:2;1771:13;1767:27;1757:55;;1808:1;1805;1798:12;1757:55;1844:2;1831:16;1866:2;1862;1859:10;1856:36;;;1872:18;;:::i;:::-;1947:2;1941:9;1915:2;2001:13;;-1:-1:-1;;1997:22:21;;;2021:2;1993:31;1989:40;1977:53;;;2045:18;;;2065:22;;;2042:46;2039:72;;;2091:18;;:::i;:::-;2131:10;2127:2;2120:22;2166:2;2158:6;2151:18;2206:7;2201:2;2196;2192;2188:11;2184:20;2181:33;2178:53;;;2227:1;2224;2217:12;2178:53;2283:2;2278;2274;2270:11;2265:2;2257:6;2253:15;2240:46;2328:1;2323:2;2318;2310:6;2306:15;2302:24;2295:35;2349:6;2339:16;;;;;;;1350:1011;;;;;:::o;3704:250::-;3789:1;3799:113;3813:6;3810:1;3807:13;3799:113;;;3889:11;;;3883:18;3870:11;;;3863:39;3835:2;3828:10;3799:113;;;-1:-1:-1;;3946:1:21;3928:16;;3921:27;3704:250::o;3959:287::-;4088:3;4126:6;4120:13;4142:66;4201:6;4196:3;4189:4;4181:6;4177:17;4142:66;:::i;:::-;4224:16;;;;;3959:287;-1:-1:-1;;3959:287:21:o;4609:396::-;4758:2;4747:9;4740:21;4721:4;4790:6;4784:13;4833:6;4828:2;4817:9;4813:18;4806:34;4849:79;4921:6;4916:2;4905:9;4901:18;4896:2;4888:6;4884:15;4849:79;:::i;:::-;4989:2;4968:15;-1:-1:-1;;4964:29:21;4949:45;;;;4996:2;4945:54;;4609:396;-1:-1:-1;;4609:396:21:o"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000816000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"194:9169:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000816000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"194:9169:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000816000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1420:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000816000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1420:2685:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/MonadSwapAggregator.sol":{"IBeanRouter":{"abi":[{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAmountsOut(uint256,address[])":"d06ca61f","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregator.sol\":\"IBeanRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MonadSwapAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregator {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n\\n    // Constants\\n    IBeanRouter public constant BEAN_ROUTER = IBeanRouter(0xCa810D095e90Daae6e867c19DF6D9A8C56db2c89);\\n    address public constant WMON = 0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701;\\n    address private constant NATIVE = address(0);\\n\\n    // Function untuk mendapatkan estimasi output\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path;\\n\\n        // Handle native MON\\n        if (fromToken == NATIVE) fromToken = WMON;\\n        if (toToken == NATIVE) toToken = WMON;\\n\\n        if (fromToken == WMON || toToken == WMON) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            // Jika bukan WMON, gunakan WMON sebagai perantara\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = WMON;\\n            path[2] = toToken;\\n        }\\n\\n        uint256[] memory amounts = BEAN_ROUTER.getAmountsOut(amountIn, path);\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    // Main swap function\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        // Check input\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        // Handle native MON swaps\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = WMON;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = WMON;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\\n\\n        // Setup path\\n        address[] memory path;\\n        if (fromToken == WMON || toToken == WMON) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = WMON;\\n            path[2] = toToken;\\n        }\\n\\n        // Execute swap\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Function untuk menerima MON\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x4a1f9542812d86a4674f91c47ef3a9e8ece91e8c5056c94f4f8787da0d1b0ebf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregator.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MonadSwapAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregator {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n\\n    // Constants\\n    IBeanRouter public constant BEAN_ROUTER = IBeanRouter(0xCa810D095e90Daae6e867c19DF6D9A8C56db2c89);\\n    address public constant WMON = 0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701;\\n    address private constant NATIVE = address(0);\\n\\n    // Function untuk mendapatkan estimasi output\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path;\\n\\n        // Handle native MON\\n        if (fromToken == NATIVE) fromToken = WMON;\\n        if (toToken == NATIVE) toToken = WMON;\\n\\n        if (fromToken == WMON || toToken == WMON) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            // Jika bukan WMON, gunakan WMON sebagai perantara\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = WMON;\\n            path[2] = toToken;\\n        }\\n\\n        uint256[] memory amounts = BEAN_ROUTER.getAmountsOut(amountIn, path);\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    // Main swap function\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        // Check input\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        // Handle native MON swaps\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = WMON;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = WMON;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\\n\\n        // Setup path\\n        address[] memory path;\\n        if (fromToken == WMON || toToken == WMON) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = WMON;\\n            path[2] = toToken;\\n        }\\n\\n        // Execute swap\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Function untuk menerima MON\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x4a1f9542812d86a4674f91c47ef3a9e8ece91e8c5056c94f4f8787da0d1b0ebf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"MonadSwapAggregator":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"TokenSwapped","type":"event"},{"inputs":[],"name":"BEAN_ROUTER","outputs":[{"internalType":"contract IBeanRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WMON","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1072 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0xB9AADE1C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xF1435D29 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xFE029156 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x127 JUMPI PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 SWAP5 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14D JUMPI PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 SWAP4 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ DUP1 PUSH2 0x194 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ JUMPDEST ISZERO PUSH2 0x226 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI PUSH2 0x1CD PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x201 JUMPI PUSH2 0x201 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x25B JUMPI PUSH2 0x25B PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A3 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2D7 JUMPI PUSH2 0x2D7 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x334 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x379 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x39A JUMPI PUSH2 0x39A PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4AB JUMPI DUP3 CALLVALUE EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081353D388185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x4A4 DUP5 DUP5 DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4C4 JUMPI PUSH2 0x4A4 DUP6 DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x4A4 DUP6 DUP6 DUP6 DUP6 PUSH2 0x98C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x525 JUMPI PUSH2 0x525 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH4 0x7FF36AB5 DUP7 DUP7 DUP6 CALLER PUSH2 0x59D TIMESTAMP PUSH2 0x4B0 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x603 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x616 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI PUSH2 0x626 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x689 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x813 JUMPI PUSH2 0x813 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH4 0x18CBAFE5 DUP7 DUP7 DUP6 CALLER PUSH2 0x89F TIMESTAMP PUSH2 0x4B0 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x906 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x689 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ DUP1 PUSH2 0xB18 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ JUMPDEST ISZERO PUSH2 0xBAA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB51 JUMPI PUSH2 0xB51 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB85 JUMPI PUSH2 0xB85 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBDF JUMPI PUSH2 0xBDF PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC27 JUMPI PUSH2 0xC27 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xC5B JUMPI PUSH2 0xC5B PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH4 0x38ED1739 DUP7 DUP7 DUP6 CALLER PUSH2 0xCA8 TIMESTAMP PUSH2 0x4B0 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD0F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD32 JUMPI PUSH2 0xD32 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD94 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE1 DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEF PUSH1 0x20 DUP6 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1E DUP6 PUSH2 0xDA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xE2C PUSH1 0x20 DUP7 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE82 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4D0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH2 0xE41 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF41 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xF7D JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xF64 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB2 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB2 PUSH2 0xF89 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xFE4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1048 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1214:5159:16:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BEAN_ROUTER_2258":{"entryPoint":null,"id":2258,"parameterSlots":0,"returnSlots":0},"@WMON_2261":{"entryPoint":null,"id":2261,"parameterSlots":0,"returnSlots":0},"@_2760":{"entryPoint":null,"id":2760,"parameterSlots":0,"returnSlots":0},"@_swapMonForTokens_2515":{"entryPoint":1240,"id":2515,"parameterSlots":3,"returnSlots":1},"@_swapTokensForMon_2615":{"entryPoint":1691,"id":2615,"parameterSlots":3,"returnSlots":1},"@_swapTokens_2756":{"entryPoint":2444,"id":2756,"parameterSlots":4,"returnSlots":1},"@getAmountOut_2375":{"entryPoint":253,"id":2375,"parameterSlots":3,"returnSlots":1},"@swap_2441":{"entryPoint":941,"id":2441,"parameterSlots":4,"returnSlots":1},"abi_decode_address":{"entryPoint":3495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3523,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":3583,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":3787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":3693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IBeanRouter_$2240__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3762,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":4043,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":4137,"id":null,"parameterSlots":6,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4024,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3999,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3977,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3671,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3649,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7781:21","nodeType":"YulBlock","src":"0:7781:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"63:124:21","nodeType":"YulBlock","src":"63:124:21","statements":[{"nativeSrc":"73:29:21","nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:21","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:21","nodeType":"YulIdentifier","src":"82:12:21"},"nativeSrc":"82:20:21","nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nativeSrc":"73:5:21","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nativeSrc":"165:16:21","nodeType":"YulBlock","src":"165:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:21","nodeType":"YulLiteral","src":"174:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:21","nodeType":"YulLiteral","src":"177:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:21","nodeType":"YulIdentifier","src":"167:6:21"},"nativeSrc":"167:12:21","nodeType":"YulFunctionCall","src":"167:12:21"},"nativeSrc":"167:12:21","nodeType":"YulExpressionStatement","src":"167:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:21","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nativeSrc":"135:5:21","nodeType":"YulIdentifier","src":"135:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:21","nodeType":"YulLiteral","src":"150:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:21","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:21","nodeType":"YulIdentifier","src":"146:3:21"},"nativeSrc":"146:11:21","nodeType":"YulFunctionCall","src":"146:11:21"},{"kind":"number","nativeSrc":"159:1:21","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:21","nodeType":"YulIdentifier","src":"142:3:21"},"nativeSrc":"142:19:21","nodeType":"YulFunctionCall","src":"142:19:21"}],"functionName":{"name":"and","nativeSrc":"131:3:21","nodeType":"YulIdentifier","src":"131:3:21"},"nativeSrc":"131:31:21","nodeType":"YulFunctionCall","src":"131:31:21"}],"functionName":{"name":"eq","nativeSrc":"121:2:21","nodeType":"YulIdentifier","src":"121:2:21"},"nativeSrc":"121:42:21","nodeType":"YulFunctionCall","src":"121:42:21"}],"functionName":{"name":"iszero","nativeSrc":"114:6:21","nodeType":"YulIdentifier","src":"114:6:21"},"nativeSrc":"114:50:21","nodeType":"YulFunctionCall","src":"114:50:21"},"nativeSrc":"111:70:21","nodeType":"YulIf","src":"111:70:21"}]},"name":"abi_decode_address","nativeSrc":"14:173:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:21","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:21","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:173:21"},{"body":{"nativeSrc":"296:224:21","nodeType":"YulBlock","src":"296:224:21","statements":[{"body":{"nativeSrc":"342:16:21","nodeType":"YulBlock","src":"342:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"351:1:21","nodeType":"YulLiteral","src":"351:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"354:1:21","nodeType":"YulLiteral","src":"354:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"344:6:21","nodeType":"YulIdentifier","src":"344:6:21"},"nativeSrc":"344:12:21","nodeType":"YulFunctionCall","src":"344:12:21"},"nativeSrc":"344:12:21","nodeType":"YulExpressionStatement","src":"344:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"317:7:21","nodeType":"YulIdentifier","src":"317:7:21"},{"name":"headStart","nativeSrc":"326:9:21","nodeType":"YulIdentifier","src":"326:9:21"}],"functionName":{"name":"sub","nativeSrc":"313:3:21","nodeType":"YulIdentifier","src":"313:3:21"},"nativeSrc":"313:23:21","nodeType":"YulFunctionCall","src":"313:23:21"},{"kind":"number","nativeSrc":"338:2:21","nodeType":"YulLiteral","src":"338:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"309:3:21","nodeType":"YulIdentifier","src":"309:3:21"},"nativeSrc":"309:32:21","nodeType":"YulFunctionCall","src":"309:32:21"},"nativeSrc":"306:52:21","nodeType":"YulIf","src":"306:52:21"},{"nativeSrc":"367:39:21","nodeType":"YulAssignment","src":"367:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"396:9:21","nodeType":"YulIdentifier","src":"396:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"377:18:21","nodeType":"YulIdentifier","src":"377:18:21"},"nativeSrc":"377:29:21","nodeType":"YulFunctionCall","src":"377:29:21"},"variableNames":[{"name":"value0","nativeSrc":"367:6:21","nodeType":"YulIdentifier","src":"367:6:21"}]},{"nativeSrc":"415:48:21","nodeType":"YulAssignment","src":"415:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"448:9:21","nodeType":"YulIdentifier","src":"448:9:21"},{"kind":"number","nativeSrc":"459:2:21","nodeType":"YulLiteral","src":"459:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"444:3:21","nodeType":"YulIdentifier","src":"444:3:21"},"nativeSrc":"444:18:21","nodeType":"YulFunctionCall","src":"444:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"425:18:21","nodeType":"YulIdentifier","src":"425:18:21"},"nativeSrc":"425:38:21","nodeType":"YulFunctionCall","src":"425:38:21"},"variableNames":[{"name":"value1","nativeSrc":"415:6:21","nodeType":"YulIdentifier","src":"415:6:21"}]},{"nativeSrc":"472:42:21","nodeType":"YulAssignment","src":"472:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"499:9:21","nodeType":"YulIdentifier","src":"499:9:21"},{"kind":"number","nativeSrc":"510:2:21","nodeType":"YulLiteral","src":"510:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"495:3:21","nodeType":"YulIdentifier","src":"495:3:21"},"nativeSrc":"495:18:21","nodeType":"YulFunctionCall","src":"495:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"482:12:21","nodeType":"YulIdentifier","src":"482:12:21"},"nativeSrc":"482:32:21","nodeType":"YulFunctionCall","src":"482:32:21"},"variableNames":[{"name":"value2","nativeSrc":"472:6:21","nodeType":"YulIdentifier","src":"472:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"192:328:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"246:9:21","nodeType":"YulTypedName","src":"246:9:21","type":""},{"name":"dataEnd","nativeSrc":"257:7:21","nodeType":"YulTypedName","src":"257:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"269:6:21","nodeType":"YulTypedName","src":"269:6:21","type":""},{"name":"value1","nativeSrc":"277:6:21","nodeType":"YulTypedName","src":"277:6:21","type":""},{"name":"value2","nativeSrc":"285:6:21","nodeType":"YulTypedName","src":"285:6:21","type":""}],"src":"192:328:21"},{"body":{"nativeSrc":"626:76:21","nodeType":"YulBlock","src":"626:76:21","statements":[{"nativeSrc":"636:26:21","nodeType":"YulAssignment","src":"636:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"648:9:21","nodeType":"YulIdentifier","src":"648:9:21"},{"kind":"number","nativeSrc":"659:2:21","nodeType":"YulLiteral","src":"659:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"644:3:21","nodeType":"YulIdentifier","src":"644:3:21"},"nativeSrc":"644:18:21","nodeType":"YulFunctionCall","src":"644:18:21"},"variableNames":[{"name":"tail","nativeSrc":"636:4:21","nodeType":"YulIdentifier","src":"636:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"678:9:21","nodeType":"YulIdentifier","src":"678:9:21"},{"name":"value0","nativeSrc":"689:6:21","nodeType":"YulIdentifier","src":"689:6:21"}],"functionName":{"name":"mstore","nativeSrc":"671:6:21","nodeType":"YulIdentifier","src":"671:6:21"},"nativeSrc":"671:25:21","nodeType":"YulFunctionCall","src":"671:25:21"},"nativeSrc":"671:25:21","nodeType":"YulExpressionStatement","src":"671:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"525:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"595:9:21","nodeType":"YulTypedName","src":"595:9:21","type":""},{"name":"value0","nativeSrc":"606:6:21","nodeType":"YulTypedName","src":"606:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"617:4:21","nodeType":"YulTypedName","src":"617:4:21","type":""}],"src":"525:177:21"},{"body":{"nativeSrc":"828:102:21","nodeType":"YulBlock","src":"828:102:21","statements":[{"nativeSrc":"838:26:21","nodeType":"YulAssignment","src":"838:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"850:9:21","nodeType":"YulIdentifier","src":"850:9:21"},{"kind":"number","nativeSrc":"861:2:21","nodeType":"YulLiteral","src":"861:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"846:3:21","nodeType":"YulIdentifier","src":"846:3:21"},"nativeSrc":"846:18:21","nodeType":"YulFunctionCall","src":"846:18:21"},"variableNames":[{"name":"tail","nativeSrc":"838:4:21","nodeType":"YulIdentifier","src":"838:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"880:9:21","nodeType":"YulIdentifier","src":"880:9:21"},{"arguments":[{"name":"value0","nativeSrc":"895:6:21","nodeType":"YulIdentifier","src":"895:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"911:3:21","nodeType":"YulLiteral","src":"911:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"916:1:21","nodeType":"YulLiteral","src":"916:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"907:3:21","nodeType":"YulIdentifier","src":"907:3:21"},"nativeSrc":"907:11:21","nodeType":"YulFunctionCall","src":"907:11:21"},{"kind":"number","nativeSrc":"920:1:21","nodeType":"YulLiteral","src":"920:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"903:3:21","nodeType":"YulIdentifier","src":"903:3:21"},"nativeSrc":"903:19:21","nodeType":"YulFunctionCall","src":"903:19:21"}],"functionName":{"name":"and","nativeSrc":"891:3:21","nodeType":"YulIdentifier","src":"891:3:21"},"nativeSrc":"891:32:21","nodeType":"YulFunctionCall","src":"891:32:21"}],"functionName":{"name":"mstore","nativeSrc":"873:6:21","nodeType":"YulIdentifier","src":"873:6:21"},"nativeSrc":"873:51:21","nodeType":"YulFunctionCall","src":"873:51:21"},"nativeSrc":"873:51:21","nodeType":"YulExpressionStatement","src":"873:51:21"}]},"name":"abi_encode_tuple_t_contract$_IBeanRouter_$2240__to_t_address__fromStack_reversed","nativeSrc":"707:223:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"797:9:21","nodeType":"YulTypedName","src":"797:9:21","type":""},{"name":"value0","nativeSrc":"808:6:21","nodeType":"YulTypedName","src":"808:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"819:4:21","nodeType":"YulTypedName","src":"819:4:21","type":""}],"src":"707:223:21"},{"body":{"nativeSrc":"1036:102:21","nodeType":"YulBlock","src":"1036:102:21","statements":[{"nativeSrc":"1046:26:21","nodeType":"YulAssignment","src":"1046:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1058:9:21","nodeType":"YulIdentifier","src":"1058:9:21"},{"kind":"number","nativeSrc":"1069:2:21","nodeType":"YulLiteral","src":"1069:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1054:3:21","nodeType":"YulIdentifier","src":"1054:3:21"},"nativeSrc":"1054:18:21","nodeType":"YulFunctionCall","src":"1054:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1046:4:21","nodeType":"YulIdentifier","src":"1046:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1088:9:21","nodeType":"YulIdentifier","src":"1088:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1103:6:21","nodeType":"YulIdentifier","src":"1103:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1119:3:21","nodeType":"YulLiteral","src":"1119:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1124:1:21","nodeType":"YulLiteral","src":"1124:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1115:3:21","nodeType":"YulIdentifier","src":"1115:3:21"},"nativeSrc":"1115:11:21","nodeType":"YulFunctionCall","src":"1115:11:21"},{"kind":"number","nativeSrc":"1128:1:21","nodeType":"YulLiteral","src":"1128:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1111:3:21","nodeType":"YulIdentifier","src":"1111:3:21"},"nativeSrc":"1111:19:21","nodeType":"YulFunctionCall","src":"1111:19:21"}],"functionName":{"name":"and","nativeSrc":"1099:3:21","nodeType":"YulIdentifier","src":"1099:3:21"},"nativeSrc":"1099:32:21","nodeType":"YulFunctionCall","src":"1099:32:21"}],"functionName":{"name":"mstore","nativeSrc":"1081:6:21","nodeType":"YulIdentifier","src":"1081:6:21"},"nativeSrc":"1081:51:21","nodeType":"YulFunctionCall","src":"1081:51:21"},"nativeSrc":"1081:51:21","nodeType":"YulExpressionStatement","src":"1081:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"935:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1005:9:21","nodeType":"YulTypedName","src":"1005:9:21","type":""},{"name":"value0","nativeSrc":"1016:6:21","nodeType":"YulTypedName","src":"1016:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1027:4:21","nodeType":"YulTypedName","src":"1027:4:21","type":""}],"src":"935:203:21"},{"body":{"nativeSrc":"1264:276:21","nodeType":"YulBlock","src":"1264:276:21","statements":[{"body":{"nativeSrc":"1311:16:21","nodeType":"YulBlock","src":"1311:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1320:1:21","nodeType":"YulLiteral","src":"1320:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1323:1:21","nodeType":"YulLiteral","src":"1323:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1313:6:21","nodeType":"YulIdentifier","src":"1313:6:21"},"nativeSrc":"1313:12:21","nodeType":"YulFunctionCall","src":"1313:12:21"},"nativeSrc":"1313:12:21","nodeType":"YulExpressionStatement","src":"1313:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1285:7:21","nodeType":"YulIdentifier","src":"1285:7:21"},{"name":"headStart","nativeSrc":"1294:9:21","nodeType":"YulIdentifier","src":"1294:9:21"}],"functionName":{"name":"sub","nativeSrc":"1281:3:21","nodeType":"YulIdentifier","src":"1281:3:21"},"nativeSrc":"1281:23:21","nodeType":"YulFunctionCall","src":"1281:23:21"},{"kind":"number","nativeSrc":"1306:3:21","nodeType":"YulLiteral","src":"1306:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1277:3:21","nodeType":"YulIdentifier","src":"1277:3:21"},"nativeSrc":"1277:33:21","nodeType":"YulFunctionCall","src":"1277:33:21"},"nativeSrc":"1274:53:21","nodeType":"YulIf","src":"1274:53:21"},{"nativeSrc":"1336:39:21","nodeType":"YulAssignment","src":"1336:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1365:9:21","nodeType":"YulIdentifier","src":"1365:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1346:18:21","nodeType":"YulIdentifier","src":"1346:18:21"},"nativeSrc":"1346:29:21","nodeType":"YulFunctionCall","src":"1346:29:21"},"variableNames":[{"name":"value0","nativeSrc":"1336:6:21","nodeType":"YulIdentifier","src":"1336:6:21"}]},{"nativeSrc":"1384:48:21","nodeType":"YulAssignment","src":"1384:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1417:9:21","nodeType":"YulIdentifier","src":"1417:9:21"},{"kind":"number","nativeSrc":"1428:2:21","nodeType":"YulLiteral","src":"1428:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1413:3:21","nodeType":"YulIdentifier","src":"1413:3:21"},"nativeSrc":"1413:18:21","nodeType":"YulFunctionCall","src":"1413:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1394:18:21","nodeType":"YulIdentifier","src":"1394:18:21"},"nativeSrc":"1394:38:21","nodeType":"YulFunctionCall","src":"1394:38:21"},"variableNames":[{"name":"value1","nativeSrc":"1384:6:21","nodeType":"YulIdentifier","src":"1384:6:21"}]},{"nativeSrc":"1441:42:21","nodeType":"YulAssignment","src":"1441:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1468:9:21","nodeType":"YulIdentifier","src":"1468:9:21"},{"kind":"number","nativeSrc":"1479:2:21","nodeType":"YulLiteral","src":"1479:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1464:3:21","nodeType":"YulIdentifier","src":"1464:3:21"},"nativeSrc":"1464:18:21","nodeType":"YulFunctionCall","src":"1464:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1451:12:21","nodeType":"YulIdentifier","src":"1451:12:21"},"nativeSrc":"1451:32:21","nodeType":"YulFunctionCall","src":"1451:32:21"},"variableNames":[{"name":"value2","nativeSrc":"1441:6:21","nodeType":"YulIdentifier","src":"1441:6:21"}]},{"nativeSrc":"1492:42:21","nodeType":"YulAssignment","src":"1492:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1519:9:21","nodeType":"YulIdentifier","src":"1519:9:21"},{"kind":"number","nativeSrc":"1530:2:21","nodeType":"YulLiteral","src":"1530:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1515:3:21","nodeType":"YulIdentifier","src":"1515:3:21"},"nativeSrc":"1515:18:21","nodeType":"YulFunctionCall","src":"1515:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1502:12:21","nodeType":"YulIdentifier","src":"1502:12:21"},"nativeSrc":"1502:32:21","nodeType":"YulFunctionCall","src":"1502:32:21"},"variableNames":[{"name":"value3","nativeSrc":"1492:6:21","nodeType":"YulIdentifier","src":"1492:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nativeSrc":"1143:397:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1206:9:21","nodeType":"YulTypedName","src":"1206:9:21","type":""},{"name":"dataEnd","nativeSrc":"1217:7:21","nodeType":"YulTypedName","src":"1217:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1229:6:21","nodeType":"YulTypedName","src":"1229:6:21","type":""},{"name":"value1","nativeSrc":"1237:6:21","nodeType":"YulTypedName","src":"1237:6:21","type":""},{"name":"value2","nativeSrc":"1245:6:21","nodeType":"YulTypedName","src":"1245:6:21","type":""},{"name":"value3","nativeSrc":"1253:6:21","nodeType":"YulTypedName","src":"1253:6:21","type":""}],"src":"1143:397:21"},{"body":{"nativeSrc":"1577:95:21","nodeType":"YulBlock","src":"1577:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1594:1:21","nodeType":"YulLiteral","src":"1594:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1601:3:21","nodeType":"YulLiteral","src":"1601:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"1606:10:21","nodeType":"YulLiteral","src":"1606:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1597:3:21","nodeType":"YulIdentifier","src":"1597:3:21"},"nativeSrc":"1597:20:21","nodeType":"YulFunctionCall","src":"1597:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1587:6:21","nodeType":"YulIdentifier","src":"1587:6:21"},"nativeSrc":"1587:31:21","nodeType":"YulFunctionCall","src":"1587:31:21"},"nativeSrc":"1587:31:21","nodeType":"YulExpressionStatement","src":"1587:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1634:1:21","nodeType":"YulLiteral","src":"1634:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1637:4:21","nodeType":"YulLiteral","src":"1637:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1627:6:21","nodeType":"YulIdentifier","src":"1627:6:21"},"nativeSrc":"1627:15:21","nodeType":"YulFunctionCall","src":"1627:15:21"},"nativeSrc":"1627:15:21","nodeType":"YulExpressionStatement","src":"1627:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1658:1:21","nodeType":"YulLiteral","src":"1658:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1661:4:21","nodeType":"YulLiteral","src":"1661:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1651:6:21","nodeType":"YulIdentifier","src":"1651:6:21"},"nativeSrc":"1651:15:21","nodeType":"YulFunctionCall","src":"1651:15:21"},"nativeSrc":"1651:15:21","nodeType":"YulExpressionStatement","src":"1651:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1545:127:21","nodeType":"YulFunctionDefinition","src":"1545:127:21"},{"body":{"nativeSrc":"1709:95:21","nodeType":"YulBlock","src":"1709:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1726:1:21","nodeType":"YulLiteral","src":"1726:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1733:3:21","nodeType":"YulLiteral","src":"1733:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"1738:10:21","nodeType":"YulLiteral","src":"1738:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1729:3:21","nodeType":"YulIdentifier","src":"1729:3:21"},"nativeSrc":"1729:20:21","nodeType":"YulFunctionCall","src":"1729:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1719:6:21","nodeType":"YulIdentifier","src":"1719:6:21"},"nativeSrc":"1719:31:21","nodeType":"YulFunctionCall","src":"1719:31:21"},"nativeSrc":"1719:31:21","nodeType":"YulExpressionStatement","src":"1719:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1766:1:21","nodeType":"YulLiteral","src":"1766:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1769:4:21","nodeType":"YulLiteral","src":"1769:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"1759:6:21","nodeType":"YulIdentifier","src":"1759:6:21"},"nativeSrc":"1759:15:21","nodeType":"YulFunctionCall","src":"1759:15:21"},"nativeSrc":"1759:15:21","nodeType":"YulExpressionStatement","src":"1759:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1790:1:21","nodeType":"YulLiteral","src":"1790:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1793:4:21","nodeType":"YulLiteral","src":"1793:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1783:6:21","nodeType":"YulIdentifier","src":"1783:6:21"},"nativeSrc":"1783:15:21","nodeType":"YulFunctionCall","src":"1783:15:21"},"nativeSrc":"1783:15:21","nodeType":"YulExpressionStatement","src":"1783:15:21"}]},"name":"panic_error_0x32","nativeSrc":"1677:127:21","nodeType":"YulFunctionDefinition","src":"1677:127:21"},{"body":{"nativeSrc":"1870:404:21","nodeType":"YulBlock","src":"1870:404:21","statements":[{"nativeSrc":"1880:26:21","nodeType":"YulVariableDeclaration","src":"1880:26:21","value":{"arguments":[{"name":"value","nativeSrc":"1900:5:21","nodeType":"YulIdentifier","src":"1900:5:21"}],"functionName":{"name":"mload","nativeSrc":"1894:5:21","nodeType":"YulIdentifier","src":"1894:5:21"},"nativeSrc":"1894:12:21","nodeType":"YulFunctionCall","src":"1894:12:21"},"variables":[{"name":"length","nativeSrc":"1884:6:21","nodeType":"YulTypedName","src":"1884:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1922:3:21","nodeType":"YulIdentifier","src":"1922:3:21"},{"name":"length","nativeSrc":"1927:6:21","nodeType":"YulIdentifier","src":"1927:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1915:6:21","nodeType":"YulIdentifier","src":"1915:6:21"},"nativeSrc":"1915:19:21","nodeType":"YulFunctionCall","src":"1915:19:21"},"nativeSrc":"1915:19:21","nodeType":"YulExpressionStatement","src":"1915:19:21"},{"nativeSrc":"1943:14:21","nodeType":"YulVariableDeclaration","src":"1943:14:21","value":{"kind":"number","nativeSrc":"1953:4:21","nodeType":"YulLiteral","src":"1953:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"1947:2:21","nodeType":"YulTypedName","src":"1947:2:21","type":""}]},{"nativeSrc":"1966:21:21","nodeType":"YulAssignment","src":"1966:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"1977:3:21","nodeType":"YulIdentifier","src":"1977:3:21"},{"kind":"number","nativeSrc":"1982:4:21","nodeType":"YulLiteral","src":"1982:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1973:3:21","nodeType":"YulIdentifier","src":"1973:3:21"},"nativeSrc":"1973:14:21","nodeType":"YulFunctionCall","src":"1973:14:21"},"variableNames":[{"name":"pos","nativeSrc":"1966:3:21","nodeType":"YulIdentifier","src":"1966:3:21"}]},{"nativeSrc":"1996:30:21","nodeType":"YulVariableDeclaration","src":"1996:30:21","value":{"arguments":[{"name":"value","nativeSrc":"2014:5:21","nodeType":"YulIdentifier","src":"2014:5:21"},{"kind":"number","nativeSrc":"2021:4:21","nodeType":"YulLiteral","src":"2021:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2010:3:21","nodeType":"YulIdentifier","src":"2010:3:21"},"nativeSrc":"2010:16:21","nodeType":"YulFunctionCall","src":"2010:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"2000:6:21","nodeType":"YulTypedName","src":"2000:6:21","type":""}]},{"nativeSrc":"2035:10:21","nodeType":"YulVariableDeclaration","src":"2035:10:21","value":{"kind":"number","nativeSrc":"2044:1:21","nodeType":"YulLiteral","src":"2044:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2039:1:21","nodeType":"YulTypedName","src":"2039:1:21","type":""}]},{"body":{"nativeSrc":"2103:146:21","nodeType":"YulBlock","src":"2103:146:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2124:3:21","nodeType":"YulIdentifier","src":"2124:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"2139:6:21","nodeType":"YulIdentifier","src":"2139:6:21"}],"functionName":{"name":"mload","nativeSrc":"2133:5:21","nodeType":"YulIdentifier","src":"2133:5:21"},"nativeSrc":"2133:13:21","nodeType":"YulFunctionCall","src":"2133:13:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2156:3:21","nodeType":"YulLiteral","src":"2156:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"2161:1:21","nodeType":"YulLiteral","src":"2161:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2152:3:21","nodeType":"YulIdentifier","src":"2152:3:21"},"nativeSrc":"2152:11:21","nodeType":"YulFunctionCall","src":"2152:11:21"},{"kind":"number","nativeSrc":"2165:1:21","nodeType":"YulLiteral","src":"2165:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2148:3:21","nodeType":"YulIdentifier","src":"2148:3:21"},"nativeSrc":"2148:19:21","nodeType":"YulFunctionCall","src":"2148:19:21"}],"functionName":{"name":"and","nativeSrc":"2129:3:21","nodeType":"YulIdentifier","src":"2129:3:21"},"nativeSrc":"2129:39:21","nodeType":"YulFunctionCall","src":"2129:39:21"}],"functionName":{"name":"mstore","nativeSrc":"2117:6:21","nodeType":"YulIdentifier","src":"2117:6:21"},"nativeSrc":"2117:52:21","nodeType":"YulFunctionCall","src":"2117:52:21"},"nativeSrc":"2117:52:21","nodeType":"YulExpressionStatement","src":"2117:52:21"},{"nativeSrc":"2182:19:21","nodeType":"YulAssignment","src":"2182:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"2193:3:21","nodeType":"YulIdentifier","src":"2193:3:21"},{"name":"_1","nativeSrc":"2198:2:21","nodeType":"YulIdentifier","src":"2198:2:21"}],"functionName":{"name":"add","nativeSrc":"2189:3:21","nodeType":"YulIdentifier","src":"2189:3:21"},"nativeSrc":"2189:12:21","nodeType":"YulFunctionCall","src":"2189:12:21"},"variableNames":[{"name":"pos","nativeSrc":"2182:3:21","nodeType":"YulIdentifier","src":"2182:3:21"}]},{"nativeSrc":"2214:25:21","nodeType":"YulAssignment","src":"2214:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"2228:6:21","nodeType":"YulIdentifier","src":"2228:6:21"},{"name":"_1","nativeSrc":"2236:2:21","nodeType":"YulIdentifier","src":"2236:2:21"}],"functionName":{"name":"add","nativeSrc":"2224:3:21","nodeType":"YulIdentifier","src":"2224:3:21"},"nativeSrc":"2224:15:21","nodeType":"YulFunctionCall","src":"2224:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"2214:6:21","nodeType":"YulIdentifier","src":"2214:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2065:1:21","nodeType":"YulIdentifier","src":"2065:1:21"},{"name":"length","nativeSrc":"2068:6:21","nodeType":"YulIdentifier","src":"2068:6:21"}],"functionName":{"name":"lt","nativeSrc":"2062:2:21","nodeType":"YulIdentifier","src":"2062:2:21"},"nativeSrc":"2062:13:21","nodeType":"YulFunctionCall","src":"2062:13:21"},"nativeSrc":"2054:195:21","nodeType":"YulForLoop","post":{"nativeSrc":"2076:18:21","nodeType":"YulBlock","src":"2076:18:21","statements":[{"nativeSrc":"2078:14:21","nodeType":"YulAssignment","src":"2078:14:21","value":{"arguments":[{"name":"i","nativeSrc":"2087:1:21","nodeType":"YulIdentifier","src":"2087:1:21"},{"kind":"number","nativeSrc":"2090:1:21","nodeType":"YulLiteral","src":"2090:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2083:3:21","nodeType":"YulIdentifier","src":"2083:3:21"},"nativeSrc":"2083:9:21","nodeType":"YulFunctionCall","src":"2083:9:21"},"variableNames":[{"name":"i","nativeSrc":"2078:1:21","nodeType":"YulIdentifier","src":"2078:1:21"}]}]},"pre":{"nativeSrc":"2058:3:21","nodeType":"YulBlock","src":"2058:3:21","statements":[]},"src":"2054:195:21"},{"nativeSrc":"2258:10:21","nodeType":"YulAssignment","src":"2258:10:21","value":{"name":"pos","nativeSrc":"2265:3:21","nodeType":"YulIdentifier","src":"2265:3:21"},"variableNames":[{"name":"end","nativeSrc":"2258:3:21","nodeType":"YulIdentifier","src":"2258:3:21"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"1809:465:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1847:5:21","nodeType":"YulTypedName","src":"1847:5:21","type":""},{"name":"pos","nativeSrc":"1854:3:21","nodeType":"YulTypedName","src":"1854:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1862:3:21","nodeType":"YulTypedName","src":"1862:3:21","type":""}],"src":"1809:465:21"},{"body":{"nativeSrc":"2458:153:21","nodeType":"YulBlock","src":"2458:153:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2475:9:21","nodeType":"YulIdentifier","src":"2475:9:21"},{"name":"value0","nativeSrc":"2486:6:21","nodeType":"YulIdentifier","src":"2486:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2468:6:21","nodeType":"YulIdentifier","src":"2468:6:21"},"nativeSrc":"2468:25:21","nodeType":"YulFunctionCall","src":"2468:25:21"},"nativeSrc":"2468:25:21","nodeType":"YulExpressionStatement","src":"2468:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2513:9:21","nodeType":"YulIdentifier","src":"2513:9:21"},{"kind":"number","nativeSrc":"2524:2:21","nodeType":"YulLiteral","src":"2524:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2509:3:21","nodeType":"YulIdentifier","src":"2509:3:21"},"nativeSrc":"2509:18:21","nodeType":"YulFunctionCall","src":"2509:18:21"},{"kind":"number","nativeSrc":"2529:2:21","nodeType":"YulLiteral","src":"2529:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"2502:6:21","nodeType":"YulIdentifier","src":"2502:6:21"},"nativeSrc":"2502:30:21","nodeType":"YulFunctionCall","src":"2502:30:21"},"nativeSrc":"2502:30:21","nodeType":"YulExpressionStatement","src":"2502:30:21"},{"nativeSrc":"2541:64:21","nodeType":"YulAssignment","src":"2541:64:21","value":{"arguments":[{"name":"value1","nativeSrc":"2578:6:21","nodeType":"YulIdentifier","src":"2578:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"2590:9:21","nodeType":"YulIdentifier","src":"2590:9:21"},{"kind":"number","nativeSrc":"2601:2:21","nodeType":"YulLiteral","src":"2601:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2586:3:21","nodeType":"YulIdentifier","src":"2586:3:21"},"nativeSrc":"2586:18:21","nodeType":"YulFunctionCall","src":"2586:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"2549:28:21","nodeType":"YulIdentifier","src":"2549:28:21"},"nativeSrc":"2549:56:21","nodeType":"YulFunctionCall","src":"2549:56:21"},"variableNames":[{"name":"tail","nativeSrc":"2541:4:21","nodeType":"YulIdentifier","src":"2541:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"2279:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2419:9:21","nodeType":"YulTypedName","src":"2419:9:21","type":""},{"name":"value1","nativeSrc":"2430:6:21","nodeType":"YulTypedName","src":"2430:6:21","type":""},{"name":"value0","nativeSrc":"2438:6:21","nodeType":"YulTypedName","src":"2438:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2449:4:21","nodeType":"YulTypedName","src":"2449:4:21","type":""}],"src":"2279:332:21"},{"body":{"nativeSrc":"2722:999:21","nodeType":"YulBlock","src":"2722:999:21","statements":[{"nativeSrc":"2732:12:21","nodeType":"YulVariableDeclaration","src":"2732:12:21","value":{"kind":"number","nativeSrc":"2742:2:21","nodeType":"YulLiteral","src":"2742:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"2736:2:21","nodeType":"YulTypedName","src":"2736:2:21","type":""}]},{"body":{"nativeSrc":"2789:16:21","nodeType":"YulBlock","src":"2789:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2798:1:21","nodeType":"YulLiteral","src":"2798:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2801:1:21","nodeType":"YulLiteral","src":"2801:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2791:6:21","nodeType":"YulIdentifier","src":"2791:6:21"},"nativeSrc":"2791:12:21","nodeType":"YulFunctionCall","src":"2791:12:21"},"nativeSrc":"2791:12:21","nodeType":"YulExpressionStatement","src":"2791:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2764:7:21","nodeType":"YulIdentifier","src":"2764:7:21"},{"name":"headStart","nativeSrc":"2773:9:21","nodeType":"YulIdentifier","src":"2773:9:21"}],"functionName":{"name":"sub","nativeSrc":"2760:3:21","nodeType":"YulIdentifier","src":"2760:3:21"},"nativeSrc":"2760:23:21","nodeType":"YulFunctionCall","src":"2760:23:21"},{"name":"_1","nativeSrc":"2785:2:21","nodeType":"YulIdentifier","src":"2785:2:21"}],"functionName":{"name":"slt","nativeSrc":"2756:3:21","nodeType":"YulIdentifier","src":"2756:3:21"},"nativeSrc":"2756:32:21","nodeType":"YulFunctionCall","src":"2756:32:21"},"nativeSrc":"2753:52:21","nodeType":"YulIf","src":"2753:52:21"},{"nativeSrc":"2814:30:21","nodeType":"YulVariableDeclaration","src":"2814:30:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2834:9:21","nodeType":"YulIdentifier","src":"2834:9:21"}],"functionName":{"name":"mload","nativeSrc":"2828:5:21","nodeType":"YulIdentifier","src":"2828:5:21"},"nativeSrc":"2828:16:21","nodeType":"YulFunctionCall","src":"2828:16:21"},"variables":[{"name":"offset","nativeSrc":"2818:6:21","nodeType":"YulTypedName","src":"2818:6:21","type":""}]},{"nativeSrc":"2853:28:21","nodeType":"YulVariableDeclaration","src":"2853:28:21","value":{"kind":"number","nativeSrc":"2863:18:21","nodeType":"YulLiteral","src":"2863:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"2857:2:21","nodeType":"YulTypedName","src":"2857:2:21","type":""}]},{"body":{"nativeSrc":"2908:16:21","nodeType":"YulBlock","src":"2908:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2917:1:21","nodeType":"YulLiteral","src":"2917:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2920:1:21","nodeType":"YulLiteral","src":"2920:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2910:6:21","nodeType":"YulIdentifier","src":"2910:6:21"},"nativeSrc":"2910:12:21","nodeType":"YulFunctionCall","src":"2910:12:21"},"nativeSrc":"2910:12:21","nodeType":"YulExpressionStatement","src":"2910:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2896:6:21","nodeType":"YulIdentifier","src":"2896:6:21"},{"name":"_2","nativeSrc":"2904:2:21","nodeType":"YulIdentifier","src":"2904:2:21"}],"functionName":{"name":"gt","nativeSrc":"2893:2:21","nodeType":"YulIdentifier","src":"2893:2:21"},"nativeSrc":"2893:14:21","nodeType":"YulFunctionCall","src":"2893:14:21"},"nativeSrc":"2890:34:21","nodeType":"YulIf","src":"2890:34:21"},{"nativeSrc":"2933:32:21","nodeType":"YulVariableDeclaration","src":"2933:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2947:9:21","nodeType":"YulIdentifier","src":"2947:9:21"},{"name":"offset","nativeSrc":"2958:6:21","nodeType":"YulIdentifier","src":"2958:6:21"}],"functionName":{"name":"add","nativeSrc":"2943:3:21","nodeType":"YulIdentifier","src":"2943:3:21"},"nativeSrc":"2943:22:21","nodeType":"YulFunctionCall","src":"2943:22:21"},"variables":[{"name":"_3","nativeSrc":"2937:2:21","nodeType":"YulTypedName","src":"2937:2:21","type":""}]},{"body":{"nativeSrc":"3013:16:21","nodeType":"YulBlock","src":"3013:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3022:1:21","nodeType":"YulLiteral","src":"3022:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3025:1:21","nodeType":"YulLiteral","src":"3025:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3015:6:21","nodeType":"YulIdentifier","src":"3015:6:21"},"nativeSrc":"3015:12:21","nodeType":"YulFunctionCall","src":"3015:12:21"},"nativeSrc":"3015:12:21","nodeType":"YulExpressionStatement","src":"3015:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2992:2:21","nodeType":"YulIdentifier","src":"2992:2:21"},{"kind":"number","nativeSrc":"2996:4:21","nodeType":"YulLiteral","src":"2996:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2988:3:21","nodeType":"YulIdentifier","src":"2988:3:21"},"nativeSrc":"2988:13:21","nodeType":"YulFunctionCall","src":"2988:13:21"},{"name":"dataEnd","nativeSrc":"3003:7:21","nodeType":"YulIdentifier","src":"3003:7:21"}],"functionName":{"name":"slt","nativeSrc":"2984:3:21","nodeType":"YulIdentifier","src":"2984:3:21"},"nativeSrc":"2984:27:21","nodeType":"YulFunctionCall","src":"2984:27:21"}],"functionName":{"name":"iszero","nativeSrc":"2977:6:21","nodeType":"YulIdentifier","src":"2977:6:21"},"nativeSrc":"2977:35:21","nodeType":"YulFunctionCall","src":"2977:35:21"},"nativeSrc":"2974:55:21","nodeType":"YulIf","src":"2974:55:21"},{"nativeSrc":"3038:19:21","nodeType":"YulVariableDeclaration","src":"3038:19:21","value":{"arguments":[{"name":"_3","nativeSrc":"3054:2:21","nodeType":"YulIdentifier","src":"3054:2:21"}],"functionName":{"name":"mload","nativeSrc":"3048:5:21","nodeType":"YulIdentifier","src":"3048:5:21"},"nativeSrc":"3048:9:21","nodeType":"YulFunctionCall","src":"3048:9:21"},"variables":[{"name":"_4","nativeSrc":"3042:2:21","nodeType":"YulTypedName","src":"3042:2:21","type":""}]},{"body":{"nativeSrc":"3080:22:21","nodeType":"YulBlock","src":"3080:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3082:16:21","nodeType":"YulIdentifier","src":"3082:16:21"},"nativeSrc":"3082:18:21","nodeType":"YulFunctionCall","src":"3082:18:21"},"nativeSrc":"3082:18:21","nodeType":"YulExpressionStatement","src":"3082:18:21"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"3072:2:21","nodeType":"YulIdentifier","src":"3072:2:21"},{"name":"_2","nativeSrc":"3076:2:21","nodeType":"YulIdentifier","src":"3076:2:21"}],"functionName":{"name":"gt","nativeSrc":"3069:2:21","nodeType":"YulIdentifier","src":"3069:2:21"},"nativeSrc":"3069:10:21","nodeType":"YulFunctionCall","src":"3069:10:21"},"nativeSrc":"3066:36:21","nodeType":"YulIf","src":"3066:36:21"},{"nativeSrc":"3111:20:21","nodeType":"YulVariableDeclaration","src":"3111:20:21","value":{"arguments":[{"kind":"number","nativeSrc":"3125:1:21","nodeType":"YulLiteral","src":"3125:1:21","type":"","value":"5"},{"name":"_4","nativeSrc":"3128:2:21","nodeType":"YulIdentifier","src":"3128:2:21"}],"functionName":{"name":"shl","nativeSrc":"3121:3:21","nodeType":"YulIdentifier","src":"3121:3:21"},"nativeSrc":"3121:10:21","nodeType":"YulFunctionCall","src":"3121:10:21"},"variables":[{"name":"_5","nativeSrc":"3115:2:21","nodeType":"YulTypedName","src":"3115:2:21","type":""}]},{"nativeSrc":"3140:23:21","nodeType":"YulVariableDeclaration","src":"3140:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"3160:2:21","nodeType":"YulLiteral","src":"3160:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3154:5:21","nodeType":"YulIdentifier","src":"3154:5:21"},"nativeSrc":"3154:9:21","nodeType":"YulFunctionCall","src":"3154:9:21"},"variables":[{"name":"memPtr","nativeSrc":"3144:6:21","nodeType":"YulTypedName","src":"3144:6:21","type":""}]},{"nativeSrc":"3172:56:21","nodeType":"YulVariableDeclaration","src":"3172:56:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"3194:6:21","nodeType":"YulIdentifier","src":"3194:6:21"},{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"3210:2:21","nodeType":"YulIdentifier","src":"3210:2:21"},{"kind":"number","nativeSrc":"3214:2:21","nodeType":"YulLiteral","src":"3214:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3206:3:21","nodeType":"YulIdentifier","src":"3206:3:21"},"nativeSrc":"3206:11:21","nodeType":"YulFunctionCall","src":"3206:11:21"},{"arguments":[{"kind":"number","nativeSrc":"3223:2:21","nodeType":"YulLiteral","src":"3223:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3219:3:21","nodeType":"YulIdentifier","src":"3219:3:21"},"nativeSrc":"3219:7:21","nodeType":"YulFunctionCall","src":"3219:7:21"}],"functionName":{"name":"and","nativeSrc":"3202:3:21","nodeType":"YulIdentifier","src":"3202:3:21"},"nativeSrc":"3202:25:21","nodeType":"YulFunctionCall","src":"3202:25:21"}],"functionName":{"name":"add","nativeSrc":"3190:3:21","nodeType":"YulIdentifier","src":"3190:3:21"},"nativeSrc":"3190:38:21","nodeType":"YulFunctionCall","src":"3190:38:21"},"variables":[{"name":"newFreePtr","nativeSrc":"3176:10:21","nodeType":"YulTypedName","src":"3176:10:21","type":""}]},{"body":{"nativeSrc":"3287:22:21","nodeType":"YulBlock","src":"3287:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3289:16:21","nodeType":"YulIdentifier","src":"3289:16:21"},"nativeSrc":"3289:18:21","nodeType":"YulFunctionCall","src":"3289:18:21"},"nativeSrc":"3289:18:21","nodeType":"YulExpressionStatement","src":"3289:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3246:10:21","nodeType":"YulIdentifier","src":"3246:10:21"},{"name":"_2","nativeSrc":"3258:2:21","nodeType":"YulIdentifier","src":"3258:2:21"}],"functionName":{"name":"gt","nativeSrc":"3243:2:21","nodeType":"YulIdentifier","src":"3243:2:21"},"nativeSrc":"3243:18:21","nodeType":"YulFunctionCall","src":"3243:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3266:10:21","nodeType":"YulIdentifier","src":"3266:10:21"},{"name":"memPtr","nativeSrc":"3278:6:21","nodeType":"YulIdentifier","src":"3278:6:21"}],"functionName":{"name":"lt","nativeSrc":"3263:2:21","nodeType":"YulIdentifier","src":"3263:2:21"},"nativeSrc":"3263:22:21","nodeType":"YulFunctionCall","src":"3263:22:21"}],"functionName":{"name":"or","nativeSrc":"3240:2:21","nodeType":"YulIdentifier","src":"3240:2:21"},"nativeSrc":"3240:46:21","nodeType":"YulFunctionCall","src":"3240:46:21"},"nativeSrc":"3237:72:21","nodeType":"YulIf","src":"3237:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3325:2:21","nodeType":"YulLiteral","src":"3325:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3329:10:21","nodeType":"YulIdentifier","src":"3329:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3318:6:21","nodeType":"YulIdentifier","src":"3318:6:21"},"nativeSrc":"3318:22:21","nodeType":"YulFunctionCall","src":"3318:22:21"},"nativeSrc":"3318:22:21","nodeType":"YulExpressionStatement","src":"3318:22:21"},{"nativeSrc":"3349:17:21","nodeType":"YulVariableDeclaration","src":"3349:17:21","value":{"name":"memPtr","nativeSrc":"3360:6:21","nodeType":"YulIdentifier","src":"3360:6:21"},"variables":[{"name":"dst","nativeSrc":"3353:3:21","nodeType":"YulTypedName","src":"3353:3:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3382:6:21","nodeType":"YulIdentifier","src":"3382:6:21"},{"name":"_4","nativeSrc":"3390:2:21","nodeType":"YulIdentifier","src":"3390:2:21"}],"functionName":{"name":"mstore","nativeSrc":"3375:6:21","nodeType":"YulIdentifier","src":"3375:6:21"},"nativeSrc":"3375:18:21","nodeType":"YulFunctionCall","src":"3375:18:21"},"nativeSrc":"3375:18:21","nodeType":"YulExpressionStatement","src":"3375:18:21"},{"nativeSrc":"3402:22:21","nodeType":"YulAssignment","src":"3402:22:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"3413:6:21","nodeType":"YulIdentifier","src":"3413:6:21"},{"name":"_1","nativeSrc":"3421:2:21","nodeType":"YulIdentifier","src":"3421:2:21"}],"functionName":{"name":"add","nativeSrc":"3409:3:21","nodeType":"YulIdentifier","src":"3409:3:21"},"nativeSrc":"3409:15:21","nodeType":"YulFunctionCall","src":"3409:15:21"},"variableNames":[{"name":"dst","nativeSrc":"3402:3:21","nodeType":"YulIdentifier","src":"3402:3:21"}]},{"nativeSrc":"3433:34:21","nodeType":"YulVariableDeclaration","src":"3433:34:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"3455:2:21","nodeType":"YulIdentifier","src":"3455:2:21"},{"name":"_5","nativeSrc":"3459:2:21","nodeType":"YulIdentifier","src":"3459:2:21"}],"functionName":{"name":"add","nativeSrc":"3451:3:21","nodeType":"YulIdentifier","src":"3451:3:21"},"nativeSrc":"3451:11:21","nodeType":"YulFunctionCall","src":"3451:11:21"},{"name":"_1","nativeSrc":"3464:2:21","nodeType":"YulIdentifier","src":"3464:2:21"}],"functionName":{"name":"add","nativeSrc":"3447:3:21","nodeType":"YulIdentifier","src":"3447:3:21"},"nativeSrc":"3447:20:21","nodeType":"YulFunctionCall","src":"3447:20:21"},"variables":[{"name":"srcEnd","nativeSrc":"3437:6:21","nodeType":"YulTypedName","src":"3437:6:21","type":""}]},{"body":{"nativeSrc":"3499:16:21","nodeType":"YulBlock","src":"3499:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3508:1:21","nodeType":"YulLiteral","src":"3508:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3511:1:21","nodeType":"YulLiteral","src":"3511:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3501:6:21","nodeType":"YulIdentifier","src":"3501:6:21"},"nativeSrc":"3501:12:21","nodeType":"YulFunctionCall","src":"3501:12:21"},"nativeSrc":"3501:12:21","nodeType":"YulExpressionStatement","src":"3501:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"3482:6:21","nodeType":"YulIdentifier","src":"3482:6:21"},{"name":"dataEnd","nativeSrc":"3490:7:21","nodeType":"YulIdentifier","src":"3490:7:21"}],"functionName":{"name":"gt","nativeSrc":"3479:2:21","nodeType":"YulIdentifier","src":"3479:2:21"},"nativeSrc":"3479:19:21","nodeType":"YulFunctionCall","src":"3479:19:21"},"nativeSrc":"3476:39:21","nodeType":"YulIf","src":"3476:39:21"},{"nativeSrc":"3524:22:21","nodeType":"YulVariableDeclaration","src":"3524:22:21","value":{"arguments":[{"name":"_3","nativeSrc":"3539:2:21","nodeType":"YulIdentifier","src":"3539:2:21"},{"name":"_1","nativeSrc":"3543:2:21","nodeType":"YulIdentifier","src":"3543:2:21"}],"functionName":{"name":"add","nativeSrc":"3535:3:21","nodeType":"YulIdentifier","src":"3535:3:21"},"nativeSrc":"3535:11:21","nodeType":"YulFunctionCall","src":"3535:11:21"},"variables":[{"name":"src","nativeSrc":"3528:3:21","nodeType":"YulTypedName","src":"3528:3:21","type":""}]},{"body":{"nativeSrc":"3611:79:21","nodeType":"YulBlock","src":"3611:79:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"3632:3:21","nodeType":"YulIdentifier","src":"3632:3:21"},{"arguments":[{"name":"src","nativeSrc":"3643:3:21","nodeType":"YulIdentifier","src":"3643:3:21"}],"functionName":{"name":"mload","nativeSrc":"3637:5:21","nodeType":"YulIdentifier","src":"3637:5:21"},"nativeSrc":"3637:10:21","nodeType":"YulFunctionCall","src":"3637:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3625:6:21","nodeType":"YulIdentifier","src":"3625:6:21"},"nativeSrc":"3625:23:21","nodeType":"YulFunctionCall","src":"3625:23:21"},"nativeSrc":"3625:23:21","nodeType":"YulExpressionStatement","src":"3625:23:21"},{"nativeSrc":"3661:19:21","nodeType":"YulAssignment","src":"3661:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"3672:3:21","nodeType":"YulIdentifier","src":"3672:3:21"},{"name":"_1","nativeSrc":"3677:2:21","nodeType":"YulIdentifier","src":"3677:2:21"}],"functionName":{"name":"add","nativeSrc":"3668:3:21","nodeType":"YulIdentifier","src":"3668:3:21"},"nativeSrc":"3668:12:21","nodeType":"YulFunctionCall","src":"3668:12:21"},"variableNames":[{"name":"dst","nativeSrc":"3661:3:21","nodeType":"YulIdentifier","src":"3661:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"3566:3:21","nodeType":"YulIdentifier","src":"3566:3:21"},{"name":"srcEnd","nativeSrc":"3571:6:21","nodeType":"YulIdentifier","src":"3571:6:21"}],"functionName":{"name":"lt","nativeSrc":"3563:2:21","nodeType":"YulIdentifier","src":"3563:2:21"},"nativeSrc":"3563:15:21","nodeType":"YulFunctionCall","src":"3563:15:21"},"nativeSrc":"3555:135:21","nodeType":"YulForLoop","post":{"nativeSrc":"3579:23:21","nodeType":"YulBlock","src":"3579:23:21","statements":[{"nativeSrc":"3581:19:21","nodeType":"YulAssignment","src":"3581:19:21","value":{"arguments":[{"name":"src","nativeSrc":"3592:3:21","nodeType":"YulIdentifier","src":"3592:3:21"},{"name":"_1","nativeSrc":"3597:2:21","nodeType":"YulIdentifier","src":"3597:2:21"}],"functionName":{"name":"add","nativeSrc":"3588:3:21","nodeType":"YulIdentifier","src":"3588:3:21"},"nativeSrc":"3588:12:21","nodeType":"YulFunctionCall","src":"3588:12:21"},"variableNames":[{"name":"src","nativeSrc":"3581:3:21","nodeType":"YulIdentifier","src":"3581:3:21"}]}]},"pre":{"nativeSrc":"3559:3:21","nodeType":"YulBlock","src":"3559:3:21","statements":[]},"src":"3555:135:21"},{"nativeSrc":"3699:16:21","nodeType":"YulAssignment","src":"3699:16:21","value":{"name":"memPtr","nativeSrc":"3709:6:21","nodeType":"YulIdentifier","src":"3709:6:21"},"variableNames":[{"name":"value0","nativeSrc":"3699:6:21","nodeType":"YulIdentifier","src":"3699:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"2616:1105:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2688:9:21","nodeType":"YulTypedName","src":"2688:9:21","type":""},{"name":"dataEnd","nativeSrc":"2699:7:21","nodeType":"YulTypedName","src":"2699:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2711:6:21","nodeType":"YulTypedName","src":"2711:6:21","type":""}],"src":"2616:1105:21"},{"body":{"nativeSrc":"3758:95:21","nodeType":"YulBlock","src":"3758:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3775:1:21","nodeType":"YulLiteral","src":"3775:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3782:3:21","nodeType":"YulLiteral","src":"3782:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"3787:10:21","nodeType":"YulLiteral","src":"3787:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3778:3:21","nodeType":"YulIdentifier","src":"3778:3:21"},"nativeSrc":"3778:20:21","nodeType":"YulFunctionCall","src":"3778:20:21"}],"functionName":{"name":"mstore","nativeSrc":"3768:6:21","nodeType":"YulIdentifier","src":"3768:6:21"},"nativeSrc":"3768:31:21","nodeType":"YulFunctionCall","src":"3768:31:21"},"nativeSrc":"3768:31:21","nodeType":"YulExpressionStatement","src":"3768:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3815:1:21","nodeType":"YulLiteral","src":"3815:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"3818:4:21","nodeType":"YulLiteral","src":"3818:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3808:6:21","nodeType":"YulIdentifier","src":"3808:6:21"},"nativeSrc":"3808:15:21","nodeType":"YulFunctionCall","src":"3808:15:21"},"nativeSrc":"3808:15:21","nodeType":"YulExpressionStatement","src":"3808:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3839:1:21","nodeType":"YulLiteral","src":"3839:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3842:4:21","nodeType":"YulLiteral","src":"3842:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3832:6:21","nodeType":"YulIdentifier","src":"3832:6:21"},"nativeSrc":"3832:15:21","nodeType":"YulFunctionCall","src":"3832:15:21"},"nativeSrc":"3832:15:21","nodeType":"YulExpressionStatement","src":"3832:15:21"}]},"name":"panic_error_0x11","nativeSrc":"3726:127:21","nodeType":"YulFunctionDefinition","src":"3726:127:21"},{"body":{"nativeSrc":"3907:79:21","nodeType":"YulBlock","src":"3907:79:21","statements":[{"nativeSrc":"3917:17:21","nodeType":"YulAssignment","src":"3917:17:21","value":{"arguments":[{"name":"x","nativeSrc":"3929:1:21","nodeType":"YulIdentifier","src":"3929:1:21"},{"name":"y","nativeSrc":"3932:1:21","nodeType":"YulIdentifier","src":"3932:1:21"}],"functionName":{"name":"sub","nativeSrc":"3925:3:21","nodeType":"YulIdentifier","src":"3925:3:21"},"nativeSrc":"3925:9:21","nodeType":"YulFunctionCall","src":"3925:9:21"},"variableNames":[{"name":"diff","nativeSrc":"3917:4:21","nodeType":"YulIdentifier","src":"3917:4:21"}]},{"body":{"nativeSrc":"3958:22:21","nodeType":"YulBlock","src":"3958:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3960:16:21","nodeType":"YulIdentifier","src":"3960:16:21"},"nativeSrc":"3960:18:21","nodeType":"YulFunctionCall","src":"3960:18:21"},"nativeSrc":"3960:18:21","nodeType":"YulExpressionStatement","src":"3960:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"3949:4:21","nodeType":"YulIdentifier","src":"3949:4:21"},{"name":"x","nativeSrc":"3955:1:21","nodeType":"YulIdentifier","src":"3955:1:21"}],"functionName":{"name":"gt","nativeSrc":"3946:2:21","nodeType":"YulIdentifier","src":"3946:2:21"},"nativeSrc":"3946:11:21","nodeType":"YulFunctionCall","src":"3946:11:21"},"nativeSrc":"3943:37:21","nodeType":"YulIf","src":"3943:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"3858:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3889:1:21","nodeType":"YulTypedName","src":"3889:1:21","type":""},{"name":"y","nativeSrc":"3892:1:21","nodeType":"YulTypedName","src":"3892:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"3898:4:21","nodeType":"YulTypedName","src":"3898:4:21","type":""}],"src":"3858:128:21"},{"body":{"nativeSrc":"4165:168:21","nodeType":"YulBlock","src":"4165:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4182:9:21","nodeType":"YulIdentifier","src":"4182:9:21"},{"kind":"number","nativeSrc":"4193:2:21","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4175:6:21","nodeType":"YulIdentifier","src":"4175:6:21"},"nativeSrc":"4175:21:21","nodeType":"YulFunctionCall","src":"4175:21:21"},"nativeSrc":"4175:21:21","nodeType":"YulExpressionStatement","src":"4175:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4216:9:21","nodeType":"YulIdentifier","src":"4216:9:21"},{"kind":"number","nativeSrc":"4227:2:21","nodeType":"YulLiteral","src":"4227:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4212:3:21","nodeType":"YulIdentifier","src":"4212:3:21"},"nativeSrc":"4212:18:21","nodeType":"YulFunctionCall","src":"4212:18:21"},{"kind":"number","nativeSrc":"4232:2:21","nodeType":"YulLiteral","src":"4232:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"4205:6:21","nodeType":"YulIdentifier","src":"4205:6:21"},"nativeSrc":"4205:30:21","nodeType":"YulFunctionCall","src":"4205:30:21"},"nativeSrc":"4205:30:21","nodeType":"YulExpressionStatement","src":"4205:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4255:9:21","nodeType":"YulIdentifier","src":"4255:9:21"},{"kind":"number","nativeSrc":"4266:2:21","nodeType":"YulLiteral","src":"4266:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4251:3:21","nodeType":"YulIdentifier","src":"4251:3:21"},"nativeSrc":"4251:18:21","nodeType":"YulFunctionCall","src":"4251:18:21"},{"hexValue":"416d6f756e74206d757374206265203e2030","kind":"string","nativeSrc":"4271:20:21","nodeType":"YulLiteral","src":"4271:20:21","type":"","value":"Amount must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"4244:6:21","nodeType":"YulIdentifier","src":"4244:6:21"},"nativeSrc":"4244:48:21","nodeType":"YulFunctionCall","src":"4244:48:21"},"nativeSrc":"4244:48:21","nodeType":"YulExpressionStatement","src":"4244:48:21"},{"nativeSrc":"4301:26:21","nodeType":"YulAssignment","src":"4301:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4313:9:21","nodeType":"YulIdentifier","src":"4313:9:21"},{"kind":"number","nativeSrc":"4324:2:21","nodeType":"YulLiteral","src":"4324:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4309:3:21","nodeType":"YulIdentifier","src":"4309:3:21"},"nativeSrc":"4309:18:21","nodeType":"YulFunctionCall","src":"4309:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4301:4:21","nodeType":"YulIdentifier","src":"4301:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3991:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4142:9:21","nodeType":"YulTypedName","src":"4142:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4156:4:21","nodeType":"YulTypedName","src":"4156:4:21","type":""}],"src":"3991:342:21"},{"body":{"nativeSrc":"4512:161:21","nodeType":"YulBlock","src":"4512:161:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4529:9:21","nodeType":"YulIdentifier","src":"4529:9:21"},{"kind":"number","nativeSrc":"4540:2:21","nodeType":"YulLiteral","src":"4540:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4522:6:21","nodeType":"YulIdentifier","src":"4522:6:21"},"nativeSrc":"4522:21:21","nodeType":"YulFunctionCall","src":"4522:21:21"},"nativeSrc":"4522:21:21","nodeType":"YulExpressionStatement","src":"4522:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4563:9:21","nodeType":"YulIdentifier","src":"4563:9:21"},{"kind":"number","nativeSrc":"4574:2:21","nodeType":"YulLiteral","src":"4574:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4559:3:21","nodeType":"YulIdentifier","src":"4559:3:21"},"nativeSrc":"4559:18:21","nodeType":"YulFunctionCall","src":"4559:18:21"},{"kind":"number","nativeSrc":"4579:2:21","nodeType":"YulLiteral","src":"4579:2:21","type":"","value":"11"}],"functionName":{"name":"mstore","nativeSrc":"4552:6:21","nodeType":"YulIdentifier","src":"4552:6:21"},"nativeSrc":"4552:30:21","nodeType":"YulFunctionCall","src":"4552:30:21"},"nativeSrc":"4552:30:21","nodeType":"YulExpressionStatement","src":"4552:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4602:9:21","nodeType":"YulIdentifier","src":"4602:9:21"},{"kind":"number","nativeSrc":"4613:2:21","nodeType":"YulLiteral","src":"4613:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4598:3:21","nodeType":"YulIdentifier","src":"4598:3:21"},"nativeSrc":"4598:18:21","nodeType":"YulFunctionCall","src":"4598:18:21"},{"hexValue":"53616d6520746f6b656e73","kind":"string","nativeSrc":"4618:13:21","nodeType":"YulLiteral","src":"4618:13:21","type":"","value":"Same tokens"}],"functionName":{"name":"mstore","nativeSrc":"4591:6:21","nodeType":"YulIdentifier","src":"4591:6:21"},"nativeSrc":"4591:41:21","nodeType":"YulFunctionCall","src":"4591:41:21"},"nativeSrc":"4591:41:21","nodeType":"YulExpressionStatement","src":"4591:41:21"},{"nativeSrc":"4641:26:21","nodeType":"YulAssignment","src":"4641:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4653:9:21","nodeType":"YulIdentifier","src":"4653:9:21"},{"kind":"number","nativeSrc":"4664:2:21","nodeType":"YulLiteral","src":"4664:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4649:3:21","nodeType":"YulIdentifier","src":"4649:3:21"},"nativeSrc":"4649:18:21","nodeType":"YulFunctionCall","src":"4649:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4641:4:21","nodeType":"YulIdentifier","src":"4641:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4338:335:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4489:9:21","nodeType":"YulTypedName","src":"4489:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4503:4:21","nodeType":"YulTypedName","src":"4503:4:21","type":""}],"src":"4338:335:21"},{"body":{"nativeSrc":"4852:168:21","nodeType":"YulBlock","src":"4852:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4869:9:21","nodeType":"YulIdentifier","src":"4869:9:21"},{"kind":"number","nativeSrc":"4880:2:21","nodeType":"YulLiteral","src":"4880:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4862:6:21","nodeType":"YulIdentifier","src":"4862:6:21"},"nativeSrc":"4862:21:21","nodeType":"YulFunctionCall","src":"4862:21:21"},"nativeSrc":"4862:21:21","nodeType":"YulExpressionStatement","src":"4862:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4903:9:21","nodeType":"YulIdentifier","src":"4903:9:21"},{"kind":"number","nativeSrc":"4914:2:21","nodeType":"YulLiteral","src":"4914:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4899:3:21","nodeType":"YulIdentifier","src":"4899:3:21"},"nativeSrc":"4899:18:21","nodeType":"YulFunctionCall","src":"4899:18:21"},{"kind":"number","nativeSrc":"4919:2:21","nodeType":"YulLiteral","src":"4919:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"4892:6:21","nodeType":"YulIdentifier","src":"4892:6:21"},"nativeSrc":"4892:30:21","nodeType":"YulFunctionCall","src":"4892:30:21"},"nativeSrc":"4892:30:21","nodeType":"YulExpressionStatement","src":"4892:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4942:9:21","nodeType":"YulIdentifier","src":"4942:9:21"},{"kind":"number","nativeSrc":"4953:2:21","nodeType":"YulLiteral","src":"4953:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4938:3:21","nodeType":"YulIdentifier","src":"4938:3:21"},"nativeSrc":"4938:18:21","nodeType":"YulFunctionCall","src":"4938:18:21"},{"hexValue":"496e76616c6964204d4f4e20616d6f756e74","kind":"string","nativeSrc":"4958:20:21","nodeType":"YulLiteral","src":"4958:20:21","type":"","value":"Invalid MON amount"}],"functionName":{"name":"mstore","nativeSrc":"4931:6:21","nodeType":"YulIdentifier","src":"4931:6:21"},"nativeSrc":"4931:48:21","nodeType":"YulFunctionCall","src":"4931:48:21"},"nativeSrc":"4931:48:21","nodeType":"YulExpressionStatement","src":"4931:48:21"},{"nativeSrc":"4988:26:21","nodeType":"YulAssignment","src":"4988:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5000:9:21","nodeType":"YulIdentifier","src":"5000:9:21"},{"kind":"number","nativeSrc":"5011:2:21","nodeType":"YulLiteral","src":"5011:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4996:3:21","nodeType":"YulIdentifier","src":"4996:3:21"},"nativeSrc":"4996:18:21","nodeType":"YulFunctionCall","src":"4996:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4988:4:21","nodeType":"YulIdentifier","src":"4988:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4678:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4829:9:21","nodeType":"YulTypedName","src":"4829:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4843:4:21","nodeType":"YulTypedName","src":"4843:4:21","type":""}],"src":"4678:342:21"},{"body":{"nativeSrc":"5073:77:21","nodeType":"YulBlock","src":"5073:77:21","statements":[{"nativeSrc":"5083:16:21","nodeType":"YulAssignment","src":"5083:16:21","value":{"arguments":[{"name":"x","nativeSrc":"5094:1:21","nodeType":"YulIdentifier","src":"5094:1:21"},{"name":"y","nativeSrc":"5097:1:21","nodeType":"YulIdentifier","src":"5097:1:21"}],"functionName":{"name":"add","nativeSrc":"5090:3:21","nodeType":"YulIdentifier","src":"5090:3:21"},"nativeSrc":"5090:9:21","nodeType":"YulFunctionCall","src":"5090:9:21"},"variableNames":[{"name":"sum","nativeSrc":"5083:3:21","nodeType":"YulIdentifier","src":"5083:3:21"}]},{"body":{"nativeSrc":"5122:22:21","nodeType":"YulBlock","src":"5122:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5124:16:21","nodeType":"YulIdentifier","src":"5124:16:21"},"nativeSrc":"5124:18:21","nodeType":"YulFunctionCall","src":"5124:18:21"},"nativeSrc":"5124:18:21","nodeType":"YulExpressionStatement","src":"5124:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"5114:1:21","nodeType":"YulIdentifier","src":"5114:1:21"},{"name":"sum","nativeSrc":"5117:3:21","nodeType":"YulIdentifier","src":"5117:3:21"}],"functionName":{"name":"gt","nativeSrc":"5111:2:21","nodeType":"YulIdentifier","src":"5111:2:21"},"nativeSrc":"5111:10:21","nodeType":"YulFunctionCall","src":"5111:10:21"},"nativeSrc":"5108:36:21","nodeType":"YulIf","src":"5108:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"5025:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5056:1:21","nodeType":"YulTypedName","src":"5056:1:21","type":""},{"name":"y","nativeSrc":"5059:1:21","nodeType":"YulTypedName","src":"5059:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"5065:3:21","nodeType":"YulTypedName","src":"5065:3:21","type":""}],"src":"5025:125:21"},{"body":{"nativeSrc":"5390:267:21","nodeType":"YulBlock","src":"5390:267:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5407:9:21","nodeType":"YulIdentifier","src":"5407:9:21"},{"name":"value0","nativeSrc":"5418:6:21","nodeType":"YulIdentifier","src":"5418:6:21"}],"functionName":{"name":"mstore","nativeSrc":"5400:6:21","nodeType":"YulIdentifier","src":"5400:6:21"},"nativeSrc":"5400:25:21","nodeType":"YulFunctionCall","src":"5400:25:21"},"nativeSrc":"5400:25:21","nodeType":"YulExpressionStatement","src":"5400:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5445:9:21","nodeType":"YulIdentifier","src":"5445:9:21"},{"kind":"number","nativeSrc":"5456:2:21","nodeType":"YulLiteral","src":"5456:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5441:3:21","nodeType":"YulIdentifier","src":"5441:3:21"},"nativeSrc":"5441:18:21","nodeType":"YulFunctionCall","src":"5441:18:21"},{"kind":"number","nativeSrc":"5461:3:21","nodeType":"YulLiteral","src":"5461:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"5434:6:21","nodeType":"YulIdentifier","src":"5434:6:21"},"nativeSrc":"5434:31:21","nodeType":"YulFunctionCall","src":"5434:31:21"},"nativeSrc":"5434:31:21","nodeType":"YulExpressionStatement","src":"5434:31:21"},{"nativeSrc":"5474:65:21","nodeType":"YulAssignment","src":"5474:65:21","value":{"arguments":[{"name":"value1","nativeSrc":"5511:6:21","nodeType":"YulIdentifier","src":"5511:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"5523:9:21","nodeType":"YulIdentifier","src":"5523:9:21"},{"kind":"number","nativeSrc":"5534:3:21","nodeType":"YulLiteral","src":"5534:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5519:3:21","nodeType":"YulIdentifier","src":"5519:3:21"},"nativeSrc":"5519:19:21","nodeType":"YulFunctionCall","src":"5519:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"5482:28:21","nodeType":"YulIdentifier","src":"5482:28:21"},"nativeSrc":"5482:57:21","nodeType":"YulFunctionCall","src":"5482:57:21"},"variableNames":[{"name":"tail","nativeSrc":"5474:4:21","nodeType":"YulIdentifier","src":"5474:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5559:9:21","nodeType":"YulIdentifier","src":"5559:9:21"},{"kind":"number","nativeSrc":"5570:2:21","nodeType":"YulLiteral","src":"5570:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5555:3:21","nodeType":"YulIdentifier","src":"5555:3:21"},"nativeSrc":"5555:18:21","nodeType":"YulFunctionCall","src":"5555:18:21"},{"arguments":[{"name":"value2","nativeSrc":"5579:6:21","nodeType":"YulIdentifier","src":"5579:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5595:3:21","nodeType":"YulLiteral","src":"5595:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"5600:1:21","nodeType":"YulLiteral","src":"5600:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5591:3:21","nodeType":"YulIdentifier","src":"5591:3:21"},"nativeSrc":"5591:11:21","nodeType":"YulFunctionCall","src":"5591:11:21"},{"kind":"number","nativeSrc":"5604:1:21","nodeType":"YulLiteral","src":"5604:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5587:3:21","nodeType":"YulIdentifier","src":"5587:3:21"},"nativeSrc":"5587:19:21","nodeType":"YulFunctionCall","src":"5587:19:21"}],"functionName":{"name":"and","nativeSrc":"5575:3:21","nodeType":"YulIdentifier","src":"5575:3:21"},"nativeSrc":"5575:32:21","nodeType":"YulFunctionCall","src":"5575:32:21"}],"functionName":{"name":"mstore","nativeSrc":"5548:6:21","nodeType":"YulIdentifier","src":"5548:6:21"},"nativeSrc":"5548:60:21","nodeType":"YulFunctionCall","src":"5548:60:21"},"nativeSrc":"5548:60:21","nodeType":"YulExpressionStatement","src":"5548:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5628:9:21","nodeType":"YulIdentifier","src":"5628:9:21"},{"kind":"number","nativeSrc":"5639:2:21","nodeType":"YulLiteral","src":"5639:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5624:3:21","nodeType":"YulIdentifier","src":"5624:3:21"},"nativeSrc":"5624:18:21","nodeType":"YulFunctionCall","src":"5624:18:21"},{"name":"value3","nativeSrc":"5644:6:21","nodeType":"YulIdentifier","src":"5644:6:21"}],"functionName":{"name":"mstore","nativeSrc":"5617:6:21","nodeType":"YulIdentifier","src":"5617:6:21"},"nativeSrc":"5617:34:21","nodeType":"YulFunctionCall","src":"5617:34:21"},"nativeSrc":"5617:34:21","nodeType":"YulExpressionStatement","src":"5617:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nativeSrc":"5155:502:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5335:9:21","nodeType":"YulTypedName","src":"5335:9:21","type":""},{"name":"value3","nativeSrc":"5346:6:21","nodeType":"YulTypedName","src":"5346:6:21","type":""},{"name":"value2","nativeSrc":"5354:6:21","nodeType":"YulTypedName","src":"5354:6:21","type":""},{"name":"value1","nativeSrc":"5362:6:21","nodeType":"YulTypedName","src":"5362:6:21","type":""},{"name":"value0","nativeSrc":"5370:6:21","nodeType":"YulTypedName","src":"5370:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5381:4:21","nodeType":"YulTypedName","src":"5381:4:21","type":""}],"src":"5155:502:21"},{"body":{"nativeSrc":"5791:119:21","nodeType":"YulBlock","src":"5791:119:21","statements":[{"nativeSrc":"5801:26:21","nodeType":"YulAssignment","src":"5801:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5813:9:21","nodeType":"YulIdentifier","src":"5813:9:21"},{"kind":"number","nativeSrc":"5824:2:21","nodeType":"YulLiteral","src":"5824:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5809:3:21","nodeType":"YulIdentifier","src":"5809:3:21"},"nativeSrc":"5809:18:21","nodeType":"YulFunctionCall","src":"5809:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5801:4:21","nodeType":"YulIdentifier","src":"5801:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5843:9:21","nodeType":"YulIdentifier","src":"5843:9:21"},{"name":"value0","nativeSrc":"5854:6:21","nodeType":"YulIdentifier","src":"5854:6:21"}],"functionName":{"name":"mstore","nativeSrc":"5836:6:21","nodeType":"YulIdentifier","src":"5836:6:21"},"nativeSrc":"5836:25:21","nodeType":"YulFunctionCall","src":"5836:25:21"},"nativeSrc":"5836:25:21","nodeType":"YulExpressionStatement","src":"5836:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5881:9:21","nodeType":"YulIdentifier","src":"5881:9:21"},{"kind":"number","nativeSrc":"5892:2:21","nodeType":"YulLiteral","src":"5892:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5877:3:21","nodeType":"YulIdentifier","src":"5877:3:21"},"nativeSrc":"5877:18:21","nodeType":"YulFunctionCall","src":"5877:18:21"},{"name":"value1","nativeSrc":"5897:6:21","nodeType":"YulIdentifier","src":"5897:6:21"}],"functionName":{"name":"mstore","nativeSrc":"5870:6:21","nodeType":"YulIdentifier","src":"5870:6:21"},"nativeSrc":"5870:34:21","nodeType":"YulFunctionCall","src":"5870:34:21"},"nativeSrc":"5870:34:21","nodeType":"YulExpressionStatement","src":"5870:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5662:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5752:9:21","nodeType":"YulTypedName","src":"5752:9:21","type":""},{"name":"value1","nativeSrc":"5763:6:21","nodeType":"YulTypedName","src":"5763:6:21","type":""},{"name":"value0","nativeSrc":"5771:6:21","nodeType":"YulTypedName","src":"5771:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5782:4:21","nodeType":"YulTypedName","src":"5782:4:21","type":""}],"src":"5662:248:21"},{"body":{"nativeSrc":"6072:218:21","nodeType":"YulBlock","src":"6072:218:21","statements":[{"nativeSrc":"6082:26:21","nodeType":"YulAssignment","src":"6082:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6094:9:21","nodeType":"YulIdentifier","src":"6094:9:21"},{"kind":"number","nativeSrc":"6105:2:21","nodeType":"YulLiteral","src":"6105:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6090:3:21","nodeType":"YulIdentifier","src":"6090:3:21"},"nativeSrc":"6090:18:21","nodeType":"YulFunctionCall","src":"6090:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6082:4:21","nodeType":"YulIdentifier","src":"6082:4:21"}]},{"nativeSrc":"6117:29:21","nodeType":"YulVariableDeclaration","src":"6117:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6135:3:21","nodeType":"YulLiteral","src":"6135:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"6140:1:21","nodeType":"YulLiteral","src":"6140:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6131:3:21","nodeType":"YulIdentifier","src":"6131:3:21"},"nativeSrc":"6131:11:21","nodeType":"YulFunctionCall","src":"6131:11:21"},{"kind":"number","nativeSrc":"6144:1:21","nodeType":"YulLiteral","src":"6144:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6127:3:21","nodeType":"YulIdentifier","src":"6127:3:21"},"nativeSrc":"6127:19:21","nodeType":"YulFunctionCall","src":"6127:19:21"},"variables":[{"name":"_1","nativeSrc":"6121:2:21","nodeType":"YulTypedName","src":"6121:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6162:9:21","nodeType":"YulIdentifier","src":"6162:9:21"},{"arguments":[{"name":"value0","nativeSrc":"6177:6:21","nodeType":"YulIdentifier","src":"6177:6:21"},{"name":"_1","nativeSrc":"6185:2:21","nodeType":"YulIdentifier","src":"6185:2:21"}],"functionName":{"name":"and","nativeSrc":"6173:3:21","nodeType":"YulIdentifier","src":"6173:3:21"},"nativeSrc":"6173:15:21","nodeType":"YulFunctionCall","src":"6173:15:21"}],"functionName":{"name":"mstore","nativeSrc":"6155:6:21","nodeType":"YulIdentifier","src":"6155:6:21"},"nativeSrc":"6155:34:21","nodeType":"YulFunctionCall","src":"6155:34:21"},"nativeSrc":"6155:34:21","nodeType":"YulExpressionStatement","src":"6155:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6209:9:21","nodeType":"YulIdentifier","src":"6209:9:21"},{"kind":"number","nativeSrc":"6220:2:21","nodeType":"YulLiteral","src":"6220:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6205:3:21","nodeType":"YulIdentifier","src":"6205:3:21"},"nativeSrc":"6205:18:21","nodeType":"YulFunctionCall","src":"6205:18:21"},{"arguments":[{"name":"value1","nativeSrc":"6229:6:21","nodeType":"YulIdentifier","src":"6229:6:21"},{"name":"_1","nativeSrc":"6237:2:21","nodeType":"YulIdentifier","src":"6237:2:21"}],"functionName":{"name":"and","nativeSrc":"6225:3:21","nodeType":"YulIdentifier","src":"6225:3:21"},"nativeSrc":"6225:15:21","nodeType":"YulFunctionCall","src":"6225:15:21"}],"functionName":{"name":"mstore","nativeSrc":"6198:6:21","nodeType":"YulIdentifier","src":"6198:6:21"},"nativeSrc":"6198:43:21","nodeType":"YulFunctionCall","src":"6198:43:21"},"nativeSrc":"6198:43:21","nodeType":"YulExpressionStatement","src":"6198:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6261:9:21","nodeType":"YulIdentifier","src":"6261:9:21"},{"kind":"number","nativeSrc":"6272:2:21","nodeType":"YulLiteral","src":"6272:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6257:3:21","nodeType":"YulIdentifier","src":"6257:3:21"},"nativeSrc":"6257:18:21","nodeType":"YulFunctionCall","src":"6257:18:21"},{"name":"value2","nativeSrc":"6277:6:21","nodeType":"YulIdentifier","src":"6277:6:21"}],"functionName":{"name":"mstore","nativeSrc":"6250:6:21","nodeType":"YulIdentifier","src":"6250:6:21"},"nativeSrc":"6250:34:21","nodeType":"YulFunctionCall","src":"6250:34:21"},"nativeSrc":"6250:34:21","nodeType":"YulExpressionStatement","src":"6250:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"5915:375:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6025:9:21","nodeType":"YulTypedName","src":"6025:9:21","type":""},{"name":"value2","nativeSrc":"6036:6:21","nodeType":"YulTypedName","src":"6036:6:21","type":""},{"name":"value1","nativeSrc":"6044:6:21","nodeType":"YulTypedName","src":"6044:6:21","type":""},{"name":"value0","nativeSrc":"6052:6:21","nodeType":"YulTypedName","src":"6052:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6063:4:21","nodeType":"YulTypedName","src":"6063:4:21","type":""}],"src":"5915:375:21"},{"body":{"nativeSrc":"6373:199:21","nodeType":"YulBlock","src":"6373:199:21","statements":[{"body":{"nativeSrc":"6419:16:21","nodeType":"YulBlock","src":"6419:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6428:1:21","nodeType":"YulLiteral","src":"6428:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6431:1:21","nodeType":"YulLiteral","src":"6431:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6421:6:21","nodeType":"YulIdentifier","src":"6421:6:21"},"nativeSrc":"6421:12:21","nodeType":"YulFunctionCall","src":"6421:12:21"},"nativeSrc":"6421:12:21","nodeType":"YulExpressionStatement","src":"6421:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6394:7:21","nodeType":"YulIdentifier","src":"6394:7:21"},{"name":"headStart","nativeSrc":"6403:9:21","nodeType":"YulIdentifier","src":"6403:9:21"}],"functionName":{"name":"sub","nativeSrc":"6390:3:21","nodeType":"YulIdentifier","src":"6390:3:21"},"nativeSrc":"6390:23:21","nodeType":"YulFunctionCall","src":"6390:23:21"},{"kind":"number","nativeSrc":"6415:2:21","nodeType":"YulLiteral","src":"6415:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6386:3:21","nodeType":"YulIdentifier","src":"6386:3:21"},"nativeSrc":"6386:32:21","nodeType":"YulFunctionCall","src":"6386:32:21"},"nativeSrc":"6383:52:21","nodeType":"YulIf","src":"6383:52:21"},{"nativeSrc":"6444:29:21","nodeType":"YulVariableDeclaration","src":"6444:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6463:9:21","nodeType":"YulIdentifier","src":"6463:9:21"}],"functionName":{"name":"mload","nativeSrc":"6457:5:21","nodeType":"YulIdentifier","src":"6457:5:21"},"nativeSrc":"6457:16:21","nodeType":"YulFunctionCall","src":"6457:16:21"},"variables":[{"name":"value","nativeSrc":"6448:5:21","nodeType":"YulTypedName","src":"6448:5:21","type":""}]},{"body":{"nativeSrc":"6526:16:21","nodeType":"YulBlock","src":"6526:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6535:1:21","nodeType":"YulLiteral","src":"6535:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6538:1:21","nodeType":"YulLiteral","src":"6538:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6528:6:21","nodeType":"YulIdentifier","src":"6528:6:21"},"nativeSrc":"6528:12:21","nodeType":"YulFunctionCall","src":"6528:12:21"},"nativeSrc":"6528:12:21","nodeType":"YulExpressionStatement","src":"6528:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6495:5:21","nodeType":"YulIdentifier","src":"6495:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6516:5:21","nodeType":"YulIdentifier","src":"6516:5:21"}],"functionName":{"name":"iszero","nativeSrc":"6509:6:21","nodeType":"YulIdentifier","src":"6509:6:21"},"nativeSrc":"6509:13:21","nodeType":"YulFunctionCall","src":"6509:13:21"}],"functionName":{"name":"iszero","nativeSrc":"6502:6:21","nodeType":"YulIdentifier","src":"6502:6:21"},"nativeSrc":"6502:21:21","nodeType":"YulFunctionCall","src":"6502:21:21"}],"functionName":{"name":"eq","nativeSrc":"6492:2:21","nodeType":"YulIdentifier","src":"6492:2:21"},"nativeSrc":"6492:32:21","nodeType":"YulFunctionCall","src":"6492:32:21"}],"functionName":{"name":"iszero","nativeSrc":"6485:6:21","nodeType":"YulIdentifier","src":"6485:6:21"},"nativeSrc":"6485:40:21","nodeType":"YulFunctionCall","src":"6485:40:21"},"nativeSrc":"6482:60:21","nodeType":"YulIf","src":"6482:60:21"},{"nativeSrc":"6551:15:21","nodeType":"YulAssignment","src":"6551:15:21","value":{"name":"value","nativeSrc":"6561:5:21","nodeType":"YulIdentifier","src":"6561:5:21"},"variableNames":[{"name":"value0","nativeSrc":"6551:6:21","nodeType":"YulIdentifier","src":"6551:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"6295:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6339:9:21","nodeType":"YulTypedName","src":"6339:9:21","type":""},{"name":"dataEnd","nativeSrc":"6350:7:21","nodeType":"YulTypedName","src":"6350:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6362:6:21","nodeType":"YulTypedName","src":"6362:6:21","type":""}],"src":"6295:277:21"},{"body":{"nativeSrc":"6751:170:21","nodeType":"YulBlock","src":"6751:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6768:9:21","nodeType":"YulIdentifier","src":"6768:9:21"},{"kind":"number","nativeSrc":"6779:2:21","nodeType":"YulLiteral","src":"6779:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6761:6:21","nodeType":"YulIdentifier","src":"6761:6:21"},"nativeSrc":"6761:21:21","nodeType":"YulFunctionCall","src":"6761:21:21"},"nativeSrc":"6761:21:21","nodeType":"YulExpressionStatement","src":"6761:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6802:9:21","nodeType":"YulIdentifier","src":"6802:9:21"},{"kind":"number","nativeSrc":"6813:2:21","nodeType":"YulLiteral","src":"6813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6798:3:21","nodeType":"YulIdentifier","src":"6798:3:21"},"nativeSrc":"6798:18:21","nodeType":"YulFunctionCall","src":"6798:18:21"},{"kind":"number","nativeSrc":"6818:2:21","nodeType":"YulLiteral","src":"6818:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"6791:6:21","nodeType":"YulIdentifier","src":"6791:6:21"},"nativeSrc":"6791:30:21","nodeType":"YulFunctionCall","src":"6791:30:21"},"nativeSrc":"6791:30:21","nodeType":"YulExpressionStatement","src":"6791:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6841:9:21","nodeType":"YulIdentifier","src":"6841:9:21"},{"kind":"number","nativeSrc":"6852:2:21","nodeType":"YulLiteral","src":"6852:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6837:3:21","nodeType":"YulIdentifier","src":"6837:3:21"},"nativeSrc":"6837:18:21","nodeType":"YulFunctionCall","src":"6837:18:21"},{"hexValue":"5472616e736665722066726f6d206661696c6564","kind":"string","nativeSrc":"6857:22:21","nodeType":"YulLiteral","src":"6857:22:21","type":"","value":"Transfer from failed"}],"functionName":{"name":"mstore","nativeSrc":"6830:6:21","nodeType":"YulIdentifier","src":"6830:6:21"},"nativeSrc":"6830:50:21","nodeType":"YulFunctionCall","src":"6830:50:21"},"nativeSrc":"6830:50:21","nodeType":"YulExpressionStatement","src":"6830:50:21"},{"nativeSrc":"6889:26:21","nodeType":"YulAssignment","src":"6889:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6901:9:21","nodeType":"YulIdentifier","src":"6901:9:21"},{"kind":"number","nativeSrc":"6912:2:21","nodeType":"YulLiteral","src":"6912:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6897:3:21","nodeType":"YulIdentifier","src":"6897:3:21"},"nativeSrc":"6897:18:21","nodeType":"YulFunctionCall","src":"6897:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6889:4:21","nodeType":"YulIdentifier","src":"6889:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6577:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6728:9:21","nodeType":"YulTypedName","src":"6728:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6742:4:21","nodeType":"YulTypedName","src":"6742:4:21","type":""}],"src":"6577:344:21"},{"body":{"nativeSrc":"7055:145:21","nodeType":"YulBlock","src":"7055:145:21","statements":[{"nativeSrc":"7065:26:21","nodeType":"YulAssignment","src":"7065:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7077:9:21","nodeType":"YulIdentifier","src":"7077:9:21"},{"kind":"number","nativeSrc":"7088:2:21","nodeType":"YulLiteral","src":"7088:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7073:3:21","nodeType":"YulIdentifier","src":"7073:3:21"},"nativeSrc":"7073:18:21","nodeType":"YulFunctionCall","src":"7073:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7065:4:21","nodeType":"YulIdentifier","src":"7065:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7107:9:21","nodeType":"YulIdentifier","src":"7107:9:21"},{"arguments":[{"name":"value0","nativeSrc":"7122:6:21","nodeType":"YulIdentifier","src":"7122:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7138:3:21","nodeType":"YulLiteral","src":"7138:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"7143:1:21","nodeType":"YulLiteral","src":"7143:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7134:3:21","nodeType":"YulIdentifier","src":"7134:3:21"},"nativeSrc":"7134:11:21","nodeType":"YulFunctionCall","src":"7134:11:21"},{"kind":"number","nativeSrc":"7147:1:21","nodeType":"YulLiteral","src":"7147:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7130:3:21","nodeType":"YulIdentifier","src":"7130:3:21"},"nativeSrc":"7130:19:21","nodeType":"YulFunctionCall","src":"7130:19:21"}],"functionName":{"name":"and","nativeSrc":"7118:3:21","nodeType":"YulIdentifier","src":"7118:3:21"},"nativeSrc":"7118:32:21","nodeType":"YulFunctionCall","src":"7118:32:21"}],"functionName":{"name":"mstore","nativeSrc":"7100:6:21","nodeType":"YulIdentifier","src":"7100:6:21"},"nativeSrc":"7100:51:21","nodeType":"YulFunctionCall","src":"7100:51:21"},"nativeSrc":"7100:51:21","nodeType":"YulExpressionStatement","src":"7100:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7171:9:21","nodeType":"YulIdentifier","src":"7171:9:21"},{"kind":"number","nativeSrc":"7182:2:21","nodeType":"YulLiteral","src":"7182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7167:3:21","nodeType":"YulIdentifier","src":"7167:3:21"},"nativeSrc":"7167:18:21","nodeType":"YulFunctionCall","src":"7167:18:21"},{"name":"value1","nativeSrc":"7187:6:21","nodeType":"YulIdentifier","src":"7187:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7160:6:21","nodeType":"YulIdentifier","src":"7160:6:21"},"nativeSrc":"7160:34:21","nodeType":"YulFunctionCall","src":"7160:34:21"},"nativeSrc":"7160:34:21","nodeType":"YulExpressionStatement","src":"7160:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"6926:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7016:9:21","nodeType":"YulTypedName","src":"7016:9:21","type":""},{"name":"value1","nativeSrc":"7027:6:21","nodeType":"YulTypedName","src":"7027:6:21","type":""},{"name":"value0","nativeSrc":"7035:6:21","nodeType":"YulTypedName","src":"7035:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7046:4:21","nodeType":"YulTypedName","src":"7046:4:21","type":""}],"src":"6926:274:21"},{"body":{"nativeSrc":"7468:311:21","nodeType":"YulBlock","src":"7468:311:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7485:9:21","nodeType":"YulIdentifier","src":"7485:9:21"},{"name":"value0","nativeSrc":"7496:6:21","nodeType":"YulIdentifier","src":"7496:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7478:6:21","nodeType":"YulIdentifier","src":"7478:6:21"},"nativeSrc":"7478:25:21","nodeType":"YulFunctionCall","src":"7478:25:21"},"nativeSrc":"7478:25:21","nodeType":"YulExpressionStatement","src":"7478:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7523:9:21","nodeType":"YulIdentifier","src":"7523:9:21"},{"kind":"number","nativeSrc":"7534:2:21","nodeType":"YulLiteral","src":"7534:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7519:3:21","nodeType":"YulIdentifier","src":"7519:3:21"},"nativeSrc":"7519:18:21","nodeType":"YulFunctionCall","src":"7519:18:21"},{"name":"value1","nativeSrc":"7539:6:21","nodeType":"YulIdentifier","src":"7539:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7512:6:21","nodeType":"YulIdentifier","src":"7512:6:21"},"nativeSrc":"7512:34:21","nodeType":"YulFunctionCall","src":"7512:34:21"},"nativeSrc":"7512:34:21","nodeType":"YulExpressionStatement","src":"7512:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7566:9:21","nodeType":"YulIdentifier","src":"7566:9:21"},{"kind":"number","nativeSrc":"7577:2:21","nodeType":"YulLiteral","src":"7577:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7562:3:21","nodeType":"YulIdentifier","src":"7562:3:21"},"nativeSrc":"7562:18:21","nodeType":"YulFunctionCall","src":"7562:18:21"},{"kind":"number","nativeSrc":"7582:3:21","nodeType":"YulLiteral","src":"7582:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"7555:6:21","nodeType":"YulIdentifier","src":"7555:6:21"},"nativeSrc":"7555:31:21","nodeType":"YulFunctionCall","src":"7555:31:21"},"nativeSrc":"7555:31:21","nodeType":"YulExpressionStatement","src":"7555:31:21"},{"nativeSrc":"7595:65:21","nodeType":"YulAssignment","src":"7595:65:21","value":{"arguments":[{"name":"value2","nativeSrc":"7632:6:21","nodeType":"YulIdentifier","src":"7632:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"7644:9:21","nodeType":"YulIdentifier","src":"7644:9:21"},{"kind":"number","nativeSrc":"7655:3:21","nodeType":"YulLiteral","src":"7655:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7640:3:21","nodeType":"YulIdentifier","src":"7640:3:21"},"nativeSrc":"7640:19:21","nodeType":"YulFunctionCall","src":"7640:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"7603:28:21","nodeType":"YulIdentifier","src":"7603:28:21"},"nativeSrc":"7603:57:21","nodeType":"YulFunctionCall","src":"7603:57:21"},"variableNames":[{"name":"tail","nativeSrc":"7595:4:21","nodeType":"YulIdentifier","src":"7595:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7680:9:21","nodeType":"YulIdentifier","src":"7680:9:21"},{"kind":"number","nativeSrc":"7691:2:21","nodeType":"YulLiteral","src":"7691:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7676:3:21","nodeType":"YulIdentifier","src":"7676:3:21"},"nativeSrc":"7676:18:21","nodeType":"YulFunctionCall","src":"7676:18:21"},{"arguments":[{"name":"value3","nativeSrc":"7700:6:21","nodeType":"YulIdentifier","src":"7700:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7716:3:21","nodeType":"YulLiteral","src":"7716:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"7721:1:21","nodeType":"YulLiteral","src":"7721:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7712:3:21","nodeType":"YulIdentifier","src":"7712:3:21"},"nativeSrc":"7712:11:21","nodeType":"YulFunctionCall","src":"7712:11:21"},{"kind":"number","nativeSrc":"7725:1:21","nodeType":"YulLiteral","src":"7725:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7708:3:21","nodeType":"YulIdentifier","src":"7708:3:21"},"nativeSrc":"7708:19:21","nodeType":"YulFunctionCall","src":"7708:19:21"}],"functionName":{"name":"and","nativeSrc":"7696:3:21","nodeType":"YulIdentifier","src":"7696:3:21"},"nativeSrc":"7696:32:21","nodeType":"YulFunctionCall","src":"7696:32:21"}],"functionName":{"name":"mstore","nativeSrc":"7669:6:21","nodeType":"YulIdentifier","src":"7669:6:21"},"nativeSrc":"7669:60:21","nodeType":"YulFunctionCall","src":"7669:60:21"},"nativeSrc":"7669:60:21","nodeType":"YulExpressionStatement","src":"7669:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7749:9:21","nodeType":"YulIdentifier","src":"7749:9:21"},{"kind":"number","nativeSrc":"7760:3:21","nodeType":"YulLiteral","src":"7760:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7745:3:21","nodeType":"YulIdentifier","src":"7745:3:21"},"nativeSrc":"7745:19:21","nodeType":"YulFunctionCall","src":"7745:19:21"},{"name":"value4","nativeSrc":"7766:6:21","nodeType":"YulIdentifier","src":"7766:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7738:6:21","nodeType":"YulIdentifier","src":"7738:6:21"},"nativeSrc":"7738:35:21","nodeType":"YulFunctionCall","src":"7738:35:21"},"nativeSrc":"7738:35:21","nodeType":"YulExpressionStatement","src":"7738:35:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nativeSrc":"7205:574:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7405:9:21","nodeType":"YulTypedName","src":"7405:9:21","type":""},{"name":"value4","nativeSrc":"7416:6:21","nodeType":"YulTypedName","src":"7416:6:21","type":""},{"name":"value3","nativeSrc":"7424:6:21","nodeType":"YulTypedName","src":"7424:6:21","type":""},{"name":"value2","nativeSrc":"7432:6:21","nodeType":"YulTypedName","src":"7432:6:21","type":""},{"name":"value1","nativeSrc":"7440:6:21","nodeType":"YulTypedName","src":"7440:6:21","type":""},{"name":"value0","nativeSrc":"7448:6:21","nodeType":"YulTypedName","src":"7448:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7459:4:21","nodeType":"YulTypedName","src":"7459:4:21","type":""}],"src":"7205:574:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBeanRouter_$2240__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Same tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid MON amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Transfer from failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0xB9AADE1C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xF1435D29 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xFE029156 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x127 JUMPI PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 SWAP5 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14D JUMPI PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 SWAP4 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ DUP1 PUSH2 0x194 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ JUMPDEST ISZERO PUSH2 0x226 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI PUSH2 0x1CD PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x201 JUMPI PUSH2 0x201 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x25B JUMPI PUSH2 0x25B PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A3 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2D7 JUMPI PUSH2 0x2D7 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x334 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x379 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x39A JUMPI PUSH2 0x39A PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4AB JUMPI DUP3 CALLVALUE EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081353D388185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x4A4 DUP5 DUP5 DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4C4 JUMPI PUSH2 0x4A4 DUP6 DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x4A4 DUP6 DUP6 DUP6 DUP6 PUSH2 0x98C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x525 JUMPI PUSH2 0x525 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH4 0x7FF36AB5 DUP7 DUP7 DUP6 CALLER PUSH2 0x59D TIMESTAMP PUSH2 0x4B0 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x603 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x616 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI PUSH2 0x626 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x689 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x813 JUMPI PUSH2 0x813 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH4 0x18CBAFE5 DUP7 DUP7 DUP6 CALLER PUSH2 0x89F TIMESTAMP PUSH2 0x4B0 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x906 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x689 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ DUP1 PUSH2 0xB18 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 EQ JUMPDEST ISZERO PUSH2 0xBAA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB51 JUMPI PUSH2 0xB51 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB85 JUMPI PUSH2 0xB85 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBDF JUMPI PUSH2 0xBDF PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x760AFE86E5DE5FA0EE542FC7B7B713E1C5425701 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC27 JUMPI PUSH2 0xC27 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xC5B JUMPI PUSH2 0xC5B PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xCA810D095E90DAAE6E867C19DF6D9A8C56DB2C89 PUSH4 0x38ED1739 DUP7 DUP7 DUP6 CALLER PUSH2 0xCA8 TIMESTAMP PUSH2 0x4B0 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD0F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD32 JUMPI PUSH2 0xD32 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD94 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE1 DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEF PUSH1 0x20 DUP6 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1E DUP6 PUSH2 0xDA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xE2C PUSH1 0x20 DUP7 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE82 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4D0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH2 0xE41 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF41 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xF7D JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xF64 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB2 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB2 PUSH2 0xF89 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xFE4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1048 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1214:5159:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1745:808;;;;;;;;;;-1:-1:-1;1745:808:16;;;;;:::i;:::-;;:::i;:::-;;;671:25:21;;;659:2;644:18;1745:808:16;;;;;;;;1462:97;;;;;;;;;;;;1516:42;1462:97;;;;;-1:-1:-1;;;;;891:32:21;;;873:51;;861:2;846:18;1462:97:16;707:223:21;1565:73:16;;;;;;;;;;;;1596:42;1565:73;;2585:734;;;;;;:::i;:::-;;:::i;1745:808::-;1872:17;1901:21;-1:-1:-1;;;;;1966:19:16;;1962:41;;1596:42;1987:16;;1962:41;-1:-1:-1;;;;;2017:17:16;;2013:37;;1596:42;2036:14;;2013:37;-1:-1:-1;;;;;2065:17:16;;1596:42;2065:17;;:36;;-1:-1:-1;;;;;;2086:15:16;;1596:42;2086:15;2065:36;2061:363;;;2124:16;;;2138:1;2124:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2124:16:16;2117:23;;2164:9;2154:4;2159:1;2154:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;2154:19:16;;;-1:-1:-1;;;;;2154:19:16;;;;;2197:7;2187:4;2192:1;2187:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;2187:17:16;;;-1:-1:-1;;;;;2187:17:16;;;;;2061:363;;;2305:16;;;2319:1;2305:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2305:16:16;2298:23;;2345:9;2335:4;2340:1;2335:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;2335:19:16;;;-1:-1:-1;;;;;2335:19:16;;;;;1596:42;2368:4;2373:1;2368:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;2368:14:16;;;-1:-1:-1;;;;;2368:14:16;;;;;2406:7;2396:4;2401:1;2396:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;2396:17:16;;;-1:-1:-1;;;;;2396:17:16;;;;;2061:363;2461:41;;-1:-1:-1;;;2461:41:16;;2434:24;;1516:42;;2461:25;;:41;;2487:8;;2497:4;;2461:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2461:41:16;;;;;;;;;;;;:::i;:::-;2434:68;;2519:7;2544:1;2527:7;:14;:18;;;;:::i;:::-;2519:27;;;;;;;;:::i;:::-;;;;;;;2512:34;;;;1745:808;;;;;:::o;2585:734::-;2739:17;2810:1;2799:8;:12;2791:43;;;;-1:-1:-1;;;2791:43:16;;4193:2:21;2791:43:16;;;4175:21:21;4232:2;4212:18;;;4205:30;-1:-1:-1;;;4251:18:21;;;4244:48;4309:18;;2791:43:16;;;;;;;;;2865:7;-1:-1:-1;;;;;2852:20:16;:9;-1:-1:-1;;;;;2852:20:16;;2844:44;;;;-1:-1:-1;;;2844:44:16;;4540:2:21;2844:44:16;;;4522:21:21;4579:2;4559:18;;;4552:30;-1:-1:-1;;;4598:18:21;;;4591:41;4649:18;;2844:44:16;4338:335:21;2844:44:16;-1:-1:-1;;;;;2938:19:16;;2934:379;;2994:8;2981:9;:21;2973:52;;;;-1:-1:-1;;;2973:52:16;;4880:2:21;2973:52:16;;;4862:21:21;4919:2;4899:18;;;4892:30;-1:-1:-1;;;4938:18:21;;;4931:48;4996:18;;2973:52:16;4678:342:21;2973:52:16;3046:50;3064:7;3073:8;3083:12;3046:17;:50::i;:::-;3039:57;;;;2934:379;-1:-1:-1;;;;;3117:17:16;;3113:200;;3157:52;3175:9;3186:8;3196:12;3157:17;:52::i;3113:200::-;3247:55;3259:9;3270:7;3279:8;3289:12;3247:11;:55::i;3113:200::-;2585:734;;;;;;:::o;3374:663::-;3571:16;;;3585:1;3571:16;;;;;;;;3506:7;;;;3571:16;3585:1;3571:16;;;;;;;;;;-1:-1:-1;3571:16:16;3547:40;;1596:42;3597:4;3602:1;3597:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;3597:14:16;;;-1:-1:-1;;;;;3597:14:16;;;;;3631:7;3621:4;3626:1;3621:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3621:17:16;;;:7;;;;;;;;;;;:17;3678:24;1516:42;3705:33;3746:8;3769:12;3795:4;3813:10;3837:22;:15;3855:4;3837:22;:::i;:::-;3705:164;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3705:164:16;;;;;;;;;;;;:::i;:::-;3678:191;;3880:17;3900:7;3925:1;3908:7;:14;:18;;;;:::i;:::-;3900:27;;;;;;;;:::i;:::-;;;;;;;3880:47;;3975:7;-1:-1:-1;;;;;3942:62:16;1686:1;-1:-1:-1;;;;;3942:62:16;3955:10;-1:-1:-1;;;;;3942:62:16;;3984:8;3994:9;3942:62;;;;;;5836:25:21;;;5892:2;5877:18;;5870:34;5824:2;5809:18;;5662:248;3942:62:16;;;;;;;;4021:9;3374:663;-1:-1:-1;;;;;;3374:663:16:o;4092:950::-;4303:67;;-1:-1:-1;;;4303:67:16;;4334:10;4303:67;;;6155:34:21;4354:4:16;6205:18:21;;;6198:43;6257:18;;;6250:34;;;4226:7:16;;-1:-1:-1;;;;;4303:30:16;;;;;6090:18:21;;4303:67:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4282:134;;;;-1:-1:-1;;;4282:134:16;;6779:2:21;4282:134:16;;;6761:21:21;6818:2;6798:18;;;6791:30;-1:-1:-1;;;6837:18:21;;;6830:50;6897:18;;4282:134:16;6577:344:21;4282:134:16;4453:57;;-1:-1:-1;;;4453:57:16;;1516:42;4453:57;;;7100:51:21;7167:18;;;7160:34;;;-1:-1:-1;;;;;4453:25:16;;;;;7073:18:21;;4453:57:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4567:16:16;;;4581:1;4567:16;;;;;;;;4543:21;;4567:16;;;;;;;;;;-1:-1:-1;4567:16:16;4543:40;;4603:9;4593:4;4598:1;4593:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;4593:19:16;;;-1:-1:-1;;;;;4593:19:16;;;;;1596:42;4622:4;4627:1;4622:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4622:14:16;;;:7;;;;;;;;;;;:14;4676:24;1516:42;4703:33;4750:8;4772:12;4798:4;4816:10;4840:22;:15;4858:4;4840:22;:::i;:::-;4703:169;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4703:169:16;;;;;;;;;;;;:::i;:::-;4676:196;;4883:17;4903:7;4928:1;4911:7;:14;:18;;;;:::i;:::-;4903:27;;;;;;;;:::i;:::-;;;;;;;4883:47;;1686:1;-1:-1:-1;;;;;4945:64:16;4970:9;-1:-1:-1;;;;;4945:64:16;4958:10;-1:-1:-1;;;;;4945:64:16;;4989:8;4999:9;4945:64;;;;;;5836:25:21;;;5892:2;5877:18;;5870:34;5824:2;5809:18;;5662:248;5096:1205:16;5326:67;;-1:-1:-1;;;5326:67:16;;5357:10;5326:67;;;6155:34:21;5377:4:16;6205:18:21;;;6198:43;6257:18;;;6250:34;;;5249:7:16;;-1:-1:-1;;;;;5326:30:16;;;;;6090:18:21;;5326:67:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5305:134;;;;-1:-1:-1;;;5305:134:16;;6779:2:21;5305:134:16;;;6761:21:21;6818:2;6798:18;;;6791:30;-1:-1:-1;;;6837:18:21;;;6830:50;6897:18;;5305:134:16;6577:344:21;5305:134:16;5476:57;;-1:-1:-1;;;5476:57:16;;1516:42;5476:57;;;7100:51:21;7167:18;;;7160:34;;;-1:-1:-1;;;;;5476:25:16;;;;;7073:18:21;;5476:57:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5566:21:16;-1:-1:-1;;;;;5601:17:16;;1596:42;5601:17;;:36;;-1:-1:-1;;;;;;5622:15:16;;1596:42;5622:15;5601:36;5597:300;;;5660:16;;;5674:1;5660:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5660:16:16;5653:23;;5700:9;5690:4;5695:1;5690:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;5690:19:16;;;-1:-1:-1;;;;;5690:19:16;;;;;5733:7;5723:4;5728:1;5723:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;5723:17:16;;;-1:-1:-1;;;;;5723:17:16;;;;;5597:300;;;5778:16;;;5792:1;5778:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5778:16:16;5771:23;;5818:9;5808:4;5813:1;5808:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;5808:19:16;;;-1:-1:-1;;;;;5808:19:16;;;;;1596:42;5841:4;5846:1;5841:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;5841:14:16;;;-1:-1:-1;;;;;5841:14:16;;;;;5879:7;5869:4;5874:1;5869:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;5869:17:16;;;-1:-1:-1;;;;;5869:17:16;;;;;5597:300;5931:24;1516:42;5958:36;6008:8;6030:12;6056:4;6074:10;6098:22;:15;6116:4;6098:22;:::i;:::-;5958:172;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5958:172:16;;;;;;;;;;;;:::i;:::-;5931:199;;6141:17;6161:7;6186:1;6169:7;:14;:18;;;;:::i;:::-;6161:27;;;;;;;;:::i;:::-;;;;;;;6141:47;;6239:7;-1:-1:-1;;;;;6203:65:16;6228:9;-1:-1:-1;;;;;6203:65:16;6216:10;-1:-1:-1;;;;;6203:65:16;;6248:8;6258:9;6203:65;;;;;;5836:25:21;;;5892:2;5877:18;;5870:34;5824:2;5809:18;;5662:248;6203:65:16;;;;;;;;6285:9;5096:1205;-1:-1:-1;;;;;;;5096:1205:16:o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;1143:397::-;1229:6;1237;1245;1253;1306:3;1294:9;1285:7;1281:23;1277:33;1274:53;;;1323:1;1320;1313:12;1274:53;1346:29;1365:9;1346:29;:::i;:::-;1336:39;;1394:38;1428:2;1417:9;1413:18;1394:38;:::i;:::-;1143:397;;1384:48;;-1:-1:-1;;;;1479:2:21;1464:18;;1451:32;;1530:2;1515:18;1502:32;;1143:397::o;1545:127::-;1606:10;1601:3;1597:20;1594:1;1587:31;1637:4;1634:1;1627:15;1661:4;1658:1;1651:15;1677:127;1738:10;1733:3;1729:20;1726:1;1719:31;1769:4;1766:1;1759:15;1793:4;1790:1;1783:15;1809:465;1862:3;1900:5;1894:12;1927:6;1922:3;1915:19;1953:4;1982;1977:3;1973:14;1966:21;;2021:4;2014:5;2010:16;2044:1;2054:195;2068:6;2065:1;2062:13;2054:195;;;2133:13;;-1:-1:-1;;;;;2129:39:21;2117:52;;2189:12;;;;2224:15;;;;2165:1;2083:9;2054:195;;;-1:-1:-1;2265:3:21;;1809:465;-1:-1:-1;;;;;1809:465:21:o;2279:332::-;2486:6;2475:9;2468:25;2529:2;2524;2513:9;2509:18;2502:30;2449:4;2549:56;2601:2;2590:9;2586:18;2578:6;2549:56;:::i;2616:1105::-;2711:6;2742:2;2785;2773:9;2764:7;2760:23;2756:32;2753:52;;;2801:1;2798;2791:12;2753:52;2834:9;2828:16;2863:18;2904:2;2896:6;2893:14;2890:34;;;2920:1;2917;2910:12;2890:34;2958:6;2947:9;2943:22;2933:32;;3003:7;2996:4;2992:2;2988:13;2984:27;2974:55;;3025:1;3022;3015:12;2974:55;3054:2;3048:9;3076:2;3072;3069:10;3066:36;;;3082:18;;:::i;:::-;3128:2;3125:1;3121:10;3160:2;3154:9;3223:2;3219:7;3214:2;3210;3206:11;3202:25;3194:6;3190:38;3278:6;3266:10;3263:22;3258:2;3246:10;3243:18;3240:46;3237:72;;;3289:18;;:::i;:::-;3325:2;3318:22;3375:18;;;3409:15;;;;-1:-1:-1;3451:11:21;;;3447:20;;;3479:19;;;3476:39;;;3511:1;3508;3501:12;3476:39;3535:11;;;;3555:135;3571:6;3566:3;3563:15;3555:135;;;3637:10;;3625:23;;3588:12;;;;3668;;;;3555:135;;;3709:6;2616:1105;-1:-1:-1;;;;;;;;2616:1105:21:o;3726:127::-;3787:10;3782:3;3778:20;3775:1;3768:31;3818:4;3815:1;3808:15;3842:4;3839:1;3832:15;3858:128;3925:9;;;3946:11;;;3943:37;;;3960:18;;:::i;:::-;3858:128;;;;:::o;5025:125::-;5090:9;;;5111:10;;;5108:36;;;5124:18;;:::i;5155:502::-;5418:6;5407:9;5400:25;5461:3;5456:2;5445:9;5441:18;5434:31;5381:4;5482:57;5534:3;5523:9;5519:19;5511:6;5482:57;:::i;:::-;-1:-1:-1;;;;;5575:32:21;;;;5570:2;5555:18;;5548:60;-1:-1:-1;5639:2:21;5624:18;5617:34;5474:65;5155:502;-1:-1:-1;;5155:502:21:o;6295:277::-;6362:6;6415:2;6403:9;6394:7;6390:23;6386:32;6383:52;;;6431:1;6428;6421:12;6383:52;6463:9;6457:16;6516:5;6509:13;6502:21;6495:5;6492:32;6482:60;;6538:1;6535;6528:12;6482:60;6561:5;6295:277;-1:-1:-1;;;6295:277:21:o;7205:574::-;7496:6;7485:9;7478:25;7539:6;7534:2;7523:9;7519:18;7512:34;7582:3;7577:2;7566:9;7562:18;7555:31;7459:4;7603:57;7655:3;7644:9;7640:19;7632:6;7603:57;:::i;:::-;-1:-1:-1;;;;;7696:32:21;;;;7691:2;7676:18;;7669:60;-1:-1:-1;7760:3:21;7745:19;7738:35;7595:65;7205:574;-1:-1:-1;;;7205:574:21:o"},"methodIdentifiers":{"BEAN_ROUTER()":"b9aade1c","WMON()":"f1435d29","getAmountOut(address,address,uint256)":"4aa06652","swap(address,address,uint256,uint256)":"fe029156"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BEAN_ROUTER\",\"outputs\":[{\"internalType\":\"contract IBeanRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WMON\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregator.sol\":\"MonadSwapAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MonadSwapAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregator {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n\\n    // Constants\\n    IBeanRouter public constant BEAN_ROUTER = IBeanRouter(0xCa810D095e90Daae6e867c19DF6D9A8C56db2c89);\\n    address public constant WMON = 0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701;\\n    address private constant NATIVE = address(0);\\n\\n    // Function untuk mendapatkan estimasi output\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path;\\n\\n        // Handle native MON\\n        if (fromToken == NATIVE) fromToken = WMON;\\n        if (toToken == NATIVE) toToken = WMON;\\n\\n        if (fromToken == WMON || toToken == WMON) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            // Jika bukan WMON, gunakan WMON sebagai perantara\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = WMON;\\n            path[2] = toToken;\\n        }\\n\\n        uint256[] memory amounts = BEAN_ROUTER.getAmountsOut(amountIn, path);\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    // Main swap function\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        // Check input\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        // Handle native MON swaps\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = WMON;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = WMON;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(BEAN_ROUTER), amountIn);\\n\\n        // Setup path\\n        address[] memory path;\\n        if (fromToken == WMON || toToken == WMON) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = WMON;\\n            path[2] = toToken;\\n        }\\n\\n        // Execute swap\\n        uint256[] memory amounts = BEAN_ROUTER.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Function untuk menerima MON\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x4a1f9542812d86a4674f91c47ef3a9e8ece91e8c5056c94f4f8787da0d1b0ebf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/MonadSwapAggregatorProxy.sol":{"MonadSwapAggregatorProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1411":{"entryPoint":null,"id":1411,"parameterSlots":3,"returnSlots":0},"@_2781":{"entryPoint":null,"id":2781,"parameterSlots":3,"returnSlots":0},"@_840":{"entryPoint":null,"id":840,"parameterSlots":2,"returnSlots":0},"@_changeAdmin_1065":{"entryPoint":147,"id":1065,"parameterSlots":1,"returnSlots":0},"@_getAdmin_1022":{"entryPoint":null,"id":1022,"parameterSlots":0,"returnSlots":1},"@_revert_2007":{"entryPoint":946,"id":2007,"parameterSlots":2,"returnSlots":0},"@_setAdmin_1048":{"entryPoint":374,"id":1048,"parameterSlots":1,"returnSlots":0},"@_setImplementation_907":{"entryPoint":532,"id":907,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_952":{"entryPoint":97,"id":952,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_922":{"entryPoint":261,"id":922,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1895":{"entryPoint":327,"id":1895,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1924":{"entryPoint":683,"id":1924,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2062":{"entryPoint":null,"id":2062,"parameterSlots":1,"returnSlots":1},"@isContract_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1963":{"entryPoint":810,"id":1963,"parameterSlots":4,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1080,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1042,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":1020,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3832:21","nodeType":"YulBlock","src":"0:3832:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"74:117:21","nodeType":"YulBlock","src":"74:117:21","statements":[{"nativeSrc":"84:22:21","nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:21","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"},"nativeSrc":"93:13:21","nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nativeSrc":"84:5:21","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nativeSrc":"169:16:21","nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:21","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:21","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:21","nodeType":"YulIdentifier","src":"171:6:21"},"nativeSrc":"171:12:21","nodeType":"YulFunctionCall","src":"171:12:21"},"nativeSrc":"171:12:21","nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:21","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nativeSrc":"139:5:21","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:21","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:21","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:21","nodeType":"YulIdentifier","src":"150:3:21"},"nativeSrc":"150:11:21","nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nativeSrc":"163:1:21","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:21","nodeType":"YulIdentifier","src":"146:3:21"},"nativeSrc":"146:19:21","nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nativeSrc":"135:3:21","nodeType":"YulIdentifier","src":"135:3:21"},"nativeSrc":"135:31:21","nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nativeSrc":"125:2:21","nodeType":"YulIdentifier","src":"125:2:21"},"nativeSrc":"125:42:21","nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nativeSrc":"118:6:21","nodeType":"YulIdentifier","src":"118:6:21"},"nativeSrc":"118:50:21","nodeType":"YulFunctionCall","src":"118:50:21"},"nativeSrc":"115:70:21","nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:21","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:21","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nativeSrc":"228:95:21","nodeType":"YulBlock","src":"228:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"245:1:21","nodeType":"YulLiteral","src":"245:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"252:3:21","nodeType":"YulLiteral","src":"252:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"257:10:21","nodeType":"YulLiteral","src":"257:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"248:3:21","nodeType":"YulIdentifier","src":"248:3:21"},"nativeSrc":"248:20:21","nodeType":"YulFunctionCall","src":"248:20:21"}],"functionName":{"name":"mstore","nativeSrc":"238:6:21","nodeType":"YulIdentifier","src":"238:6:21"},"nativeSrc":"238:31:21","nodeType":"YulFunctionCall","src":"238:31:21"},"nativeSrc":"238:31:21","nodeType":"YulExpressionStatement","src":"238:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"285:1:21","nodeType":"YulLiteral","src":"285:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"288:4:21","nodeType":"YulLiteral","src":"288:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"278:6:21","nodeType":"YulIdentifier","src":"278:6:21"},"nativeSrc":"278:15:21","nodeType":"YulFunctionCall","src":"278:15:21"},"nativeSrc":"278:15:21","nodeType":"YulExpressionStatement","src":"278:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"309:1:21","nodeType":"YulLiteral","src":"309:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"312:4:21","nodeType":"YulLiteral","src":"312:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"302:6:21","nodeType":"YulIdentifier","src":"302:6:21"},"nativeSrc":"302:15:21","nodeType":"YulFunctionCall","src":"302:15:21"},"nativeSrc":"302:15:21","nodeType":"YulExpressionStatement","src":"302:15:21"}]},"name":"panic_error_0x41","nativeSrc":"196:127:21","nodeType":"YulFunctionDefinition","src":"196:127:21"},{"body":{"nativeSrc":"394:184:21","nodeType":"YulBlock","src":"394:184:21","statements":[{"nativeSrc":"404:10:21","nodeType":"YulVariableDeclaration","src":"404:10:21","value":{"kind":"number","nativeSrc":"413:1:21","nodeType":"YulLiteral","src":"413:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"408:1:21","nodeType":"YulTypedName","src":"408:1:21","type":""}]},{"body":{"nativeSrc":"473:63:21","nodeType":"YulBlock","src":"473:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"498:3:21","nodeType":"YulIdentifier","src":"498:3:21"},{"name":"i","nativeSrc":"503:1:21","nodeType":"YulIdentifier","src":"503:1:21"}],"functionName":{"name":"add","nativeSrc":"494:3:21","nodeType":"YulIdentifier","src":"494:3:21"},"nativeSrc":"494:11:21","nodeType":"YulFunctionCall","src":"494:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"517:3:21","nodeType":"YulIdentifier","src":"517:3:21"},{"name":"i","nativeSrc":"522:1:21","nodeType":"YulIdentifier","src":"522:1:21"}],"functionName":{"name":"add","nativeSrc":"513:3:21","nodeType":"YulIdentifier","src":"513:3:21"},"nativeSrc":"513:11:21","nodeType":"YulFunctionCall","src":"513:11:21"}],"functionName":{"name":"mload","nativeSrc":"507:5:21","nodeType":"YulIdentifier","src":"507:5:21"},"nativeSrc":"507:18:21","nodeType":"YulFunctionCall","src":"507:18:21"}],"functionName":{"name":"mstore","nativeSrc":"487:6:21","nodeType":"YulIdentifier","src":"487:6:21"},"nativeSrc":"487:39:21","nodeType":"YulFunctionCall","src":"487:39:21"},"nativeSrc":"487:39:21","nodeType":"YulExpressionStatement","src":"487:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"434:1:21","nodeType":"YulIdentifier","src":"434:1:21"},{"name":"length","nativeSrc":"437:6:21","nodeType":"YulIdentifier","src":"437:6:21"}],"functionName":{"name":"lt","nativeSrc":"431:2:21","nodeType":"YulIdentifier","src":"431:2:21"},"nativeSrc":"431:13:21","nodeType":"YulFunctionCall","src":"431:13:21"},"nativeSrc":"423:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"445:19:21","nodeType":"YulBlock","src":"445:19:21","statements":[{"nativeSrc":"447:15:21","nodeType":"YulAssignment","src":"447:15:21","value":{"arguments":[{"name":"i","nativeSrc":"456:1:21","nodeType":"YulIdentifier","src":"456:1:21"},{"kind":"number","nativeSrc":"459:2:21","nodeType":"YulLiteral","src":"459:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"452:3:21","nodeType":"YulIdentifier","src":"452:3:21"},"nativeSrc":"452:10:21","nodeType":"YulFunctionCall","src":"452:10:21"},"variableNames":[{"name":"i","nativeSrc":"447:1:21","nodeType":"YulIdentifier","src":"447:1:21"}]}]},"pre":{"nativeSrc":"427:3:21","nodeType":"YulBlock","src":"427:3:21","statements":[]},"src":"423:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"556:3:21","nodeType":"YulIdentifier","src":"556:3:21"},{"name":"length","nativeSrc":"561:6:21","nodeType":"YulIdentifier","src":"561:6:21"}],"functionName":{"name":"add","nativeSrc":"552:3:21","nodeType":"YulIdentifier","src":"552:3:21"},"nativeSrc":"552:16:21","nodeType":"YulFunctionCall","src":"552:16:21"},{"kind":"number","nativeSrc":"570:1:21","nodeType":"YulLiteral","src":"570:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"545:6:21","nodeType":"YulIdentifier","src":"545:6:21"},"nativeSrc":"545:27:21","nodeType":"YulFunctionCall","src":"545:27:21"},"nativeSrc":"545:27:21","nodeType":"YulExpressionStatement","src":"545:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"328:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"372:3:21","nodeType":"YulTypedName","src":"372:3:21","type":""},{"name":"dst","nativeSrc":"377:3:21","nodeType":"YulTypedName","src":"377:3:21","type":""},{"name":"length","nativeSrc":"382:6:21","nodeType":"YulTypedName","src":"382:6:21","type":""}],"src":"328:250:21"},{"body":{"nativeSrc":"707:942:21","nodeType":"YulBlock","src":"707:942:21","statements":[{"body":{"nativeSrc":"753:16:21","nodeType":"YulBlock","src":"753:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"762:1:21","nodeType":"YulLiteral","src":"762:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"765:1:21","nodeType":"YulLiteral","src":"765:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"755:6:21","nodeType":"YulIdentifier","src":"755:6:21"},"nativeSrc":"755:12:21","nodeType":"YulFunctionCall","src":"755:12:21"},"nativeSrc":"755:12:21","nodeType":"YulExpressionStatement","src":"755:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"728:7:21","nodeType":"YulIdentifier","src":"728:7:21"},{"name":"headStart","nativeSrc":"737:9:21","nodeType":"YulIdentifier","src":"737:9:21"}],"functionName":{"name":"sub","nativeSrc":"724:3:21","nodeType":"YulIdentifier","src":"724:3:21"},"nativeSrc":"724:23:21","nodeType":"YulFunctionCall","src":"724:23:21"},{"kind":"number","nativeSrc":"749:2:21","nodeType":"YulLiteral","src":"749:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"720:3:21","nodeType":"YulIdentifier","src":"720:3:21"},"nativeSrc":"720:32:21","nodeType":"YulFunctionCall","src":"720:32:21"},"nativeSrc":"717:52:21","nodeType":"YulIf","src":"717:52:21"},{"nativeSrc":"778:50:21","nodeType":"YulAssignment","src":"778:50:21","value":{"arguments":[{"name":"headStart","nativeSrc":"818:9:21","nodeType":"YulIdentifier","src":"818:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"788:29:21","nodeType":"YulIdentifier","src":"788:29:21"},"nativeSrc":"788:40:21","nodeType":"YulFunctionCall","src":"788:40:21"},"variableNames":[{"name":"value0","nativeSrc":"778:6:21","nodeType":"YulIdentifier","src":"778:6:21"}]},{"nativeSrc":"837:59:21","nodeType":"YulAssignment","src":"837:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"881:9:21","nodeType":"YulIdentifier","src":"881:9:21"},{"kind":"number","nativeSrc":"892:2:21","nodeType":"YulLiteral","src":"892:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"877:3:21","nodeType":"YulIdentifier","src":"877:3:21"},"nativeSrc":"877:18:21","nodeType":"YulFunctionCall","src":"877:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"847:29:21","nodeType":"YulIdentifier","src":"847:29:21"},"nativeSrc":"847:49:21","nodeType":"YulFunctionCall","src":"847:49:21"},"variableNames":[{"name":"value1","nativeSrc":"837:6:21","nodeType":"YulIdentifier","src":"837:6:21"}]},{"nativeSrc":"905:39:21","nodeType":"YulVariableDeclaration","src":"905:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"929:9:21","nodeType":"YulIdentifier","src":"929:9:21"},{"kind":"number","nativeSrc":"940:2:21","nodeType":"YulLiteral","src":"940:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"925:3:21","nodeType":"YulIdentifier","src":"925:3:21"},"nativeSrc":"925:18:21","nodeType":"YulFunctionCall","src":"925:18:21"}],"functionName":{"name":"mload","nativeSrc":"919:5:21","nodeType":"YulIdentifier","src":"919:5:21"},"nativeSrc":"919:25:21","nodeType":"YulFunctionCall","src":"919:25:21"},"variables":[{"name":"offset","nativeSrc":"909:6:21","nodeType":"YulTypedName","src":"909:6:21","type":""}]},{"nativeSrc":"953:28:21","nodeType":"YulVariableDeclaration","src":"953:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"971:2:21","nodeType":"YulLiteral","src":"971:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"975:1:21","nodeType":"YulLiteral","src":"975:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"967:3:21","nodeType":"YulIdentifier","src":"967:3:21"},"nativeSrc":"967:10:21","nodeType":"YulFunctionCall","src":"967:10:21"},{"kind":"number","nativeSrc":"979:1:21","nodeType":"YulLiteral","src":"979:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"963:3:21","nodeType":"YulIdentifier","src":"963:3:21"},"nativeSrc":"963:18:21","nodeType":"YulFunctionCall","src":"963:18:21"},"variables":[{"name":"_1","nativeSrc":"957:2:21","nodeType":"YulTypedName","src":"957:2:21","type":""}]},{"body":{"nativeSrc":"1008:16:21","nodeType":"YulBlock","src":"1008:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1017:1:21","nodeType":"YulLiteral","src":"1017:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1020:1:21","nodeType":"YulLiteral","src":"1020:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1010:6:21","nodeType":"YulIdentifier","src":"1010:6:21"},"nativeSrc":"1010:12:21","nodeType":"YulFunctionCall","src":"1010:12:21"},"nativeSrc":"1010:12:21","nodeType":"YulExpressionStatement","src":"1010:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"996:6:21","nodeType":"YulIdentifier","src":"996:6:21"},{"name":"_1","nativeSrc":"1004:2:21","nodeType":"YulIdentifier","src":"1004:2:21"}],"functionName":{"name":"gt","nativeSrc":"993:2:21","nodeType":"YulIdentifier","src":"993:2:21"},"nativeSrc":"993:14:21","nodeType":"YulFunctionCall","src":"993:14:21"},"nativeSrc":"990:34:21","nodeType":"YulIf","src":"990:34:21"},{"nativeSrc":"1033:32:21","nodeType":"YulVariableDeclaration","src":"1033:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1047:9:21","nodeType":"YulIdentifier","src":"1047:9:21"},{"name":"offset","nativeSrc":"1058:6:21","nodeType":"YulIdentifier","src":"1058:6:21"}],"functionName":{"name":"add","nativeSrc":"1043:3:21","nodeType":"YulIdentifier","src":"1043:3:21"},"nativeSrc":"1043:22:21","nodeType":"YulFunctionCall","src":"1043:22:21"},"variables":[{"name":"_2","nativeSrc":"1037:2:21","nodeType":"YulTypedName","src":"1037:2:21","type":""}]},{"body":{"nativeSrc":"1113:16:21","nodeType":"YulBlock","src":"1113:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1122:1:21","nodeType":"YulLiteral","src":"1122:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1125:1:21","nodeType":"YulLiteral","src":"1125:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1115:6:21","nodeType":"YulIdentifier","src":"1115:6:21"},"nativeSrc":"1115:12:21","nodeType":"YulFunctionCall","src":"1115:12:21"},"nativeSrc":"1115:12:21","nodeType":"YulExpressionStatement","src":"1115:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1092:2:21","nodeType":"YulIdentifier","src":"1092:2:21"},{"kind":"number","nativeSrc":"1096:4:21","nodeType":"YulLiteral","src":"1096:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1088:3:21","nodeType":"YulIdentifier","src":"1088:3:21"},"nativeSrc":"1088:13:21","nodeType":"YulFunctionCall","src":"1088:13:21"},{"name":"dataEnd","nativeSrc":"1103:7:21","nodeType":"YulIdentifier","src":"1103:7:21"}],"functionName":{"name":"slt","nativeSrc":"1084:3:21","nodeType":"YulIdentifier","src":"1084:3:21"},"nativeSrc":"1084:27:21","nodeType":"YulFunctionCall","src":"1084:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1077:6:21","nodeType":"YulIdentifier","src":"1077:6:21"},"nativeSrc":"1077:35:21","nodeType":"YulFunctionCall","src":"1077:35:21"},"nativeSrc":"1074:55:21","nodeType":"YulIf","src":"1074:55:21"},{"nativeSrc":"1138:19:21","nodeType":"YulVariableDeclaration","src":"1138:19:21","value":{"arguments":[{"name":"_2","nativeSrc":"1154:2:21","nodeType":"YulIdentifier","src":"1154:2:21"}],"functionName":{"name":"mload","nativeSrc":"1148:5:21","nodeType":"YulIdentifier","src":"1148:5:21"},"nativeSrc":"1148:9:21","nodeType":"YulFunctionCall","src":"1148:9:21"},"variables":[{"name":"_3","nativeSrc":"1142:2:21","nodeType":"YulTypedName","src":"1142:2:21","type":""}]},{"body":{"nativeSrc":"1180:22:21","nodeType":"YulBlock","src":"1180:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1182:16:21","nodeType":"YulIdentifier","src":"1182:16:21"},"nativeSrc":"1182:18:21","nodeType":"YulFunctionCall","src":"1182:18:21"},"nativeSrc":"1182:18:21","nodeType":"YulExpressionStatement","src":"1182:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"1172:2:21","nodeType":"YulIdentifier","src":"1172:2:21"},{"name":"_1","nativeSrc":"1176:2:21","nodeType":"YulIdentifier","src":"1176:2:21"}],"functionName":{"name":"gt","nativeSrc":"1169:2:21","nodeType":"YulIdentifier","src":"1169:2:21"},"nativeSrc":"1169:10:21","nodeType":"YulFunctionCall","src":"1169:10:21"},"nativeSrc":"1166:36:21","nodeType":"YulIf","src":"1166:36:21"},{"nativeSrc":"1211:17:21","nodeType":"YulVariableDeclaration","src":"1211:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"1225:2:21","nodeType":"YulLiteral","src":"1225:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1221:3:21","nodeType":"YulIdentifier","src":"1221:3:21"},"nativeSrc":"1221:7:21","nodeType":"YulFunctionCall","src":"1221:7:21"},"variables":[{"name":"_4","nativeSrc":"1215:2:21","nodeType":"YulTypedName","src":"1215:2:21","type":""}]},{"nativeSrc":"1237:23:21","nodeType":"YulVariableDeclaration","src":"1237:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"1257:2:21","nodeType":"YulLiteral","src":"1257:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1251:5:21","nodeType":"YulIdentifier","src":"1251:5:21"},"nativeSrc":"1251:9:21","nodeType":"YulFunctionCall","src":"1251:9:21"},"variables":[{"name":"memPtr","nativeSrc":"1241:6:21","nodeType":"YulTypedName","src":"1241:6:21","type":""}]},{"nativeSrc":"1269:71:21","nodeType":"YulVariableDeclaration","src":"1269:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1291:6:21","nodeType":"YulIdentifier","src":"1291:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"1315:2:21","nodeType":"YulIdentifier","src":"1315:2:21"},{"kind":"number","nativeSrc":"1319:4:21","nodeType":"YulLiteral","src":"1319:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1311:3:21","nodeType":"YulIdentifier","src":"1311:3:21"},"nativeSrc":"1311:13:21","nodeType":"YulFunctionCall","src":"1311:13:21"},{"name":"_4","nativeSrc":"1326:2:21","nodeType":"YulIdentifier","src":"1326:2:21"}],"functionName":{"name":"and","nativeSrc":"1307:3:21","nodeType":"YulIdentifier","src":"1307:3:21"},"nativeSrc":"1307:22:21","nodeType":"YulFunctionCall","src":"1307:22:21"},{"kind":"number","nativeSrc":"1331:2:21","nodeType":"YulLiteral","src":"1331:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"1303:3:21","nodeType":"YulIdentifier","src":"1303:3:21"},"nativeSrc":"1303:31:21","nodeType":"YulFunctionCall","src":"1303:31:21"},{"name":"_4","nativeSrc":"1336:2:21","nodeType":"YulIdentifier","src":"1336:2:21"}],"functionName":{"name":"and","nativeSrc":"1299:3:21","nodeType":"YulIdentifier","src":"1299:3:21"},"nativeSrc":"1299:40:21","nodeType":"YulFunctionCall","src":"1299:40:21"}],"functionName":{"name":"add","nativeSrc":"1287:3:21","nodeType":"YulIdentifier","src":"1287:3:21"},"nativeSrc":"1287:53:21","nodeType":"YulFunctionCall","src":"1287:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1273:10:21","nodeType":"YulTypedName","src":"1273:10:21","type":""}]},{"body":{"nativeSrc":"1399:22:21","nodeType":"YulBlock","src":"1399:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1401:16:21","nodeType":"YulIdentifier","src":"1401:16:21"},"nativeSrc":"1401:18:21","nodeType":"YulFunctionCall","src":"1401:18:21"},"nativeSrc":"1401:18:21","nodeType":"YulExpressionStatement","src":"1401:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1358:10:21","nodeType":"YulIdentifier","src":"1358:10:21"},{"name":"_1","nativeSrc":"1370:2:21","nodeType":"YulIdentifier","src":"1370:2:21"}],"functionName":{"name":"gt","nativeSrc":"1355:2:21","nodeType":"YulIdentifier","src":"1355:2:21"},"nativeSrc":"1355:18:21","nodeType":"YulFunctionCall","src":"1355:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1378:10:21","nodeType":"YulIdentifier","src":"1378:10:21"},{"name":"memPtr","nativeSrc":"1390:6:21","nodeType":"YulIdentifier","src":"1390:6:21"}],"functionName":{"name":"lt","nativeSrc":"1375:2:21","nodeType":"YulIdentifier","src":"1375:2:21"},"nativeSrc":"1375:22:21","nodeType":"YulFunctionCall","src":"1375:22:21"}],"functionName":{"name":"or","nativeSrc":"1352:2:21","nodeType":"YulIdentifier","src":"1352:2:21"},"nativeSrc":"1352:46:21","nodeType":"YulFunctionCall","src":"1352:46:21"},"nativeSrc":"1349:72:21","nodeType":"YulIf","src":"1349:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1437:2:21","nodeType":"YulLiteral","src":"1437:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1441:10:21","nodeType":"YulIdentifier","src":"1441:10:21"}],"functionName":{"name":"mstore","nativeSrc":"1430:6:21","nodeType":"YulIdentifier","src":"1430:6:21"},"nativeSrc":"1430:22:21","nodeType":"YulFunctionCall","src":"1430:22:21"},"nativeSrc":"1430:22:21","nodeType":"YulExpressionStatement","src":"1430:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1468:6:21","nodeType":"YulIdentifier","src":"1468:6:21"},{"name":"_3","nativeSrc":"1476:2:21","nodeType":"YulIdentifier","src":"1476:2:21"}],"functionName":{"name":"mstore","nativeSrc":"1461:6:21","nodeType":"YulIdentifier","src":"1461:6:21"},"nativeSrc":"1461:18:21","nodeType":"YulFunctionCall","src":"1461:18:21"},"nativeSrc":"1461:18:21","nodeType":"YulExpressionStatement","src":"1461:18:21"},{"body":{"nativeSrc":"1525:16:21","nodeType":"YulBlock","src":"1525:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1534:1:21","nodeType":"YulLiteral","src":"1534:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1537:1:21","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1527:6:21","nodeType":"YulIdentifier","src":"1527:6:21"},"nativeSrc":"1527:12:21","nodeType":"YulFunctionCall","src":"1527:12:21"},"nativeSrc":"1527:12:21","nodeType":"YulExpressionStatement","src":"1527:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1502:2:21","nodeType":"YulIdentifier","src":"1502:2:21"},{"name":"_3","nativeSrc":"1506:2:21","nodeType":"YulIdentifier","src":"1506:2:21"}],"functionName":{"name":"add","nativeSrc":"1498:3:21","nodeType":"YulIdentifier","src":"1498:3:21"},"nativeSrc":"1498:11:21","nodeType":"YulFunctionCall","src":"1498:11:21"},{"kind":"number","nativeSrc":"1511:2:21","nodeType":"YulLiteral","src":"1511:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1494:3:21","nodeType":"YulIdentifier","src":"1494:3:21"},"nativeSrc":"1494:20:21","nodeType":"YulFunctionCall","src":"1494:20:21"},{"name":"dataEnd","nativeSrc":"1516:7:21","nodeType":"YulIdentifier","src":"1516:7:21"}],"functionName":{"name":"gt","nativeSrc":"1491:2:21","nodeType":"YulIdentifier","src":"1491:2:21"},"nativeSrc":"1491:33:21","nodeType":"YulFunctionCall","src":"1491:33:21"},"nativeSrc":"1488:53:21","nodeType":"YulIf","src":"1488:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1589:2:21","nodeType":"YulIdentifier","src":"1589:2:21"},{"kind":"number","nativeSrc":"1593:2:21","nodeType":"YulLiteral","src":"1593:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1585:3:21","nodeType":"YulIdentifier","src":"1585:3:21"},"nativeSrc":"1585:11:21","nodeType":"YulFunctionCall","src":"1585:11:21"},{"arguments":[{"name":"memPtr","nativeSrc":"1602:6:21","nodeType":"YulIdentifier","src":"1602:6:21"},{"kind":"number","nativeSrc":"1610:2:21","nodeType":"YulLiteral","src":"1610:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1598:3:21","nodeType":"YulIdentifier","src":"1598:3:21"},"nativeSrc":"1598:15:21","nodeType":"YulFunctionCall","src":"1598:15:21"},{"name":"_3","nativeSrc":"1615:2:21","nodeType":"YulIdentifier","src":"1615:2:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1550:34:21","nodeType":"YulIdentifier","src":"1550:34:21"},"nativeSrc":"1550:68:21","nodeType":"YulFunctionCall","src":"1550:68:21"},"nativeSrc":"1550:68:21","nodeType":"YulExpressionStatement","src":"1550:68:21"},{"nativeSrc":"1627:16:21","nodeType":"YulAssignment","src":"1627:16:21","value":{"name":"memPtr","nativeSrc":"1637:6:21","nodeType":"YulIdentifier","src":"1637:6:21"},"variableNames":[{"name":"value2","nativeSrc":"1627:6:21","nodeType":"YulIdentifier","src":"1627:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory","nativeSrc":"583:1066:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"657:9:21","nodeType":"YulTypedName","src":"657:9:21","type":""},{"name":"dataEnd","nativeSrc":"668:7:21","nodeType":"YulTypedName","src":"668:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"680:6:21","nodeType":"YulTypedName","src":"680:6:21","type":""},{"name":"value1","nativeSrc":"688:6:21","nodeType":"YulTypedName","src":"688:6:21","type":""},{"name":"value2","nativeSrc":"696:6:21","nodeType":"YulTypedName","src":"696:6:21","type":""}],"src":"583:1066:21"},{"body":{"nativeSrc":"1783:175:21","nodeType":"YulBlock","src":"1783:175:21","statements":[{"nativeSrc":"1793:26:21","nodeType":"YulAssignment","src":"1793:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1805:9:21","nodeType":"YulIdentifier","src":"1805:9:21"},{"kind":"number","nativeSrc":"1816:2:21","nodeType":"YulLiteral","src":"1816:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1801:3:21","nodeType":"YulIdentifier","src":"1801:3:21"},"nativeSrc":"1801:18:21","nodeType":"YulFunctionCall","src":"1801:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1793:4:21","nodeType":"YulIdentifier","src":"1793:4:21"}]},{"nativeSrc":"1828:29:21","nodeType":"YulVariableDeclaration","src":"1828:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1846:3:21","nodeType":"YulLiteral","src":"1846:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1851:1:21","nodeType":"YulLiteral","src":"1851:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1842:3:21","nodeType":"YulIdentifier","src":"1842:3:21"},"nativeSrc":"1842:11:21","nodeType":"YulFunctionCall","src":"1842:11:21"},{"kind":"number","nativeSrc":"1855:1:21","nodeType":"YulLiteral","src":"1855:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1838:3:21","nodeType":"YulIdentifier","src":"1838:3:21"},"nativeSrc":"1838:19:21","nodeType":"YulFunctionCall","src":"1838:19:21"},"variables":[{"name":"_1","nativeSrc":"1832:2:21","nodeType":"YulTypedName","src":"1832:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1873:9:21","nodeType":"YulIdentifier","src":"1873:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1888:6:21","nodeType":"YulIdentifier","src":"1888:6:21"},{"name":"_1","nativeSrc":"1896:2:21","nodeType":"YulIdentifier","src":"1896:2:21"}],"functionName":{"name":"and","nativeSrc":"1884:3:21","nodeType":"YulIdentifier","src":"1884:3:21"},"nativeSrc":"1884:15:21","nodeType":"YulFunctionCall","src":"1884:15:21"}],"functionName":{"name":"mstore","nativeSrc":"1866:6:21","nodeType":"YulIdentifier","src":"1866:6:21"},"nativeSrc":"1866:34:21","nodeType":"YulFunctionCall","src":"1866:34:21"},"nativeSrc":"1866:34:21","nodeType":"YulExpressionStatement","src":"1866:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1920:9:21","nodeType":"YulIdentifier","src":"1920:9:21"},{"kind":"number","nativeSrc":"1931:2:21","nodeType":"YulLiteral","src":"1931:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1916:3:21","nodeType":"YulIdentifier","src":"1916:3:21"},"nativeSrc":"1916:18:21","nodeType":"YulFunctionCall","src":"1916:18:21"},{"arguments":[{"name":"value1","nativeSrc":"1940:6:21","nodeType":"YulIdentifier","src":"1940:6:21"},{"name":"_1","nativeSrc":"1948:2:21","nodeType":"YulIdentifier","src":"1948:2:21"}],"functionName":{"name":"and","nativeSrc":"1936:3:21","nodeType":"YulIdentifier","src":"1936:3:21"},"nativeSrc":"1936:15:21","nodeType":"YulFunctionCall","src":"1936:15:21"}],"functionName":{"name":"mstore","nativeSrc":"1909:6:21","nodeType":"YulIdentifier","src":"1909:6:21"},"nativeSrc":"1909:43:21","nodeType":"YulFunctionCall","src":"1909:43:21"},"nativeSrc":"1909:43:21","nodeType":"YulExpressionStatement","src":"1909:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"1654:304:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1744:9:21","nodeType":"YulTypedName","src":"1744:9:21","type":""},{"name":"value1","nativeSrc":"1755:6:21","nodeType":"YulTypedName","src":"1755:6:21","type":""},{"name":"value0","nativeSrc":"1763:6:21","nodeType":"YulTypedName","src":"1763:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1774:4:21","nodeType":"YulTypedName","src":"1774:4:21","type":""}],"src":"1654:304:21"},{"body":{"nativeSrc":"2137:228:21","nodeType":"YulBlock","src":"2137:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2154:9:21","nodeType":"YulIdentifier","src":"2154:9:21"},{"kind":"number","nativeSrc":"2165:2:21","nodeType":"YulLiteral","src":"2165:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2147:6:21","nodeType":"YulIdentifier","src":"2147:6:21"},"nativeSrc":"2147:21:21","nodeType":"YulFunctionCall","src":"2147:21:21"},"nativeSrc":"2147:21:21","nodeType":"YulExpressionStatement","src":"2147:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2188:9:21","nodeType":"YulIdentifier","src":"2188:9:21"},{"kind":"number","nativeSrc":"2199:2:21","nodeType":"YulLiteral","src":"2199:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2184:3:21","nodeType":"YulIdentifier","src":"2184:3:21"},"nativeSrc":"2184:18:21","nodeType":"YulFunctionCall","src":"2184:18:21"},{"kind":"number","nativeSrc":"2204:2:21","nodeType":"YulLiteral","src":"2204:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"2177:6:21","nodeType":"YulIdentifier","src":"2177:6:21"},"nativeSrc":"2177:30:21","nodeType":"YulFunctionCall","src":"2177:30:21"},"nativeSrc":"2177:30:21","nodeType":"YulExpressionStatement","src":"2177:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2227:9:21","nodeType":"YulIdentifier","src":"2227:9:21"},{"kind":"number","nativeSrc":"2238:2:21","nodeType":"YulLiteral","src":"2238:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2223:3:21","nodeType":"YulIdentifier","src":"2223:3:21"},"nativeSrc":"2223:18:21","nodeType":"YulFunctionCall","src":"2223:18:21"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nativeSrc":"2243:34:21","nodeType":"YulLiteral","src":"2243:34:21","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"2216:6:21","nodeType":"YulIdentifier","src":"2216:6:21"},"nativeSrc":"2216:62:21","nodeType":"YulFunctionCall","src":"2216:62:21"},"nativeSrc":"2216:62:21","nodeType":"YulExpressionStatement","src":"2216:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2298:9:21","nodeType":"YulIdentifier","src":"2298:9:21"},{"kind":"number","nativeSrc":"2309:2:21","nodeType":"YulLiteral","src":"2309:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2294:3:21","nodeType":"YulIdentifier","src":"2294:3:21"},"nativeSrc":"2294:18:21","nodeType":"YulFunctionCall","src":"2294:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"2314:8:21","nodeType":"YulLiteral","src":"2314:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"2287:6:21","nodeType":"YulIdentifier","src":"2287:6:21"},"nativeSrc":"2287:36:21","nodeType":"YulFunctionCall","src":"2287:36:21"},"nativeSrc":"2287:36:21","nodeType":"YulExpressionStatement","src":"2287:36:21"},{"nativeSrc":"2332:27:21","nodeType":"YulAssignment","src":"2332:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2344:9:21","nodeType":"YulIdentifier","src":"2344:9:21"},{"kind":"number","nativeSrc":"2355:3:21","nodeType":"YulLiteral","src":"2355:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2340:3:21","nodeType":"YulIdentifier","src":"2340:3:21"},"nativeSrc":"2340:19:21","nodeType":"YulFunctionCall","src":"2340:19:21"},"variableNames":[{"name":"tail","nativeSrc":"2332:4:21","nodeType":"YulIdentifier","src":"2332:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1963:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2114:9:21","nodeType":"YulTypedName","src":"2114:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2128:4:21","nodeType":"YulTypedName","src":"2128:4:21","type":""}],"src":"1963:402:21"},{"body":{"nativeSrc":"2544:235:21","nodeType":"YulBlock","src":"2544:235:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2561:9:21","nodeType":"YulIdentifier","src":"2561:9:21"},{"kind":"number","nativeSrc":"2572:2:21","nodeType":"YulLiteral","src":"2572:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2554:6:21","nodeType":"YulIdentifier","src":"2554:6:21"},"nativeSrc":"2554:21:21","nodeType":"YulFunctionCall","src":"2554:21:21"},"nativeSrc":"2554:21:21","nodeType":"YulExpressionStatement","src":"2554:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2595:9:21","nodeType":"YulIdentifier","src":"2595:9:21"},{"kind":"number","nativeSrc":"2606:2:21","nodeType":"YulLiteral","src":"2606:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2591:3:21","nodeType":"YulIdentifier","src":"2591:3:21"},"nativeSrc":"2591:18:21","nodeType":"YulFunctionCall","src":"2591:18:21"},{"kind":"number","nativeSrc":"2611:2:21","nodeType":"YulLiteral","src":"2611:2:21","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"2584:6:21","nodeType":"YulIdentifier","src":"2584:6:21"},"nativeSrc":"2584:30:21","nodeType":"YulFunctionCall","src":"2584:30:21"},"nativeSrc":"2584:30:21","nodeType":"YulExpressionStatement","src":"2584:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2634:9:21","nodeType":"YulIdentifier","src":"2634:9:21"},{"kind":"number","nativeSrc":"2645:2:21","nodeType":"YulLiteral","src":"2645:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2630:3:21","nodeType":"YulIdentifier","src":"2630:3:21"},"nativeSrc":"2630:18:21","nodeType":"YulFunctionCall","src":"2630:18:21"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"2650:34:21","nodeType":"YulLiteral","src":"2650:34:21","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"2623:6:21","nodeType":"YulIdentifier","src":"2623:6:21"},"nativeSrc":"2623:62:21","nodeType":"YulFunctionCall","src":"2623:62:21"},"nativeSrc":"2623:62:21","nodeType":"YulExpressionStatement","src":"2623:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2705:9:21","nodeType":"YulIdentifier","src":"2705:9:21"},{"kind":"number","nativeSrc":"2716:2:21","nodeType":"YulLiteral","src":"2716:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2701:3:21","nodeType":"YulIdentifier","src":"2701:3:21"},"nativeSrc":"2701:18:21","nodeType":"YulFunctionCall","src":"2701:18:21"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"2721:15:21","nodeType":"YulLiteral","src":"2721:15:21","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"2694:6:21","nodeType":"YulIdentifier","src":"2694:6:21"},"nativeSrc":"2694:43:21","nodeType":"YulFunctionCall","src":"2694:43:21"},"nativeSrc":"2694:43:21","nodeType":"YulExpressionStatement","src":"2694:43:21"},{"nativeSrc":"2746:27:21","nodeType":"YulAssignment","src":"2746:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2758:9:21","nodeType":"YulIdentifier","src":"2758:9:21"},{"kind":"number","nativeSrc":"2769:3:21","nodeType":"YulLiteral","src":"2769:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2754:3:21","nodeType":"YulIdentifier","src":"2754:3:21"},"nativeSrc":"2754:19:21","nodeType":"YulFunctionCall","src":"2754:19:21"},"variableNames":[{"name":"tail","nativeSrc":"2746:4:21","nodeType":"YulIdentifier","src":"2746:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2370:409:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2521:9:21","nodeType":"YulTypedName","src":"2521:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2535:4:21","nodeType":"YulTypedName","src":"2535:4:21","type":""}],"src":"2370:409:21"},{"body":{"nativeSrc":"2921:150:21","nodeType":"YulBlock","src":"2921:150:21","statements":[{"nativeSrc":"2931:27:21","nodeType":"YulVariableDeclaration","src":"2931:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"2951:6:21","nodeType":"YulIdentifier","src":"2951:6:21"}],"functionName":{"name":"mload","nativeSrc":"2945:5:21","nodeType":"YulIdentifier","src":"2945:5:21"},"nativeSrc":"2945:13:21","nodeType":"YulFunctionCall","src":"2945:13:21"},"variables":[{"name":"length","nativeSrc":"2935:6:21","nodeType":"YulTypedName","src":"2935:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3006:6:21","nodeType":"YulIdentifier","src":"3006:6:21"},{"kind":"number","nativeSrc":"3014:4:21","nodeType":"YulLiteral","src":"3014:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3002:3:21","nodeType":"YulIdentifier","src":"3002:3:21"},"nativeSrc":"3002:17:21","nodeType":"YulFunctionCall","src":"3002:17:21"},{"name":"pos","nativeSrc":"3021:3:21","nodeType":"YulIdentifier","src":"3021:3:21"},{"name":"length","nativeSrc":"3026:6:21","nodeType":"YulIdentifier","src":"3026:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2967:34:21","nodeType":"YulIdentifier","src":"2967:34:21"},"nativeSrc":"2967:66:21","nodeType":"YulFunctionCall","src":"2967:66:21"},"nativeSrc":"2967:66:21","nodeType":"YulExpressionStatement","src":"2967:66:21"},{"nativeSrc":"3042:23:21","nodeType":"YulAssignment","src":"3042:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"3053:3:21","nodeType":"YulIdentifier","src":"3053:3:21"},{"name":"length","nativeSrc":"3058:6:21","nodeType":"YulIdentifier","src":"3058:6:21"}],"functionName":{"name":"add","nativeSrc":"3049:3:21","nodeType":"YulIdentifier","src":"3049:3:21"},"nativeSrc":"3049:16:21","nodeType":"YulFunctionCall","src":"3049:16:21"},"variableNames":[{"name":"end","nativeSrc":"3042:3:21","nodeType":"YulIdentifier","src":"3042:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"2784:287:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2897:3:21","nodeType":"YulTypedName","src":"2897:3:21","type":""},{"name":"value0","nativeSrc":"2902:6:21","nodeType":"YulTypedName","src":"2902:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2913:3:21","nodeType":"YulTypedName","src":"2913:3:21","type":""}],"src":"2784:287:21"},{"body":{"nativeSrc":"3250:179:21","nodeType":"YulBlock","src":"3250:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3267:9:21","nodeType":"YulIdentifier","src":"3267:9:21"},{"kind":"number","nativeSrc":"3278:2:21","nodeType":"YulLiteral","src":"3278:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3260:6:21","nodeType":"YulIdentifier","src":"3260:6:21"},"nativeSrc":"3260:21:21","nodeType":"YulFunctionCall","src":"3260:21:21"},"nativeSrc":"3260:21:21","nodeType":"YulExpressionStatement","src":"3260:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3301:9:21","nodeType":"YulIdentifier","src":"3301:9:21"},{"kind":"number","nativeSrc":"3312:2:21","nodeType":"YulLiteral","src":"3312:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3297:3:21","nodeType":"YulIdentifier","src":"3297:3:21"},"nativeSrc":"3297:18:21","nodeType":"YulFunctionCall","src":"3297:18:21"},{"kind":"number","nativeSrc":"3317:2:21","nodeType":"YulLiteral","src":"3317:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"3290:6:21","nodeType":"YulIdentifier","src":"3290:6:21"},"nativeSrc":"3290:30:21","nodeType":"YulFunctionCall","src":"3290:30:21"},"nativeSrc":"3290:30:21","nodeType":"YulExpressionStatement","src":"3290:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3340:9:21","nodeType":"YulIdentifier","src":"3340:9:21"},{"kind":"number","nativeSrc":"3351:2:21","nodeType":"YulLiteral","src":"3351:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3336:3:21","nodeType":"YulIdentifier","src":"3336:3:21"},"nativeSrc":"3336:18:21","nodeType":"YulFunctionCall","src":"3336:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"3356:31:21","nodeType":"YulLiteral","src":"3356:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"3329:6:21","nodeType":"YulIdentifier","src":"3329:6:21"},"nativeSrc":"3329:59:21","nodeType":"YulFunctionCall","src":"3329:59:21"},"nativeSrc":"3329:59:21","nodeType":"YulExpressionStatement","src":"3329:59:21"},{"nativeSrc":"3397:26:21","nodeType":"YulAssignment","src":"3397:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3409:9:21","nodeType":"YulIdentifier","src":"3409:9:21"},{"kind":"number","nativeSrc":"3420:2:21","nodeType":"YulLiteral","src":"3420:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3405:3:21","nodeType":"YulIdentifier","src":"3405:3:21"},"nativeSrc":"3405:18:21","nodeType":"YulFunctionCall","src":"3405:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3397:4:21","nodeType":"YulIdentifier","src":"3397:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3076:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3227:9:21","nodeType":"YulTypedName","src":"3227:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3241:4:21","nodeType":"YulTypedName","src":"3241:4:21","type":""}],"src":"3076:353:21"},{"body":{"nativeSrc":"3555:275:21","nodeType":"YulBlock","src":"3555:275:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3572:9:21","nodeType":"YulIdentifier","src":"3572:9:21"},{"kind":"number","nativeSrc":"3583:2:21","nodeType":"YulLiteral","src":"3583:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3565:6:21","nodeType":"YulIdentifier","src":"3565:6:21"},"nativeSrc":"3565:21:21","nodeType":"YulFunctionCall","src":"3565:21:21"},"nativeSrc":"3565:21:21","nodeType":"YulExpressionStatement","src":"3565:21:21"},{"nativeSrc":"3595:27:21","nodeType":"YulVariableDeclaration","src":"3595:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"3615:6:21","nodeType":"YulIdentifier","src":"3615:6:21"}],"functionName":{"name":"mload","nativeSrc":"3609:5:21","nodeType":"YulIdentifier","src":"3609:5:21"},"nativeSrc":"3609:13:21","nodeType":"YulFunctionCall","src":"3609:13:21"},"variables":[{"name":"length","nativeSrc":"3599:6:21","nodeType":"YulTypedName","src":"3599:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3642:9:21","nodeType":"YulIdentifier","src":"3642:9:21"},{"kind":"number","nativeSrc":"3653:2:21","nodeType":"YulLiteral","src":"3653:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3638:3:21","nodeType":"YulIdentifier","src":"3638:3:21"},"nativeSrc":"3638:18:21","nodeType":"YulFunctionCall","src":"3638:18:21"},{"name":"length","nativeSrc":"3658:6:21","nodeType":"YulIdentifier","src":"3658:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3631:6:21","nodeType":"YulIdentifier","src":"3631:6:21"},"nativeSrc":"3631:34:21","nodeType":"YulFunctionCall","src":"3631:34:21"},"nativeSrc":"3631:34:21","nodeType":"YulExpressionStatement","src":"3631:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3713:6:21","nodeType":"YulIdentifier","src":"3713:6:21"},{"kind":"number","nativeSrc":"3721:2:21","nodeType":"YulLiteral","src":"3721:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3709:3:21","nodeType":"YulIdentifier","src":"3709:3:21"},"nativeSrc":"3709:15:21","nodeType":"YulFunctionCall","src":"3709:15:21"},{"arguments":[{"name":"headStart","nativeSrc":"3730:9:21","nodeType":"YulIdentifier","src":"3730:9:21"},{"kind":"number","nativeSrc":"3741:2:21","nodeType":"YulLiteral","src":"3741:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3726:3:21","nodeType":"YulIdentifier","src":"3726:3:21"},"nativeSrc":"3726:18:21","nodeType":"YulFunctionCall","src":"3726:18:21"},{"name":"length","nativeSrc":"3746:6:21","nodeType":"YulIdentifier","src":"3746:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3674:34:21","nodeType":"YulIdentifier","src":"3674:34:21"},"nativeSrc":"3674:79:21","nodeType":"YulFunctionCall","src":"3674:79:21"},"nativeSrc":"3674:79:21","nodeType":"YulExpressionStatement","src":"3674:79:21"},{"nativeSrc":"3762:62:21","nodeType":"YulAssignment","src":"3762:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3778:9:21","nodeType":"YulIdentifier","src":"3778:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3797:6:21","nodeType":"YulIdentifier","src":"3797:6:21"},{"kind":"number","nativeSrc":"3805:2:21","nodeType":"YulLiteral","src":"3805:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3793:3:21","nodeType":"YulIdentifier","src":"3793:3:21"},"nativeSrc":"3793:15:21","nodeType":"YulFunctionCall","src":"3793:15:21"},{"arguments":[{"kind":"number","nativeSrc":"3814:2:21","nodeType":"YulLiteral","src":"3814:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3810:3:21","nodeType":"YulIdentifier","src":"3810:3:21"},"nativeSrc":"3810:7:21","nodeType":"YulFunctionCall","src":"3810:7:21"}],"functionName":{"name":"and","nativeSrc":"3789:3:21","nodeType":"YulIdentifier","src":"3789:3:21"},"nativeSrc":"3789:29:21","nodeType":"YulFunctionCall","src":"3789:29:21"}],"functionName":{"name":"add","nativeSrc":"3774:3:21","nodeType":"YulIdentifier","src":"3774:3:21"},"nativeSrc":"3774:45:21","nodeType":"YulFunctionCall","src":"3774:45:21"},{"kind":"number","nativeSrc":"3821:2:21","nodeType":"YulLiteral","src":"3821:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3770:3:21","nodeType":"YulIdentifier","src":"3770:3:21"},"nativeSrc":"3770:54:21","nodeType":"YulFunctionCall","src":"3770:54:21"},"variableNames":[{"name":"tail","nativeSrc":"3762:4:21","nodeType":"YulIdentifier","src":"3762:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3434:396:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3524:9:21","nodeType":"YulTypedName","src":"3524:9:21","type":""},{"name":"value0","nativeSrc":"3535:6:21","nodeType":"YulTypedName","src":"3535:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3546:4:21","nodeType":"YulTypedName","src":"3546:4:21","type":""}],"src":"3434:396:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value2 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1967: new admin is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000e2538038062000e25833981016040819052620000349162000438565b8282828281620000478282600062000061565b506200005590508262000093565b5050505050506200056b565b6200006c8362000105565b6000825111806200007a5750805b156200008e576200008c838362000147565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000d560008051602062000dde833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001028162000176565b50565b620001108162000214565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200016f838360405180606001604052806027815260200162000dfe60279139620002ab565b9392505050565b6001600160a01b038116620001e15760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b8060008051602062000dde8339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b620002835760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001d8565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc620001f3565b6060600080856001600160a01b031685604051620002ca919062000518565b600060405180830381855af49150503d806000811462000307576040519150601f19603f3d011682016040523d82523d6000602084013e6200030c565b606091505b50909250905062000320868383876200032a565b9695505050505050565b606083156200039e57825160000362000396576001600160a01b0385163b620003965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001d8565b5081620003aa565b620003aa8383620003b2565b949350505050565b815115620003c35781518083602001fd5b8060405162461bcd60e51b8152600401620001d8919062000536565b80516001600160a01b0381168114620003f757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200042f57818101518382015260200162000415565b50506000910152565b6000806000606084860312156200044e57600080fd5b6200045984620003df565b92506200046960208501620003df565b60408501519092506001600160401b03808211156200048757600080fd5b818601915086601f8301126200049c57600080fd5b815181811115620004b157620004b1620003fc565b604051601f8201601f19908116603f01168101908382118183101715620004dc57620004dc620003fc565b81604052828152896020848701011115620004f657600080fd5b6200050983602083016020880162000412565b80955050505050509250925092565b600082516200052c81846020870162000412565b9190910192915050565b60208152600082518060208401526200055781604085016020870162000412565b601f01601f19169190910160400192915050565b610863806200057b6000396000f3fe60806040523661001357610011610017565b005b6100115b61001f610169565b6001600160a01b0316330361015f5760606001600160e01b0319600035166364d3180d60e11b810161005a5761005361019c565b9150610157565b63587086bd60e11b6001600160e01b031982160161007a576100536101f3565b63070d7c6960e41b6001600160e01b031982160161009a57610053610239565b621eb96f60e61b6001600160e01b03198216016100b95761005361026a565b63a39f25e560e01b6001600160e01b03198216016100d9576100536102aa565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101676102be565b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60606101a66102ce565b60006101b53660048184610683565b8101906101c291906106c9565b90506101df816040518060200160405280600081525060006102d9565b505060408051602081019091526000815290565b60606000806102053660048184610683565b81019061021291906106fa565b91509150610222828260016102d9565b604051806020016040528060008152509250505090565b60606102436102ce565b60006102523660048184610683565b81019061025f91906106c9565b90506101df81610305565b60606102746102ce565b600061027e610169565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102b46102ce565b600061027e61035c565b6101676102c961035c565b61036b565b341561016757600080fd5b6102e28361038f565b6000825111806102ef5750805b15610300576102fe83836103cf565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61032e610169565b604080516001600160a01b03928316815291841660208301520160405180910390a1610359816103fb565b50565b60006103666104a4565b905090565b3660008037600080366000845af43d6000803e80801561038a573d6000f35b3d6000fd5b610398816104cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f4838360405180606001604052806027815260200161083060279139610560565b9392505050565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61018d565b6001600160a01b0381163b6105395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161014e565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610483565b6060600080856001600160a01b03168560405161057d91906107e0565b600060405180830381855af49150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105bd565b606091505b50915091506105ce868383876105d8565b9695505050505050565b60608315610647578251600003610640576001600160a01b0385163b6106405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b5081610651565b6106518383610659565b949350505050565b8151156106695781518083602001fd5b8060405162461bcd60e51b815260040161014e91906107fc565b6000808585111561069357600080fd5b838611156106a057600080fd5b5050820193919092039150565b80356001600160a01b03811681146106c457600080fd5b919050565b6000602082840312156106db57600080fd5b6103f4826106ad565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561070d57600080fd5b610716836106ad565b9150602083013567ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b813581811115610759576107596106e4565b604051601f8201601f19908116603f01168101908382118183101715610781576107816106e4565b8160405282815288602084870101111561079a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600082516107f28184602087016107bc565b9190910192915050565b602081526000825180602084015261081b8160408501602087016107bc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000816000ab53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE25 CODESIZE SUB DUP1 PUSH3 0xE25 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x438 JUMP JUMPDEST DUP3 DUP3 DUP3 DUP3 DUP2 PUSH3 0x47 DUP3 DUP3 PUSH1 0x0 PUSH3 0x61 JUMP JUMPDEST POP PUSH3 0x55 SWAP1 POP DUP3 PUSH3 0x93 JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x56B JUMP JUMPDEST PUSH3 0x6C DUP4 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x7A JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x8E JUMPI PUSH3 0x8C DUP4 DUP4 PUSH3 0x147 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH3 0xD5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xDDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0x102 DUP2 PUSH3 0x176 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x110 DUP2 PUSH3 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x16F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xDFE PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x2AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xDDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH3 0x283 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1D8 JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH3 0x1F3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x2CA SWAP2 SWAP1 PUSH3 0x518 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x307 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x30C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x320 DUP7 DUP4 DUP4 DUP8 PUSH3 0x32A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x39E JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH3 0x396 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH3 0x396 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1D8 JUMP JUMPDEST POP DUP2 PUSH3 0x3AA JUMP JUMPDEST PUSH3 0x3AA DUP4 DUP4 PUSH3 0x3B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH3 0x3C3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1D8 SWAP2 SWAP1 PUSH3 0x536 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x42F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x415 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x459 DUP5 PUSH3 0x3DF JUMP JUMPDEST SWAP3 POP PUSH3 0x469 PUSH1 0x20 DUP6 ADD PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x4B1 JUMPI PUSH3 0x4B1 PUSH3 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x4DC JUMPI PUSH3 0x4DC PUSH3 0x3FC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x509 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x412 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x52C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x412 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x557 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x412 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x863 DUP1 PUSH3 0x57B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x1F PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15F JUMPI PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH4 0x64D3180D PUSH1 0xE1 SHL DUP2 ADD PUSH2 0x5A JUMPI PUSH2 0x53 PUSH2 0x19C JUMP JUMPDEST SWAP2 POP PUSH2 0x157 JUMP JUMPDEST PUSH4 0x587086BD PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x7A JUMPI PUSH2 0x53 PUSH2 0x1F3 JUMP JUMPDEST PUSH4 0x70D7C69 PUSH1 0xE4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x9A JUMPI PUSH2 0x53 PUSH2 0x239 JUMP JUMPDEST PUSH3 0x1EB96F PUSH1 0xE6 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xB9 JUMPI PUSH2 0x53 PUSH2 0x26A JUMP JUMPDEST PUSH4 0xA39F25E5 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xD9 JUMPI PUSH2 0x53 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD RETURN JUMPDEST PUSH2 0x167 PUSH2 0x2BE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A6 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x2D9 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x222 DUP3 DUP3 PUSH1 0x1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x243 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x274 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B4 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x35C JUMP JUMPDEST PUSH2 0x167 PUSH2 0x2C9 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2EF JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FE DUP4 DUP4 PUSH2 0x3CF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x32E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x359 DUP2 PUSH2 0x3FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x38A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x830 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x560 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x483 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5CE DUP7 DUP4 DUP4 DUP8 PUSH2 0x5D8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x647 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x640 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST POP DUP2 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x651 DUP4 DUP4 PUSH2 0x659 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x669 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x6AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6AD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x759 JUMPI PUSH2 0x759 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0x6E4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7F2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x81B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A164 PUSH20 0x6F6C6343000816000AB53127684A568B3173AE13 0xB9 0xF8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ","sourceMap":"143:220:17:-:0;;;214:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;336:6;344;352:5;336:6;352:5;1024:39:7;336:6:17;352:5;1057::7;1024:17;:39::i;:::-;-1:-1:-1;3773:20:12::1;::::0;-1:-1:-1;3786:6:12;3773:12:::1;:20::i;:::-;3663:137:::0;;;214:147:17;;;143:220;;2057:265:8;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2204:112;2057:265;;;:::o;4300:135::-;4364:35;4377:11;-1:-1:-1;;;;;;;;;;;3854:45:8;-1:-1:-1;;;;;3854:45:8;;3784:122;4377:11;4364:35;;;-1:-1:-1;;;;;1884:15:21;;;1866:34;;1936:15;;;1931:2;1916:18;;1909:43;1801:18;4364:35:8;;;;;;;4409:19;4419:8;4409:9;:19::i;:::-;4300:135;:::o;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:8;;;;;;;;1771:152;:::o;6674:198:13:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:13:o;3988:201:8:-;-1:-1:-1;;;;;4051:22:8;;4043:73;;;;-1:-1:-1;;;4043:73:8;;2165:2:21;4043:73:8;;;2147:21:21;2204:2;2184:18;;;2177:30;2243:34;2223:18;;;2216:62;-1:-1:-1;;;2294:18:21;;;2287:36;2340:19;;4043:73:8;;;;;;;;;4174:8;-1:-1:-1;;;;;;;;;;;4126:39:8;:56;;-1:-1:-1;;;;;;4126:56:8;-1:-1:-1;;;;;4126:56:8;;;;;;;;;;-1:-1:-1;3988:201:8:o;1406:259::-;-1:-1:-1;;;;;1702:19:13;;;1479:95:8;;;;-1:-1:-1;;;1479:95:8;;2572:2:21;1479:95:8;;;2554:21:21;2611:2;2591:18;;;2584:30;2650:34;2630:18;;;2623:62;-1:-1:-1;;;2701:18:21;;;2694:43;2754:19;;1479:95:8;2370:409:21;1479:95:8;1641:17;1030:66;1584:48;1859:190:15;7058:325:13;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:13;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:13;;-1:-1:-1;7223:67:13;-1:-1:-1;7307:69:13;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:13:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:13;;;8113:60;;;;-1:-1:-1;;;8113:60:13;;3278:2:21;8113:60:13;;;3260:21:21;3317:2;3297:18;;;3290:30;3356:31;3336:18;;;3329:59;3405:18;;8113:60:13;3076:353:21;8113:60:13;-1:-1:-1;8208:10:13;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:13;;;;;;;;:::i;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:21;552:16;;545:27;328:250::o;583:1066::-;680:6;688;696;749:2;737:9;728:7;724:23;720:32;717:52;;;765:1;762;755:12;717:52;788:40;818:9;788:40;:::i;:::-;778:50;;847:49;892:2;881:9;877:18;847:49;:::i;:::-;940:2;925:18;;919:25;837:59;;-1:-1:-1;;;;;;993:14:21;;;990:34;;;1020:1;1017;1010:12;990:34;1058:6;1047:9;1043:22;1033:32;;1103:7;1096:4;1092:2;1088:13;1084:27;1074:55;;1125:1;1122;1115:12;1074:55;1154:2;1148:9;1176:2;1172;1169:10;1166:36;;;1182:18;;:::i;:::-;1257:2;1251:9;1225:2;1311:13;;-1:-1:-1;;1307:22:21;;;1331:2;1303:31;1299:40;1287:53;;;1355:18;;;1375:22;;;1352:46;1349:72;;;1401:18;;:::i;:::-;1441:10;1437:2;1430:22;1476:2;1468:6;1461:18;1516:7;1511:2;1506;1502;1498:11;1494:20;1491:33;1488:53;;;1537:1;1534;1527:12;1488:53;1550:68;1615:2;1610;1602:6;1598:15;1593:2;1589;1585:11;1550:68;:::i;:::-;1637:6;1627:16;;;;;;;583:1066;;;;;:::o;2784:287::-;2913:3;2951:6;2945:13;2967:66;3026:6;3021:3;3014:4;3006:6;3002:17;2967:66;:::i;:::-;3049:16;;;;;2784:287;-1:-1:-1;;2784:287:21:o;3434:396::-;3583:2;3572:9;3565:21;3546:4;3615:6;3609:13;3658:6;3653:2;3642:9;3638:18;3631:34;3674:79;3746:6;3741:2;3730:9;3726:18;3721:2;3713:6;3709:15;3674:79;:::i;:::-;3814:2;3793:15;-1:-1:-1;;3789:29:21;3774:45;;;;3821:2;3770:54;;3434:396;-1:-1:-1;;3434:396:21:o;:::-;143:220:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1195":{"entryPoint":null,"id":1195,"parameterSlots":0,"returnSlots":0},"@_1203":{"entryPoint":null,"id":1203,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_1208":{"entryPoint":null,"id":1208,"parameterSlots":0,"returnSlots":0},"@_changeAdmin_1065":{"entryPoint":773,"id":1065,"parameterSlots":1,"returnSlots":0},"@_delegate_1168":{"entryPoint":875,"id":1168,"parameterSlots":1,"returnSlots":0},"@_dispatchAdmin_1540":{"entryPoint":618,"id":1540,"parameterSlots":0,"returnSlots":1},"@_dispatchChangeAdmin_1589":{"entryPoint":569,"id":1589,"parameterSlots":0,"returnSlots":1},"@_dispatchImplementation_1560":{"entryPoint":682,"id":1560,"parameterSlots":0,"returnSlots":1},"@_dispatchUpgradeToAndCall_1655":{"entryPoint":499,"id":1655,"parameterSlots":0,"returnSlots":1},"@_dispatchUpgradeTo_1623":{"entryPoint":412,"id":1623,"parameterSlots":0,"returnSlots":1},"@_fallback_1187":{"entryPoint":702,"id":1187,"parameterSlots":0,"returnSlots":0},"@_fallback_1520":{"entryPoint":23,"id":1520,"parameterSlots":0,"returnSlots":0},"@_getAdmin_1022":{"entryPoint":361,"id":1022,"parameterSlots":0,"returnSlots":1},"@_getImplementation_883":{"entryPoint":1188,"id":883,"parameterSlots":0,"returnSlots":1},"@_implementation_852":{"entryPoint":860,"id":852,"parameterSlots":0,"returnSlots":1},"@_requireZeroValue_1677":{"entryPoint":718,"id":1677,"parameterSlots":0,"returnSlots":0},"@_revert_2007":{"entryPoint":1625,"id":2007,"parameterSlots":2,"returnSlots":0},"@_setAdmin_1048":{"entryPoint":1019,"id":1048,"parameterSlots":1,"returnSlots":0},"@_setImplementation_907":{"entryPoint":1228,"id":907,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_952":{"entryPoint":729,"id":952,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_922":{"entryPoint":911,"id":922,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1895":{"entryPoint":975,"id":1895,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1924":{"entryPoint":1376,"id":1924,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2062":{"entryPoint":null,"id":2062,"parameterSlots":1,"returnSlots":1},"@isContract_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1963":{"entryPoint":1496,"id":1963,"parameterSlots":4,"returnSlots":1},"abi_decode_address_payable":{"entryPoint":1709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":1737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_bytes_memory_ptr":{"entryPoint":1786,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":1667,"id":null,"parameterSlots":4,"returnSlots":2},"copy_memory_to_memory_with_cleanup":{"entryPoint":1980,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":1764,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5007:21","nodeType":"YulBlock","src":"0:5007:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"188:296:21","nodeType":"YulBlock","src":"188:296:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"205:9:21","nodeType":"YulIdentifier","src":"205:9:21"},{"kind":"number","nativeSrc":"216:2:21","nodeType":"YulLiteral","src":"216:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"198:6:21","nodeType":"YulIdentifier","src":"198:6:21"},"nativeSrc":"198:21:21","nodeType":"YulFunctionCall","src":"198:21:21"},"nativeSrc":"198:21:21","nodeType":"YulExpressionStatement","src":"198:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"239:9:21","nodeType":"YulIdentifier","src":"239:9:21"},{"kind":"number","nativeSrc":"250:2:21","nodeType":"YulLiteral","src":"250:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"235:3:21","nodeType":"YulIdentifier","src":"235:3:21"},"nativeSrc":"235:18:21","nodeType":"YulFunctionCall","src":"235:18:21"},{"kind":"number","nativeSrc":"255:2:21","nodeType":"YulLiteral","src":"255:2:21","type":"","value":"66"}],"functionName":{"name":"mstore","nativeSrc":"228:6:21","nodeType":"YulIdentifier","src":"228:6:21"},"nativeSrc":"228:30:21","nodeType":"YulFunctionCall","src":"228:30:21"},"nativeSrc":"228:30:21","nodeType":"YulExpressionStatement","src":"228:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"278:9:21","nodeType":"YulIdentifier","src":"278:9:21"},{"kind":"number","nativeSrc":"289:2:21","nodeType":"YulLiteral","src":"289:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"274:3:21","nodeType":"YulIdentifier","src":"274:3:21"},"nativeSrc":"274:18:21","nodeType":"YulFunctionCall","src":"274:18:21"},{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d","kind":"string","nativeSrc":"294:34:21","nodeType":"YulLiteral","src":"294:34:21","type":"","value":"TransparentUpgradeableProxy: adm"}],"functionName":{"name":"mstore","nativeSrc":"267:6:21","nodeType":"YulIdentifier","src":"267:6:21"},"nativeSrc":"267:62:21","nodeType":"YulFunctionCall","src":"267:62:21"},"nativeSrc":"267:62:21","nodeType":"YulExpressionStatement","src":"267:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"349:9:21","nodeType":"YulIdentifier","src":"349:9:21"},{"kind":"number","nativeSrc":"360:2:21","nodeType":"YulLiteral","src":"360:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"345:3:21","nodeType":"YulIdentifier","src":"345:3:21"},"nativeSrc":"345:18:21","nodeType":"YulFunctionCall","src":"345:18:21"},{"hexValue":"696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267","kind":"string","nativeSrc":"365:34:21","nodeType":"YulLiteral","src":"365:34:21","type":"","value":"in cannot fallback to proxy targ"}],"functionName":{"name":"mstore","nativeSrc":"338:6:21","nodeType":"YulIdentifier","src":"338:6:21"},"nativeSrc":"338:62:21","nodeType":"YulFunctionCall","src":"338:62:21"},"nativeSrc":"338:62:21","nodeType":"YulExpressionStatement","src":"338:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"420:9:21","nodeType":"YulIdentifier","src":"420:9:21"},{"kind":"number","nativeSrc":"431:3:21","nodeType":"YulLiteral","src":"431:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"416:3:21","nodeType":"YulIdentifier","src":"416:3:21"},"nativeSrc":"416:19:21","nodeType":"YulFunctionCall","src":"416:19:21"},{"hexValue":"6574","kind":"string","nativeSrc":"437:4:21","nodeType":"YulLiteral","src":"437:4:21","type":"","value":"et"}],"functionName":{"name":"mstore","nativeSrc":"409:6:21","nodeType":"YulIdentifier","src":"409:6:21"},"nativeSrc":"409:33:21","nodeType":"YulFunctionCall","src":"409:33:21"},"nativeSrc":"409:33:21","nodeType":"YulExpressionStatement","src":"409:33:21"},{"nativeSrc":"451:27:21","nodeType":"YulAssignment","src":"451:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"463:9:21","nodeType":"YulIdentifier","src":"463:9:21"},{"kind":"number","nativeSrc":"474:3:21","nodeType":"YulLiteral","src":"474:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"459:3:21","nodeType":"YulIdentifier","src":"459:3:21"},"nativeSrc":"459:19:21","nodeType":"YulFunctionCall","src":"459:19:21"},"variableNames":[{"name":"tail","nativeSrc":"451:4:21","nodeType":"YulIdentifier","src":"451:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:470:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"165:9:21","nodeType":"YulTypedName","src":"165:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"179:4:21","nodeType":"YulTypedName","src":"179:4:21","type":""}],"src":"14:470:21"},{"body":{"nativeSrc":"619:201:21","nodeType":"YulBlock","src":"619:201:21","statements":[{"body":{"nativeSrc":"657:16:21","nodeType":"YulBlock","src":"657:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"666:1:21","nodeType":"YulLiteral","src":"666:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"669:1:21","nodeType":"YulLiteral","src":"669:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"659:6:21","nodeType":"YulIdentifier","src":"659:6:21"},"nativeSrc":"659:12:21","nodeType":"YulFunctionCall","src":"659:12:21"},"nativeSrc":"659:12:21","nodeType":"YulExpressionStatement","src":"659:12:21"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"635:10:21","nodeType":"YulIdentifier","src":"635:10:21"},{"name":"endIndex","nativeSrc":"647:8:21","nodeType":"YulIdentifier","src":"647:8:21"}],"functionName":{"name":"gt","nativeSrc":"632:2:21","nodeType":"YulIdentifier","src":"632:2:21"},"nativeSrc":"632:24:21","nodeType":"YulFunctionCall","src":"632:24:21"},"nativeSrc":"629:44:21","nodeType":"YulIf","src":"629:44:21"},{"body":{"nativeSrc":"706:16:21","nodeType":"YulBlock","src":"706:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"715:1:21","nodeType":"YulLiteral","src":"715:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"718:1:21","nodeType":"YulLiteral","src":"718:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"708:6:21","nodeType":"YulIdentifier","src":"708:6:21"},"nativeSrc":"708:12:21","nodeType":"YulFunctionCall","src":"708:12:21"},"nativeSrc":"708:12:21","nodeType":"YulExpressionStatement","src":"708:12:21"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"688:8:21","nodeType":"YulIdentifier","src":"688:8:21"},{"name":"length","nativeSrc":"698:6:21","nodeType":"YulIdentifier","src":"698:6:21"}],"functionName":{"name":"gt","nativeSrc":"685:2:21","nodeType":"YulIdentifier","src":"685:2:21"},"nativeSrc":"685:20:21","nodeType":"YulFunctionCall","src":"685:20:21"},"nativeSrc":"682:40:21","nodeType":"YulIf","src":"682:40:21"},{"nativeSrc":"731:36:21","nodeType":"YulAssignment","src":"731:36:21","value":{"arguments":[{"name":"offset","nativeSrc":"748:6:21","nodeType":"YulIdentifier","src":"748:6:21"},{"name":"startIndex","nativeSrc":"756:10:21","nodeType":"YulIdentifier","src":"756:10:21"}],"functionName":{"name":"add","nativeSrc":"744:3:21","nodeType":"YulIdentifier","src":"744:3:21"},"nativeSrc":"744:23:21","nodeType":"YulFunctionCall","src":"744:23:21"},"variableNames":[{"name":"offsetOut","nativeSrc":"731:9:21","nodeType":"YulIdentifier","src":"731:9:21"}]},{"nativeSrc":"776:38:21","nodeType":"YulAssignment","src":"776:38:21","value":{"arguments":[{"name":"endIndex","nativeSrc":"793:8:21","nodeType":"YulIdentifier","src":"793:8:21"},{"name":"startIndex","nativeSrc":"803:10:21","nodeType":"YulIdentifier","src":"803:10:21"}],"functionName":{"name":"sub","nativeSrc":"789:3:21","nodeType":"YulIdentifier","src":"789:3:21"},"nativeSrc":"789:25:21","nodeType":"YulFunctionCall","src":"789:25:21"},"variableNames":[{"name":"lengthOut","nativeSrc":"776:9:21","nodeType":"YulIdentifier","src":"776:9:21"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"489:331:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"553:6:21","nodeType":"YulTypedName","src":"553:6:21","type":""},{"name":"length","nativeSrc":"561:6:21","nodeType":"YulTypedName","src":"561:6:21","type":""},{"name":"startIndex","nativeSrc":"569:10:21","nodeType":"YulTypedName","src":"569:10:21","type":""},{"name":"endIndex","nativeSrc":"581:8:21","nodeType":"YulTypedName","src":"581:8:21","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"594:9:21","nodeType":"YulTypedName","src":"594:9:21","type":""},{"name":"lengthOut","nativeSrc":"605:9:21","nodeType":"YulTypedName","src":"605:9:21","type":""}],"src":"489:331:21"},{"body":{"nativeSrc":"882:124:21","nodeType":"YulBlock","src":"882:124:21","statements":[{"nativeSrc":"892:29:21","nodeType":"YulAssignment","src":"892:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"914:6:21","nodeType":"YulIdentifier","src":"914:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"901:12:21","nodeType":"YulIdentifier","src":"901:12:21"},"nativeSrc":"901:20:21","nodeType":"YulFunctionCall","src":"901:20:21"},"variableNames":[{"name":"value","nativeSrc":"892:5:21","nodeType":"YulIdentifier","src":"892:5:21"}]},{"body":{"nativeSrc":"984:16:21","nodeType":"YulBlock","src":"984:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"993:1:21","nodeType":"YulLiteral","src":"993:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"996:1:21","nodeType":"YulLiteral","src":"996:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"986:6:21","nodeType":"YulIdentifier","src":"986:6:21"},"nativeSrc":"986:12:21","nodeType":"YulFunctionCall","src":"986:12:21"},"nativeSrc":"986:12:21","nodeType":"YulExpressionStatement","src":"986:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"943:5:21","nodeType":"YulIdentifier","src":"943:5:21"},{"arguments":[{"name":"value","nativeSrc":"954:5:21","nodeType":"YulIdentifier","src":"954:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"969:3:21","nodeType":"YulLiteral","src":"969:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"974:1:21","nodeType":"YulLiteral","src":"974:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"965:3:21","nodeType":"YulIdentifier","src":"965:3:21"},"nativeSrc":"965:11:21","nodeType":"YulFunctionCall","src":"965:11:21"},{"kind":"number","nativeSrc":"978:1:21","nodeType":"YulLiteral","src":"978:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"961:3:21","nodeType":"YulIdentifier","src":"961:3:21"},"nativeSrc":"961:19:21","nodeType":"YulFunctionCall","src":"961:19:21"}],"functionName":{"name":"and","nativeSrc":"950:3:21","nodeType":"YulIdentifier","src":"950:3:21"},"nativeSrc":"950:31:21","nodeType":"YulFunctionCall","src":"950:31:21"}],"functionName":{"name":"eq","nativeSrc":"940:2:21","nodeType":"YulIdentifier","src":"940:2:21"},"nativeSrc":"940:42:21","nodeType":"YulFunctionCall","src":"940:42:21"}],"functionName":{"name":"iszero","nativeSrc":"933:6:21","nodeType":"YulIdentifier","src":"933:6:21"},"nativeSrc":"933:50:21","nodeType":"YulFunctionCall","src":"933:50:21"},"nativeSrc":"930:70:21","nodeType":"YulIf","src":"930:70:21"}]},"name":"abi_decode_address_payable","nativeSrc":"825:181:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"861:6:21","nodeType":"YulTypedName","src":"861:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"872:5:21","nodeType":"YulTypedName","src":"872:5:21","type":""}],"src":"825:181:21"},{"body":{"nativeSrc":"1089:124:21","nodeType":"YulBlock","src":"1089:124:21","statements":[{"body":{"nativeSrc":"1135:16:21","nodeType":"YulBlock","src":"1135:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1144:1:21","nodeType":"YulLiteral","src":"1144:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1147:1:21","nodeType":"YulLiteral","src":"1147:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1137:6:21","nodeType":"YulIdentifier","src":"1137:6:21"},"nativeSrc":"1137:12:21","nodeType":"YulFunctionCall","src":"1137:12:21"},"nativeSrc":"1137:12:21","nodeType":"YulExpressionStatement","src":"1137:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1110:7:21","nodeType":"YulIdentifier","src":"1110:7:21"},{"name":"headStart","nativeSrc":"1119:9:21","nodeType":"YulIdentifier","src":"1119:9:21"}],"functionName":{"name":"sub","nativeSrc":"1106:3:21","nodeType":"YulIdentifier","src":"1106:3:21"},"nativeSrc":"1106:23:21","nodeType":"YulFunctionCall","src":"1106:23:21"},{"kind":"number","nativeSrc":"1131:2:21","nodeType":"YulLiteral","src":"1131:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1102:3:21","nodeType":"YulIdentifier","src":"1102:3:21"},"nativeSrc":"1102:32:21","nodeType":"YulFunctionCall","src":"1102:32:21"},"nativeSrc":"1099:52:21","nodeType":"YulIf","src":"1099:52:21"},{"nativeSrc":"1160:47:21","nodeType":"YulAssignment","src":"1160:47:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1197:9:21","nodeType":"YulIdentifier","src":"1197:9:21"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"1170:26:21","nodeType":"YulIdentifier","src":"1170:26:21"},"nativeSrc":"1170:37:21","nodeType":"YulFunctionCall","src":"1170:37:21"},"variableNames":[{"name":"value0","nativeSrc":"1160:6:21","nodeType":"YulIdentifier","src":"1160:6:21"}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"1011:202:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1055:9:21","nodeType":"YulTypedName","src":"1055:9:21","type":""},{"name":"dataEnd","nativeSrc":"1066:7:21","nodeType":"YulTypedName","src":"1066:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1078:6:21","nodeType":"YulTypedName","src":"1078:6:21","type":""}],"src":"1011:202:21"},{"body":{"nativeSrc":"1250:95:21","nodeType":"YulBlock","src":"1250:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1267:1:21","nodeType":"YulLiteral","src":"1267:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1274:3:21","nodeType":"YulLiteral","src":"1274:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"1279:10:21","nodeType":"YulLiteral","src":"1279:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1270:3:21","nodeType":"YulIdentifier","src":"1270:3:21"},"nativeSrc":"1270:20:21","nodeType":"YulFunctionCall","src":"1270:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1260:6:21","nodeType":"YulIdentifier","src":"1260:6:21"},"nativeSrc":"1260:31:21","nodeType":"YulFunctionCall","src":"1260:31:21"},"nativeSrc":"1260:31:21","nodeType":"YulExpressionStatement","src":"1260:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1307:1:21","nodeType":"YulLiteral","src":"1307:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1310:4:21","nodeType":"YulLiteral","src":"1310:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1300:6:21","nodeType":"YulIdentifier","src":"1300:6:21"},"nativeSrc":"1300:15:21","nodeType":"YulFunctionCall","src":"1300:15:21"},"nativeSrc":"1300:15:21","nodeType":"YulExpressionStatement","src":"1300:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1331:1:21","nodeType":"YulLiteral","src":"1331:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1334:4:21","nodeType":"YulLiteral","src":"1334:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1324:6:21","nodeType":"YulIdentifier","src":"1324:6:21"},"nativeSrc":"1324:15:21","nodeType":"YulFunctionCall","src":"1324:15:21"},"nativeSrc":"1324:15:21","nodeType":"YulExpressionStatement","src":"1324:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1218:127:21","nodeType":"YulFunctionDefinition","src":"1218:127:21"},{"body":{"nativeSrc":"1454:907:21","nodeType":"YulBlock","src":"1454:907:21","statements":[{"body":{"nativeSrc":"1500:16:21","nodeType":"YulBlock","src":"1500:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1509:1:21","nodeType":"YulLiteral","src":"1509:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1512:1:21","nodeType":"YulLiteral","src":"1512:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1502:6:21","nodeType":"YulIdentifier","src":"1502:6:21"},"nativeSrc":"1502:12:21","nodeType":"YulFunctionCall","src":"1502:12:21"},"nativeSrc":"1502:12:21","nodeType":"YulExpressionStatement","src":"1502:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1475:7:21","nodeType":"YulIdentifier","src":"1475:7:21"},{"name":"headStart","nativeSrc":"1484:9:21","nodeType":"YulIdentifier","src":"1484:9:21"}],"functionName":{"name":"sub","nativeSrc":"1471:3:21","nodeType":"YulIdentifier","src":"1471:3:21"},"nativeSrc":"1471:23:21","nodeType":"YulFunctionCall","src":"1471:23:21"},{"kind":"number","nativeSrc":"1496:2:21","nodeType":"YulLiteral","src":"1496:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1467:3:21","nodeType":"YulIdentifier","src":"1467:3:21"},"nativeSrc":"1467:32:21","nodeType":"YulFunctionCall","src":"1467:32:21"},"nativeSrc":"1464:52:21","nodeType":"YulIf","src":"1464:52:21"},{"nativeSrc":"1525:47:21","nodeType":"YulAssignment","src":"1525:47:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1562:9:21","nodeType":"YulIdentifier","src":"1562:9:21"}],"functionName":{"name":"abi_decode_address_payable","nativeSrc":"1535:26:21","nodeType":"YulIdentifier","src":"1535:26:21"},"nativeSrc":"1535:37:21","nodeType":"YulFunctionCall","src":"1535:37:21"},"variableNames":[{"name":"value0","nativeSrc":"1525:6:21","nodeType":"YulIdentifier","src":"1525:6:21"}]},{"nativeSrc":"1581:46:21","nodeType":"YulVariableDeclaration","src":"1581:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1612:9:21","nodeType":"YulIdentifier","src":"1612:9:21"},{"kind":"number","nativeSrc":"1623:2:21","nodeType":"YulLiteral","src":"1623:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1608:3:21","nodeType":"YulIdentifier","src":"1608:3:21"},"nativeSrc":"1608:18:21","nodeType":"YulFunctionCall","src":"1608:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1595:12:21","nodeType":"YulIdentifier","src":"1595:12:21"},"nativeSrc":"1595:32:21","nodeType":"YulFunctionCall","src":"1595:32:21"},"variables":[{"name":"offset","nativeSrc":"1585:6:21","nodeType":"YulTypedName","src":"1585:6:21","type":""}]},{"nativeSrc":"1636:28:21","nodeType":"YulVariableDeclaration","src":"1636:28:21","value":{"kind":"number","nativeSrc":"1646:18:21","nodeType":"YulLiteral","src":"1646:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1640:2:21","nodeType":"YulTypedName","src":"1640:2:21","type":""}]},{"body":{"nativeSrc":"1691:16:21","nodeType":"YulBlock","src":"1691:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1700:1:21","nodeType":"YulLiteral","src":"1700:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1703:1:21","nodeType":"YulLiteral","src":"1703:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1693:6:21","nodeType":"YulIdentifier","src":"1693:6:21"},"nativeSrc":"1693:12:21","nodeType":"YulFunctionCall","src":"1693:12:21"},"nativeSrc":"1693:12:21","nodeType":"YulExpressionStatement","src":"1693:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1679:6:21","nodeType":"YulIdentifier","src":"1679:6:21"},{"name":"_1","nativeSrc":"1687:2:21","nodeType":"YulIdentifier","src":"1687:2:21"}],"functionName":{"name":"gt","nativeSrc":"1676:2:21","nodeType":"YulIdentifier","src":"1676:2:21"},"nativeSrc":"1676:14:21","nodeType":"YulFunctionCall","src":"1676:14:21"},"nativeSrc":"1673:34:21","nodeType":"YulIf","src":"1673:34:21"},{"nativeSrc":"1716:32:21","nodeType":"YulVariableDeclaration","src":"1716:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1730:9:21","nodeType":"YulIdentifier","src":"1730:9:21"},{"name":"offset","nativeSrc":"1741:6:21","nodeType":"YulIdentifier","src":"1741:6:21"}],"functionName":{"name":"add","nativeSrc":"1726:3:21","nodeType":"YulIdentifier","src":"1726:3:21"},"nativeSrc":"1726:22:21","nodeType":"YulFunctionCall","src":"1726:22:21"},"variables":[{"name":"_2","nativeSrc":"1720:2:21","nodeType":"YulTypedName","src":"1720:2:21","type":""}]},{"body":{"nativeSrc":"1796:16:21","nodeType":"YulBlock","src":"1796:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1805:1:21","nodeType":"YulLiteral","src":"1805:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1808:1:21","nodeType":"YulLiteral","src":"1808:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1798:6:21","nodeType":"YulIdentifier","src":"1798:6:21"},"nativeSrc":"1798:12:21","nodeType":"YulFunctionCall","src":"1798:12:21"},"nativeSrc":"1798:12:21","nodeType":"YulExpressionStatement","src":"1798:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1775:2:21","nodeType":"YulIdentifier","src":"1775:2:21"},{"kind":"number","nativeSrc":"1779:4:21","nodeType":"YulLiteral","src":"1779:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1771:3:21","nodeType":"YulIdentifier","src":"1771:3:21"},"nativeSrc":"1771:13:21","nodeType":"YulFunctionCall","src":"1771:13:21"},{"name":"dataEnd","nativeSrc":"1786:7:21","nodeType":"YulIdentifier","src":"1786:7:21"}],"functionName":{"name":"slt","nativeSrc":"1767:3:21","nodeType":"YulIdentifier","src":"1767:3:21"},"nativeSrc":"1767:27:21","nodeType":"YulFunctionCall","src":"1767:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1760:6:21","nodeType":"YulIdentifier","src":"1760:6:21"},"nativeSrc":"1760:35:21","nodeType":"YulFunctionCall","src":"1760:35:21"},"nativeSrc":"1757:55:21","nodeType":"YulIf","src":"1757:55:21"},{"nativeSrc":"1821:26:21","nodeType":"YulVariableDeclaration","src":"1821:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"1844:2:21","nodeType":"YulIdentifier","src":"1844:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"1831:12:21","nodeType":"YulIdentifier","src":"1831:12:21"},"nativeSrc":"1831:16:21","nodeType":"YulFunctionCall","src":"1831:16:21"},"variables":[{"name":"_3","nativeSrc":"1825:2:21","nodeType":"YulTypedName","src":"1825:2:21","type":""}]},{"body":{"nativeSrc":"1870:22:21","nodeType":"YulBlock","src":"1870:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1872:16:21","nodeType":"YulIdentifier","src":"1872:16:21"},"nativeSrc":"1872:18:21","nodeType":"YulFunctionCall","src":"1872:18:21"},"nativeSrc":"1872:18:21","nodeType":"YulExpressionStatement","src":"1872:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"1862:2:21","nodeType":"YulIdentifier","src":"1862:2:21"},{"name":"_1","nativeSrc":"1866:2:21","nodeType":"YulIdentifier","src":"1866:2:21"}],"functionName":{"name":"gt","nativeSrc":"1859:2:21","nodeType":"YulIdentifier","src":"1859:2:21"},"nativeSrc":"1859:10:21","nodeType":"YulFunctionCall","src":"1859:10:21"},"nativeSrc":"1856:36:21","nodeType":"YulIf","src":"1856:36:21"},{"nativeSrc":"1901:17:21","nodeType":"YulVariableDeclaration","src":"1901:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"1915:2:21","nodeType":"YulLiteral","src":"1915:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1911:3:21","nodeType":"YulIdentifier","src":"1911:3:21"},"nativeSrc":"1911:7:21","nodeType":"YulFunctionCall","src":"1911:7:21"},"variables":[{"name":"_4","nativeSrc":"1905:2:21","nodeType":"YulTypedName","src":"1905:2:21","type":""}]},{"nativeSrc":"1927:23:21","nodeType":"YulVariableDeclaration","src":"1927:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"1947:2:21","nodeType":"YulLiteral","src":"1947:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1941:5:21","nodeType":"YulIdentifier","src":"1941:5:21"},"nativeSrc":"1941:9:21","nodeType":"YulFunctionCall","src":"1941:9:21"},"variables":[{"name":"memPtr","nativeSrc":"1931:6:21","nodeType":"YulTypedName","src":"1931:6:21","type":""}]},{"nativeSrc":"1959:71:21","nodeType":"YulVariableDeclaration","src":"1959:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1981:6:21","nodeType":"YulIdentifier","src":"1981:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2005:2:21","nodeType":"YulIdentifier","src":"2005:2:21"},{"kind":"number","nativeSrc":"2009:4:21","nodeType":"YulLiteral","src":"2009:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2001:3:21","nodeType":"YulIdentifier","src":"2001:3:21"},"nativeSrc":"2001:13:21","nodeType":"YulFunctionCall","src":"2001:13:21"},{"name":"_4","nativeSrc":"2016:2:21","nodeType":"YulIdentifier","src":"2016:2:21"}],"functionName":{"name":"and","nativeSrc":"1997:3:21","nodeType":"YulIdentifier","src":"1997:3:21"},"nativeSrc":"1997:22:21","nodeType":"YulFunctionCall","src":"1997:22:21"},{"kind":"number","nativeSrc":"2021:2:21","nodeType":"YulLiteral","src":"2021:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"1993:3:21","nodeType":"YulIdentifier","src":"1993:3:21"},"nativeSrc":"1993:31:21","nodeType":"YulFunctionCall","src":"1993:31:21"},{"name":"_4","nativeSrc":"2026:2:21","nodeType":"YulIdentifier","src":"2026:2:21"}],"functionName":{"name":"and","nativeSrc":"1989:3:21","nodeType":"YulIdentifier","src":"1989:3:21"},"nativeSrc":"1989:40:21","nodeType":"YulFunctionCall","src":"1989:40:21"}],"functionName":{"name":"add","nativeSrc":"1977:3:21","nodeType":"YulIdentifier","src":"1977:3:21"},"nativeSrc":"1977:53:21","nodeType":"YulFunctionCall","src":"1977:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1963:10:21","nodeType":"YulTypedName","src":"1963:10:21","type":""}]},{"body":{"nativeSrc":"2089:22:21","nodeType":"YulBlock","src":"2089:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2091:16:21","nodeType":"YulIdentifier","src":"2091:16:21"},"nativeSrc":"2091:18:21","nodeType":"YulFunctionCall","src":"2091:18:21"},"nativeSrc":"2091:18:21","nodeType":"YulExpressionStatement","src":"2091:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2048:10:21","nodeType":"YulIdentifier","src":"2048:10:21"},{"name":"_1","nativeSrc":"2060:2:21","nodeType":"YulIdentifier","src":"2060:2:21"}],"functionName":{"name":"gt","nativeSrc":"2045:2:21","nodeType":"YulIdentifier","src":"2045:2:21"},"nativeSrc":"2045:18:21","nodeType":"YulFunctionCall","src":"2045:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2068:10:21","nodeType":"YulIdentifier","src":"2068:10:21"},{"name":"memPtr","nativeSrc":"2080:6:21","nodeType":"YulIdentifier","src":"2080:6:21"}],"functionName":{"name":"lt","nativeSrc":"2065:2:21","nodeType":"YulIdentifier","src":"2065:2:21"},"nativeSrc":"2065:22:21","nodeType":"YulFunctionCall","src":"2065:22:21"}],"functionName":{"name":"or","nativeSrc":"2042:2:21","nodeType":"YulIdentifier","src":"2042:2:21"},"nativeSrc":"2042:46:21","nodeType":"YulFunctionCall","src":"2042:46:21"},"nativeSrc":"2039:72:21","nodeType":"YulIf","src":"2039:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2127:2:21","nodeType":"YulLiteral","src":"2127:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2131:10:21","nodeType":"YulIdentifier","src":"2131:10:21"}],"functionName":{"name":"mstore","nativeSrc":"2120:6:21","nodeType":"YulIdentifier","src":"2120:6:21"},"nativeSrc":"2120:22:21","nodeType":"YulFunctionCall","src":"2120:22:21"},"nativeSrc":"2120:22:21","nodeType":"YulExpressionStatement","src":"2120:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2158:6:21","nodeType":"YulIdentifier","src":"2158:6:21"},{"name":"_3","nativeSrc":"2166:2:21","nodeType":"YulIdentifier","src":"2166:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2151:6:21","nodeType":"YulIdentifier","src":"2151:6:21"},"nativeSrc":"2151:18:21","nodeType":"YulFunctionCall","src":"2151:18:21"},"nativeSrc":"2151:18:21","nodeType":"YulExpressionStatement","src":"2151:18:21"},{"body":{"nativeSrc":"2215:16:21","nodeType":"YulBlock","src":"2215:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2224:1:21","nodeType":"YulLiteral","src":"2224:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2227:1:21","nodeType":"YulLiteral","src":"2227:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2217:6:21","nodeType":"YulIdentifier","src":"2217:6:21"},"nativeSrc":"2217:12:21","nodeType":"YulFunctionCall","src":"2217:12:21"},"nativeSrc":"2217:12:21","nodeType":"YulExpressionStatement","src":"2217:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2192:2:21","nodeType":"YulIdentifier","src":"2192:2:21"},{"name":"_3","nativeSrc":"2196:2:21","nodeType":"YulIdentifier","src":"2196:2:21"}],"functionName":{"name":"add","nativeSrc":"2188:3:21","nodeType":"YulIdentifier","src":"2188:3:21"},"nativeSrc":"2188:11:21","nodeType":"YulFunctionCall","src":"2188:11:21"},{"kind":"number","nativeSrc":"2201:2:21","nodeType":"YulLiteral","src":"2201:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2184:3:21","nodeType":"YulIdentifier","src":"2184:3:21"},"nativeSrc":"2184:20:21","nodeType":"YulFunctionCall","src":"2184:20:21"},{"name":"dataEnd","nativeSrc":"2206:7:21","nodeType":"YulIdentifier","src":"2206:7:21"}],"functionName":{"name":"gt","nativeSrc":"2181:2:21","nodeType":"YulIdentifier","src":"2181:2:21"},"nativeSrc":"2181:33:21","nodeType":"YulFunctionCall","src":"2181:33:21"},"nativeSrc":"2178:53:21","nodeType":"YulIf","src":"2178:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2257:6:21","nodeType":"YulIdentifier","src":"2257:6:21"},{"kind":"number","nativeSrc":"2265:2:21","nodeType":"YulLiteral","src":"2265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2253:3:21","nodeType":"YulIdentifier","src":"2253:3:21"},"nativeSrc":"2253:15:21","nodeType":"YulFunctionCall","src":"2253:15:21"},{"arguments":[{"name":"_2","nativeSrc":"2274:2:21","nodeType":"YulIdentifier","src":"2274:2:21"},{"kind":"number","nativeSrc":"2278:2:21","nodeType":"YulLiteral","src":"2278:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2270:3:21","nodeType":"YulIdentifier","src":"2270:3:21"},"nativeSrc":"2270:11:21","nodeType":"YulFunctionCall","src":"2270:11:21"},{"name":"_3","nativeSrc":"2283:2:21","nodeType":"YulIdentifier","src":"2283:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"2240:12:21","nodeType":"YulIdentifier","src":"2240:12:21"},"nativeSrc":"2240:46:21","nodeType":"YulFunctionCall","src":"2240:46:21"},"nativeSrc":"2240:46:21","nodeType":"YulExpressionStatement","src":"2240:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2310:6:21","nodeType":"YulIdentifier","src":"2310:6:21"},{"name":"_3","nativeSrc":"2318:2:21","nodeType":"YulIdentifier","src":"2318:2:21"}],"functionName":{"name":"add","nativeSrc":"2306:3:21","nodeType":"YulIdentifier","src":"2306:3:21"},"nativeSrc":"2306:15:21","nodeType":"YulFunctionCall","src":"2306:15:21"},{"kind":"number","nativeSrc":"2323:2:21","nodeType":"YulLiteral","src":"2323:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2302:3:21","nodeType":"YulIdentifier","src":"2302:3:21"},"nativeSrc":"2302:24:21","nodeType":"YulFunctionCall","src":"2302:24:21"},{"kind":"number","nativeSrc":"2328:1:21","nodeType":"YulLiteral","src":"2328:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2295:6:21","nodeType":"YulIdentifier","src":"2295:6:21"},"nativeSrc":"2295:35:21","nodeType":"YulFunctionCall","src":"2295:35:21"},"nativeSrc":"2295:35:21","nodeType":"YulExpressionStatement","src":"2295:35:21"},{"nativeSrc":"2339:16:21","nodeType":"YulAssignment","src":"2339:16:21","value":{"name":"memPtr","nativeSrc":"2349:6:21","nodeType":"YulIdentifier","src":"2349:6:21"},"variableNames":[{"name":"value1","nativeSrc":"2339:6:21","nodeType":"YulIdentifier","src":"2339:6:21"}]}]},"name":"abi_decode_tuple_t_address_payablet_bytes_memory_ptr","nativeSrc":"1350:1011:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1412:9:21","nodeType":"YulTypedName","src":"1412:9:21","type":""},{"name":"dataEnd","nativeSrc":"1423:7:21","nodeType":"YulTypedName","src":"1423:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1435:6:21","nodeType":"YulTypedName","src":"1435:6:21","type":""},{"name":"value1","nativeSrc":"1443:6:21","nodeType":"YulTypedName","src":"1443:6:21","type":""}],"src":"1350:1011:21"},{"body":{"nativeSrc":"2467:102:21","nodeType":"YulBlock","src":"2467:102:21","statements":[{"nativeSrc":"2477:26:21","nodeType":"YulAssignment","src":"2477:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2489:9:21","nodeType":"YulIdentifier","src":"2489:9:21"},{"kind":"number","nativeSrc":"2500:2:21","nodeType":"YulLiteral","src":"2500:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2485:3:21","nodeType":"YulIdentifier","src":"2485:3:21"},"nativeSrc":"2485:18:21","nodeType":"YulFunctionCall","src":"2485:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2477:4:21","nodeType":"YulIdentifier","src":"2477:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2519:9:21","nodeType":"YulIdentifier","src":"2519:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2534:6:21","nodeType":"YulIdentifier","src":"2534:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2550:3:21","nodeType":"YulLiteral","src":"2550:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"2555:1:21","nodeType":"YulLiteral","src":"2555:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2546:3:21","nodeType":"YulIdentifier","src":"2546:3:21"},"nativeSrc":"2546:11:21","nodeType":"YulFunctionCall","src":"2546:11:21"},{"kind":"number","nativeSrc":"2559:1:21","nodeType":"YulLiteral","src":"2559:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2542:3:21","nodeType":"YulIdentifier","src":"2542:3:21"},"nativeSrc":"2542:19:21","nodeType":"YulFunctionCall","src":"2542:19:21"}],"functionName":{"name":"and","nativeSrc":"2530:3:21","nodeType":"YulIdentifier","src":"2530:3:21"},"nativeSrc":"2530:32:21","nodeType":"YulFunctionCall","src":"2530:32:21"}],"functionName":{"name":"mstore","nativeSrc":"2512:6:21","nodeType":"YulIdentifier","src":"2512:6:21"},"nativeSrc":"2512:51:21","nodeType":"YulFunctionCall","src":"2512:51:21"},"nativeSrc":"2512:51:21","nodeType":"YulExpressionStatement","src":"2512:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2366:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2436:9:21","nodeType":"YulTypedName","src":"2436:9:21","type":""},{"name":"value0","nativeSrc":"2447:6:21","nodeType":"YulTypedName","src":"2447:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2458:4:21","nodeType":"YulTypedName","src":"2458:4:21","type":""}],"src":"2366:203:21"},{"body":{"nativeSrc":"2703:175:21","nodeType":"YulBlock","src":"2703:175:21","statements":[{"nativeSrc":"2713:26:21","nodeType":"YulAssignment","src":"2713:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2725:9:21","nodeType":"YulIdentifier","src":"2725:9:21"},{"kind":"number","nativeSrc":"2736:2:21","nodeType":"YulLiteral","src":"2736:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2721:3:21","nodeType":"YulIdentifier","src":"2721:3:21"},"nativeSrc":"2721:18:21","nodeType":"YulFunctionCall","src":"2721:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2713:4:21","nodeType":"YulIdentifier","src":"2713:4:21"}]},{"nativeSrc":"2748:29:21","nodeType":"YulVariableDeclaration","src":"2748:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2766:3:21","nodeType":"YulLiteral","src":"2766:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"2771:1:21","nodeType":"YulLiteral","src":"2771:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2762:3:21","nodeType":"YulIdentifier","src":"2762:3:21"},"nativeSrc":"2762:11:21","nodeType":"YulFunctionCall","src":"2762:11:21"},{"kind":"number","nativeSrc":"2775:1:21","nodeType":"YulLiteral","src":"2775:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2758:3:21","nodeType":"YulIdentifier","src":"2758:3:21"},"nativeSrc":"2758:19:21","nodeType":"YulFunctionCall","src":"2758:19:21"},"variables":[{"name":"_1","nativeSrc":"2752:2:21","nodeType":"YulTypedName","src":"2752:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2793:9:21","nodeType":"YulIdentifier","src":"2793:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2808:6:21","nodeType":"YulIdentifier","src":"2808:6:21"},{"name":"_1","nativeSrc":"2816:2:21","nodeType":"YulIdentifier","src":"2816:2:21"}],"functionName":{"name":"and","nativeSrc":"2804:3:21","nodeType":"YulIdentifier","src":"2804:3:21"},"nativeSrc":"2804:15:21","nodeType":"YulFunctionCall","src":"2804:15:21"}],"functionName":{"name":"mstore","nativeSrc":"2786:6:21","nodeType":"YulIdentifier","src":"2786:6:21"},"nativeSrc":"2786:34:21","nodeType":"YulFunctionCall","src":"2786:34:21"},"nativeSrc":"2786:34:21","nodeType":"YulExpressionStatement","src":"2786:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:21","nodeType":"YulIdentifier","src":"2840:9:21"},{"kind":"number","nativeSrc":"2851:2:21","nodeType":"YulLiteral","src":"2851:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2836:3:21","nodeType":"YulIdentifier","src":"2836:3:21"},"nativeSrc":"2836:18:21","nodeType":"YulFunctionCall","src":"2836:18:21"},{"arguments":[{"name":"value1","nativeSrc":"2860:6:21","nodeType":"YulIdentifier","src":"2860:6:21"},{"name":"_1","nativeSrc":"2868:2:21","nodeType":"YulIdentifier","src":"2868:2:21"}],"functionName":{"name":"and","nativeSrc":"2856:3:21","nodeType":"YulIdentifier","src":"2856:3:21"},"nativeSrc":"2856:15:21","nodeType":"YulFunctionCall","src":"2856:15:21"}],"functionName":{"name":"mstore","nativeSrc":"2829:6:21","nodeType":"YulIdentifier","src":"2829:6:21"},"nativeSrc":"2829:43:21","nodeType":"YulFunctionCall","src":"2829:43:21"},"nativeSrc":"2829:43:21","nodeType":"YulExpressionStatement","src":"2829:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"2574:304:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2664:9:21","nodeType":"YulTypedName","src":"2664:9:21","type":""},{"name":"value1","nativeSrc":"2675:6:21","nodeType":"YulTypedName","src":"2675:6:21","type":""},{"name":"value0","nativeSrc":"2683:6:21","nodeType":"YulTypedName","src":"2683:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2694:4:21","nodeType":"YulTypedName","src":"2694:4:21","type":""}],"src":"2574:304:21"},{"body":{"nativeSrc":"3057:228:21","nodeType":"YulBlock","src":"3057:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3074:9:21","nodeType":"YulIdentifier","src":"3074:9:21"},{"kind":"number","nativeSrc":"3085:2:21","nodeType":"YulLiteral","src":"3085:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3067:6:21","nodeType":"YulIdentifier","src":"3067:6:21"},"nativeSrc":"3067:21:21","nodeType":"YulFunctionCall","src":"3067:21:21"},"nativeSrc":"3067:21:21","nodeType":"YulExpressionStatement","src":"3067:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3108:9:21","nodeType":"YulIdentifier","src":"3108:9:21"},{"kind":"number","nativeSrc":"3119:2:21","nodeType":"YulLiteral","src":"3119:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3104:3:21","nodeType":"YulIdentifier","src":"3104:3:21"},"nativeSrc":"3104:18:21","nodeType":"YulFunctionCall","src":"3104:18:21"},{"kind":"number","nativeSrc":"3124:2:21","nodeType":"YulLiteral","src":"3124:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"3097:6:21","nodeType":"YulIdentifier","src":"3097:6:21"},"nativeSrc":"3097:30:21","nodeType":"YulFunctionCall","src":"3097:30:21"},"nativeSrc":"3097:30:21","nodeType":"YulExpressionStatement","src":"3097:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3147:9:21","nodeType":"YulIdentifier","src":"3147:9:21"},{"kind":"number","nativeSrc":"3158:2:21","nodeType":"YulLiteral","src":"3158:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3143:3:21","nodeType":"YulIdentifier","src":"3143:3:21"},"nativeSrc":"3143:18:21","nodeType":"YulFunctionCall","src":"3143:18:21"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nativeSrc":"3163:34:21","nodeType":"YulLiteral","src":"3163:34:21","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"3136:6:21","nodeType":"YulIdentifier","src":"3136:6:21"},"nativeSrc":"3136:62:21","nodeType":"YulFunctionCall","src":"3136:62:21"},"nativeSrc":"3136:62:21","nodeType":"YulExpressionStatement","src":"3136:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3218:9:21","nodeType":"YulIdentifier","src":"3218:9:21"},{"kind":"number","nativeSrc":"3229:2:21","nodeType":"YulLiteral","src":"3229:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3214:3:21","nodeType":"YulIdentifier","src":"3214:3:21"},"nativeSrc":"3214:18:21","nodeType":"YulFunctionCall","src":"3214:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"3234:8:21","nodeType":"YulLiteral","src":"3234:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"3207:6:21","nodeType":"YulIdentifier","src":"3207:6:21"},"nativeSrc":"3207:36:21","nodeType":"YulFunctionCall","src":"3207:36:21"},"nativeSrc":"3207:36:21","nodeType":"YulExpressionStatement","src":"3207:36:21"},{"nativeSrc":"3252:27:21","nodeType":"YulAssignment","src":"3252:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3264:9:21","nodeType":"YulIdentifier","src":"3264:9:21"},{"kind":"number","nativeSrc":"3275:3:21","nodeType":"YulLiteral","src":"3275:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3260:3:21","nodeType":"YulIdentifier","src":"3260:3:21"},"nativeSrc":"3260:19:21","nodeType":"YulFunctionCall","src":"3260:19:21"},"variableNames":[{"name":"tail","nativeSrc":"3252:4:21","nodeType":"YulIdentifier","src":"3252:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2883:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3034:9:21","nodeType":"YulTypedName","src":"3034:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3048:4:21","nodeType":"YulTypedName","src":"3048:4:21","type":""}],"src":"2883:402:21"},{"body":{"nativeSrc":"3464:235:21","nodeType":"YulBlock","src":"3464:235:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3481:9:21","nodeType":"YulIdentifier","src":"3481:9:21"},{"kind":"number","nativeSrc":"3492:2:21","nodeType":"YulLiteral","src":"3492:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3474:6:21","nodeType":"YulIdentifier","src":"3474:6:21"},"nativeSrc":"3474:21:21","nodeType":"YulFunctionCall","src":"3474:21:21"},"nativeSrc":"3474:21:21","nodeType":"YulExpressionStatement","src":"3474:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3515:9:21","nodeType":"YulIdentifier","src":"3515:9:21"},{"kind":"number","nativeSrc":"3526:2:21","nodeType":"YulLiteral","src":"3526:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3511:3:21","nodeType":"YulIdentifier","src":"3511:3:21"},"nativeSrc":"3511:18:21","nodeType":"YulFunctionCall","src":"3511:18:21"},{"kind":"number","nativeSrc":"3531:2:21","nodeType":"YulLiteral","src":"3531:2:21","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"3504:6:21","nodeType":"YulIdentifier","src":"3504:6:21"},"nativeSrc":"3504:30:21","nodeType":"YulFunctionCall","src":"3504:30:21"},"nativeSrc":"3504:30:21","nodeType":"YulExpressionStatement","src":"3504:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3554:9:21","nodeType":"YulIdentifier","src":"3554:9:21"},{"kind":"number","nativeSrc":"3565:2:21","nodeType":"YulLiteral","src":"3565:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3550:3:21","nodeType":"YulIdentifier","src":"3550:3:21"},"nativeSrc":"3550:18:21","nodeType":"YulFunctionCall","src":"3550:18:21"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"3570:34:21","nodeType":"YulLiteral","src":"3570:34:21","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"3543:6:21","nodeType":"YulIdentifier","src":"3543:6:21"},"nativeSrc":"3543:62:21","nodeType":"YulFunctionCall","src":"3543:62:21"},"nativeSrc":"3543:62:21","nodeType":"YulExpressionStatement","src":"3543:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3625:9:21","nodeType":"YulIdentifier","src":"3625:9:21"},{"kind":"number","nativeSrc":"3636:2:21","nodeType":"YulLiteral","src":"3636:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3621:3:21","nodeType":"YulIdentifier","src":"3621:3:21"},"nativeSrc":"3621:18:21","nodeType":"YulFunctionCall","src":"3621:18:21"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"3641:15:21","nodeType":"YulLiteral","src":"3641:15:21","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"3614:6:21","nodeType":"YulIdentifier","src":"3614:6:21"},"nativeSrc":"3614:43:21","nodeType":"YulFunctionCall","src":"3614:43:21"},"nativeSrc":"3614:43:21","nodeType":"YulExpressionStatement","src":"3614:43:21"},{"nativeSrc":"3666:27:21","nodeType":"YulAssignment","src":"3666:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3678:9:21","nodeType":"YulIdentifier","src":"3678:9:21"},{"kind":"number","nativeSrc":"3689:3:21","nodeType":"YulLiteral","src":"3689:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3674:3:21","nodeType":"YulIdentifier","src":"3674:3:21"},"nativeSrc":"3674:19:21","nodeType":"YulFunctionCall","src":"3674:19:21"},"variableNames":[{"name":"tail","nativeSrc":"3666:4:21","nodeType":"YulIdentifier","src":"3666:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3290:409:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3441:9:21","nodeType":"YulTypedName","src":"3441:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3455:4:21","nodeType":"YulTypedName","src":"3455:4:21","type":""}],"src":"3290:409:21"},{"body":{"nativeSrc":"3770:184:21","nodeType":"YulBlock","src":"3770:184:21","statements":[{"nativeSrc":"3780:10:21","nodeType":"YulVariableDeclaration","src":"3780:10:21","value":{"kind":"number","nativeSrc":"3789:1:21","nodeType":"YulLiteral","src":"3789:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3784:1:21","nodeType":"YulTypedName","src":"3784:1:21","type":""}]},{"body":{"nativeSrc":"3849:63:21","nodeType":"YulBlock","src":"3849:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3874:3:21","nodeType":"YulIdentifier","src":"3874:3:21"},{"name":"i","nativeSrc":"3879:1:21","nodeType":"YulIdentifier","src":"3879:1:21"}],"functionName":{"name":"add","nativeSrc":"3870:3:21","nodeType":"YulIdentifier","src":"3870:3:21"},"nativeSrc":"3870:11:21","nodeType":"YulFunctionCall","src":"3870:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3893:3:21","nodeType":"YulIdentifier","src":"3893:3:21"},{"name":"i","nativeSrc":"3898:1:21","nodeType":"YulIdentifier","src":"3898:1:21"}],"functionName":{"name":"add","nativeSrc":"3889:3:21","nodeType":"YulIdentifier","src":"3889:3:21"},"nativeSrc":"3889:11:21","nodeType":"YulFunctionCall","src":"3889:11:21"}],"functionName":{"name":"mload","nativeSrc":"3883:5:21","nodeType":"YulIdentifier","src":"3883:5:21"},"nativeSrc":"3883:18:21","nodeType":"YulFunctionCall","src":"3883:18:21"}],"functionName":{"name":"mstore","nativeSrc":"3863:6:21","nodeType":"YulIdentifier","src":"3863:6:21"},"nativeSrc":"3863:39:21","nodeType":"YulFunctionCall","src":"3863:39:21"},"nativeSrc":"3863:39:21","nodeType":"YulExpressionStatement","src":"3863:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3810:1:21","nodeType":"YulIdentifier","src":"3810:1:21"},{"name":"length","nativeSrc":"3813:6:21","nodeType":"YulIdentifier","src":"3813:6:21"}],"functionName":{"name":"lt","nativeSrc":"3807:2:21","nodeType":"YulIdentifier","src":"3807:2:21"},"nativeSrc":"3807:13:21","nodeType":"YulFunctionCall","src":"3807:13:21"},"nativeSrc":"3799:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"3821:19:21","nodeType":"YulBlock","src":"3821:19:21","statements":[{"nativeSrc":"3823:15:21","nodeType":"YulAssignment","src":"3823:15:21","value":{"arguments":[{"name":"i","nativeSrc":"3832:1:21","nodeType":"YulIdentifier","src":"3832:1:21"},{"kind":"number","nativeSrc":"3835:2:21","nodeType":"YulLiteral","src":"3835:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3828:3:21","nodeType":"YulIdentifier","src":"3828:3:21"},"nativeSrc":"3828:10:21","nodeType":"YulFunctionCall","src":"3828:10:21"},"variableNames":[{"name":"i","nativeSrc":"3823:1:21","nodeType":"YulIdentifier","src":"3823:1:21"}]}]},"pre":{"nativeSrc":"3803:3:21","nodeType":"YulBlock","src":"3803:3:21","statements":[]},"src":"3799:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3932:3:21","nodeType":"YulIdentifier","src":"3932:3:21"},{"name":"length","nativeSrc":"3937:6:21","nodeType":"YulIdentifier","src":"3937:6:21"}],"functionName":{"name":"add","nativeSrc":"3928:3:21","nodeType":"YulIdentifier","src":"3928:3:21"},"nativeSrc":"3928:16:21","nodeType":"YulFunctionCall","src":"3928:16:21"},{"kind":"number","nativeSrc":"3946:1:21","nodeType":"YulLiteral","src":"3946:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3921:6:21","nodeType":"YulIdentifier","src":"3921:6:21"},"nativeSrc":"3921:27:21","nodeType":"YulFunctionCall","src":"3921:27:21"},"nativeSrc":"3921:27:21","nodeType":"YulExpressionStatement","src":"3921:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3704:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3748:3:21","nodeType":"YulTypedName","src":"3748:3:21","type":""},{"name":"dst","nativeSrc":"3753:3:21","nodeType":"YulTypedName","src":"3753:3:21","type":""},{"name":"length","nativeSrc":"3758:6:21","nodeType":"YulTypedName","src":"3758:6:21","type":""}],"src":"3704:250:21"},{"body":{"nativeSrc":"4096:150:21","nodeType":"YulBlock","src":"4096:150:21","statements":[{"nativeSrc":"4106:27:21","nodeType":"YulVariableDeclaration","src":"4106:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"4126:6:21","nodeType":"YulIdentifier","src":"4126:6:21"}],"functionName":{"name":"mload","nativeSrc":"4120:5:21","nodeType":"YulIdentifier","src":"4120:5:21"},"nativeSrc":"4120:13:21","nodeType":"YulFunctionCall","src":"4120:13:21"},"variables":[{"name":"length","nativeSrc":"4110:6:21","nodeType":"YulTypedName","src":"4110:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4181:6:21","nodeType":"YulIdentifier","src":"4181:6:21"},{"kind":"number","nativeSrc":"4189:4:21","nodeType":"YulLiteral","src":"4189:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4177:3:21","nodeType":"YulIdentifier","src":"4177:3:21"},"nativeSrc":"4177:17:21","nodeType":"YulFunctionCall","src":"4177:17:21"},{"name":"pos","nativeSrc":"4196:3:21","nodeType":"YulIdentifier","src":"4196:3:21"},{"name":"length","nativeSrc":"4201:6:21","nodeType":"YulIdentifier","src":"4201:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4142:34:21","nodeType":"YulIdentifier","src":"4142:34:21"},"nativeSrc":"4142:66:21","nodeType":"YulFunctionCall","src":"4142:66:21"},"nativeSrc":"4142:66:21","nodeType":"YulExpressionStatement","src":"4142:66:21"},{"nativeSrc":"4217:23:21","nodeType":"YulAssignment","src":"4217:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"4228:3:21","nodeType":"YulIdentifier","src":"4228:3:21"},{"name":"length","nativeSrc":"4233:6:21","nodeType":"YulIdentifier","src":"4233:6:21"}],"functionName":{"name":"add","nativeSrc":"4224:3:21","nodeType":"YulIdentifier","src":"4224:3:21"},"nativeSrc":"4224:16:21","nodeType":"YulFunctionCall","src":"4224:16:21"},"variableNames":[{"name":"end","nativeSrc":"4217:3:21","nodeType":"YulIdentifier","src":"4217:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"3959:287:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4072:3:21","nodeType":"YulTypedName","src":"4072:3:21","type":""},{"name":"value0","nativeSrc":"4077:6:21","nodeType":"YulTypedName","src":"4077:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4088:3:21","nodeType":"YulTypedName","src":"4088:3:21","type":""}],"src":"3959:287:21"},{"body":{"nativeSrc":"4425:179:21","nodeType":"YulBlock","src":"4425:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4442:9:21","nodeType":"YulIdentifier","src":"4442:9:21"},{"kind":"number","nativeSrc":"4453:2:21","nodeType":"YulLiteral","src":"4453:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4435:6:21","nodeType":"YulIdentifier","src":"4435:6:21"},"nativeSrc":"4435:21:21","nodeType":"YulFunctionCall","src":"4435:21:21"},"nativeSrc":"4435:21:21","nodeType":"YulExpressionStatement","src":"4435:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4476:9:21","nodeType":"YulIdentifier","src":"4476:9:21"},{"kind":"number","nativeSrc":"4487:2:21","nodeType":"YulLiteral","src":"4487:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4472:3:21","nodeType":"YulIdentifier","src":"4472:3:21"},"nativeSrc":"4472:18:21","nodeType":"YulFunctionCall","src":"4472:18:21"},{"kind":"number","nativeSrc":"4492:2:21","nodeType":"YulLiteral","src":"4492:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"4465:6:21","nodeType":"YulIdentifier","src":"4465:6:21"},"nativeSrc":"4465:30:21","nodeType":"YulFunctionCall","src":"4465:30:21"},"nativeSrc":"4465:30:21","nodeType":"YulExpressionStatement","src":"4465:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4515:9:21","nodeType":"YulIdentifier","src":"4515:9:21"},{"kind":"number","nativeSrc":"4526:2:21","nodeType":"YulLiteral","src":"4526:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4511:3:21","nodeType":"YulIdentifier","src":"4511:3:21"},"nativeSrc":"4511:18:21","nodeType":"YulFunctionCall","src":"4511:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"4531:31:21","nodeType":"YulLiteral","src":"4531:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"4504:6:21","nodeType":"YulIdentifier","src":"4504:6:21"},"nativeSrc":"4504:59:21","nodeType":"YulFunctionCall","src":"4504:59:21"},"nativeSrc":"4504:59:21","nodeType":"YulExpressionStatement","src":"4504:59:21"},{"nativeSrc":"4572:26:21","nodeType":"YulAssignment","src":"4572:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4584:9:21","nodeType":"YulIdentifier","src":"4584:9:21"},{"kind":"number","nativeSrc":"4595:2:21","nodeType":"YulLiteral","src":"4595:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4580:3:21","nodeType":"YulIdentifier","src":"4580:3:21"},"nativeSrc":"4580:18:21","nodeType":"YulFunctionCall","src":"4580:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4572:4:21","nodeType":"YulIdentifier","src":"4572:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4251:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4402:9:21","nodeType":"YulTypedName","src":"4402:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4416:4:21","nodeType":"YulTypedName","src":"4416:4:21","type":""}],"src":"4251:353:21"},{"body":{"nativeSrc":"4730:275:21","nodeType":"YulBlock","src":"4730:275:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4747:9:21","nodeType":"YulIdentifier","src":"4747:9:21"},{"kind":"number","nativeSrc":"4758:2:21","nodeType":"YulLiteral","src":"4758:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4740:6:21","nodeType":"YulIdentifier","src":"4740:6:21"},"nativeSrc":"4740:21:21","nodeType":"YulFunctionCall","src":"4740:21:21"},"nativeSrc":"4740:21:21","nodeType":"YulExpressionStatement","src":"4740:21:21"},{"nativeSrc":"4770:27:21","nodeType":"YulVariableDeclaration","src":"4770:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"4790:6:21","nodeType":"YulIdentifier","src":"4790:6:21"}],"functionName":{"name":"mload","nativeSrc":"4784:5:21","nodeType":"YulIdentifier","src":"4784:5:21"},"nativeSrc":"4784:13:21","nodeType":"YulFunctionCall","src":"4784:13:21"},"variables":[{"name":"length","nativeSrc":"4774:6:21","nodeType":"YulTypedName","src":"4774:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4817:9:21","nodeType":"YulIdentifier","src":"4817:9:21"},{"kind":"number","nativeSrc":"4828:2:21","nodeType":"YulLiteral","src":"4828:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4813:3:21","nodeType":"YulIdentifier","src":"4813:3:21"},"nativeSrc":"4813:18:21","nodeType":"YulFunctionCall","src":"4813:18:21"},{"name":"length","nativeSrc":"4833:6:21","nodeType":"YulIdentifier","src":"4833:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4806:6:21","nodeType":"YulIdentifier","src":"4806:6:21"},"nativeSrc":"4806:34:21","nodeType":"YulFunctionCall","src":"4806:34:21"},"nativeSrc":"4806:34:21","nodeType":"YulExpressionStatement","src":"4806:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4888:6:21","nodeType":"YulIdentifier","src":"4888:6:21"},{"kind":"number","nativeSrc":"4896:2:21","nodeType":"YulLiteral","src":"4896:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4884:3:21","nodeType":"YulIdentifier","src":"4884:3:21"},"nativeSrc":"4884:15:21","nodeType":"YulFunctionCall","src":"4884:15:21"},{"arguments":[{"name":"headStart","nativeSrc":"4905:9:21","nodeType":"YulIdentifier","src":"4905:9:21"},{"kind":"number","nativeSrc":"4916:2:21","nodeType":"YulLiteral","src":"4916:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4901:3:21","nodeType":"YulIdentifier","src":"4901:3:21"},"nativeSrc":"4901:18:21","nodeType":"YulFunctionCall","src":"4901:18:21"},{"name":"length","nativeSrc":"4921:6:21","nodeType":"YulIdentifier","src":"4921:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4849:34:21","nodeType":"YulIdentifier","src":"4849:34:21"},"nativeSrc":"4849:79:21","nodeType":"YulFunctionCall","src":"4849:79:21"},"nativeSrc":"4849:79:21","nodeType":"YulExpressionStatement","src":"4849:79:21"},{"nativeSrc":"4937:62:21","nodeType":"YulAssignment","src":"4937:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4953:9:21","nodeType":"YulIdentifier","src":"4953:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4972:6:21","nodeType":"YulIdentifier","src":"4972:6:21"},{"kind":"number","nativeSrc":"4980:2:21","nodeType":"YulLiteral","src":"4980:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4968:3:21","nodeType":"YulIdentifier","src":"4968:3:21"},"nativeSrc":"4968:15:21","nodeType":"YulFunctionCall","src":"4968:15:21"},{"arguments":[{"kind":"number","nativeSrc":"4989:2:21","nodeType":"YulLiteral","src":"4989:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4985:3:21","nodeType":"YulIdentifier","src":"4985:3:21"},"nativeSrc":"4985:7:21","nodeType":"YulFunctionCall","src":"4985:7:21"}],"functionName":{"name":"and","nativeSrc":"4964:3:21","nodeType":"YulIdentifier","src":"4964:3:21"},"nativeSrc":"4964:29:21","nodeType":"YulFunctionCall","src":"4964:29:21"}],"functionName":{"name":"add","nativeSrc":"4949:3:21","nodeType":"YulIdentifier","src":"4949:3:21"},"nativeSrc":"4949:45:21","nodeType":"YulFunctionCall","src":"4949:45:21"},{"kind":"number","nativeSrc":"4996:2:21","nodeType":"YulLiteral","src":"4996:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4945:3:21","nodeType":"YulIdentifier","src":"4945:3:21"},"nativeSrc":"4945:54:21","nodeType":"YulFunctionCall","src":"4945:54:21"},"variableNames":[{"name":"tail","nativeSrc":"4937:4:21","nodeType":"YulIdentifier","src":"4937:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4609:396:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:21","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nativeSrc":"4710:6:21","nodeType":"YulTypedName","src":"4710:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4721:4:21","nodeType":"YulTypedName","src":"4721:4:21","type":""}],"src":"4609:396:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"TransparentUpgradeableProxy: adm\")\n        mstore(add(headStart, 96), \"in cannot fallback to proxy targ\")\n        mstore(add(headStart, 128), \"et\")\n        tail := add(headStart, 160)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function abi_decode_address_payable(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_payable(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_payablet_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_payable(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1967: new admin is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523661001357610011610017565b005b6100115b61001f610169565b6001600160a01b0316330361015f5760606001600160e01b0319600035166364d3180d60e11b810161005a5761005361019c565b9150610157565b63587086bd60e11b6001600160e01b031982160161007a576100536101f3565b63070d7c6960e41b6001600160e01b031982160161009a57610053610239565b621eb96f60e61b6001600160e01b03198216016100b95761005361026a565b63a39f25e560e01b6001600160e01b03198216016100d9576100536102aa565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101676102be565b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60606101a66102ce565b60006101b53660048184610683565b8101906101c291906106c9565b90506101df816040518060200160405280600081525060006102d9565b505060408051602081019091526000815290565b60606000806102053660048184610683565b81019061021291906106fa565b91509150610222828260016102d9565b604051806020016040528060008152509250505090565b60606102436102ce565b60006102523660048184610683565b81019061025f91906106c9565b90506101df81610305565b60606102746102ce565b600061027e610169565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102b46102ce565b600061027e61035c565b6101676102c961035c565b61036b565b341561016757600080fd5b6102e28361038f565b6000825111806102ef5750805b15610300576102fe83836103cf565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61032e610169565b604080516001600160a01b03928316815291841660208301520160405180910390a1610359816103fb565b50565b60006103666104a4565b905090565b3660008037600080366000845af43d6000803e80801561038a573d6000f35b3d6000fd5b610398816104cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f4838360405180606001604052806027815260200161083060279139610560565b9392505050565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61018d565b6001600160a01b0381163b6105395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161014e565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610483565b6060600080856001600160a01b03168560405161057d91906107e0565b600060405180830381855af49150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105bd565b606091505b50915091506105ce868383876105d8565b9695505050505050565b60608315610647578251600003610640576001600160a01b0385163b6106405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b5081610651565b6106518383610659565b949350505050565b8151156106695781518083602001fd5b8060405162461bcd60e51b815260040161014e91906107fc565b6000808585111561069357600080fd5b838611156106a057600080fd5b5050820193919092039150565b80356001600160a01b03811681146106c457600080fd5b919050565b6000602082840312156106db57600080fd5b6103f4826106ad565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561070d57600080fd5b610716836106ad565b9150602083013567ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b813581811115610759576107596106e4565b604051601f8201601f19908116603f01168101908382118183101715610781576107816106e4565b8160405282815288602084870101111561079a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600082516107f28184602087016107bc565b9190910192915050565b602081526000825180602084015261081b8160408501602087016107bc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x1F PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15F JUMPI PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH4 0x64D3180D PUSH1 0xE1 SHL DUP2 ADD PUSH2 0x5A JUMPI PUSH2 0x53 PUSH2 0x19C JUMP JUMPDEST SWAP2 POP PUSH2 0x157 JUMP JUMPDEST PUSH4 0x587086BD PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x7A JUMPI PUSH2 0x53 PUSH2 0x1F3 JUMP JUMPDEST PUSH4 0x70D7C69 PUSH1 0xE4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0x9A JUMPI PUSH2 0x53 PUSH2 0x239 JUMP JUMPDEST PUSH3 0x1EB96F PUSH1 0xE6 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xB9 JUMPI PUSH2 0x53 PUSH2 0x26A JUMP JUMPDEST PUSH4 0xA39F25E5 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND ADD PUSH2 0xD9 JUMPI PUSH2 0x53 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD RETURN JUMPDEST PUSH2 0x167 PUSH2 0x2BE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A6 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x2D9 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x222 DUP3 DUP3 PUSH1 0x1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x243 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x683 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF DUP2 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x274 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B4 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E PUSH2 0x35C JUMP JUMPDEST PUSH2 0x167 PUSH2 0x2C9 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2EF JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FE DUP4 DUP4 PUSH2 0x3CF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x32E PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x359 DUP2 PUSH2 0x3FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x38A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x830 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x560 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x483 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5CE DUP7 DUP4 DUP4 DUP8 PUSH2 0x5D8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x647 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x640 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST POP DUP2 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x651 DUP4 DUP4 PUSH2 0x659 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x669 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x6AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6AD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x759 JUMPI PUSH2 0x759 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0x6E4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7F2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x81B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A164 PUSH20 0x6F6C6343000816000A0000000000000000000000 ","sourceMap":"143:220:17:-:0;;;;;;2898:11:9;:9;:11::i;:::-;143:220:17;;2675:11:9;4407:1102:12;4482:11;:9;:11::i;:::-;-1:-1:-1;;;;;4468:25:12;:10;:25;4464:1039;;4509:16;-1:-1:-1;;;;;;4539:15:12;4557:7;;-1:-1:-1;;;4582:59:12;;4578:779;;4667:20;:18;:20::i;:::-;4661:26;;4578:779;;;-1:-1:-1;;;;;;;;;4712:66:12;;;4708:649;;4804:27;:25;:27::i;4708:649::-;-1:-1:-1;;;;;;;;;4856:61:12;;;4852:505;;4943:22;:20;:22::i;4852:505::-;-1:-1:-1;;;;;;;;;4990:55:12;;;4986:371;;5071:16;:14;:16::i;4986:371::-;-1:-1:-1;;;;;;;;;5112:64:12;;;5108:249;;5202:25;:23;:25::i;5108:249::-;5266:76;;-1:-1:-1;;;5266:76:12;;216:2:21;5266:76:12;;;198:21:21;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:34;345:18;;;338:62;-1:-1:-1;;;416:19:21;;;409:33;459:19;;5266:76:12;;;;;;;;5108:249;5426:3;5420:10;5413:4;5408:3;5404:14;5397:34;4464:1039;5475:17;:15;:17::i;:::-;4407:1102::o;3784:122:8:-;3828:7;3656:66;3854:39;:45;-1:-1:-1;;;;;3854:45:8;;3784:122;-1:-1:-1;3784:122:8:o;6985:255:12:-;7032:12;7056:19;:17;:19::i;:::-;7086:25;7125:12;:8;7134:1;7125:8;7086:25;7125:12;:::i;:::-;7114:35;;;;;;;:::i;:::-;7086:63;;7159:54;7177:17;7196:9;;;;;;;;;;;;7207:5;7159:17;:54::i;:::-;-1:-1:-1;;7224:9:12;;;;;;;;;-1:-1:-1;7224:9:12;;;6985:255::o;7524:254::-;7578:12;7603:25;;7662:12;:8;7671:1;7662:8;7603:25;7662:12;:::i;:::-;7651:42;;;;;;;:::i;:::-;7602:91;;;;7703:48;7721:17;7740:4;7746;7703:17;:48::i;:::-;7762:9;;;;;;;;;;;;;;;;7524:254;:::o;6694:216::-;6743:12;6767:19;:17;:19::i;:::-;6797:16;6827:12;:8;6836:1;6827:8;6797:16;6827:12;:::i;:::-;6816:35;;;;;;;:::i;:::-;6797:54;;6861:22;6874:8;6861:12;:22::i;5860:165::-;5903:12;5927:19;:17;:19::i;:::-;5957:13;5973:11;:9;:11::i;:::-;6001:17;;;-1:-1:-1;;;;;2530:32:21;;6001:17:12;;;2512:51:21;5957:27:12;;-1:-1:-1;2485:18:21;6001:17:12;;;;;;;;;;;;5994:24;;;5860:165;:::o;6385:198::-;6437:12;6461:19;:17;:19::i;:::-;6491:22;6516:17;:15;:17::i;2322:110:9:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;8261:77:12:-;8316:9;:14;8308:23;;;;;2057:265:8;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2204:112;2057:265;;;:::o;4300:135::-;4364:35;4377:11;:9;:11::i;:::-;4364:35;;;-1:-1:-1;;;;;2804:15:21;;;2786:34;;2856:15;;;2851:2;2836:18;;2829:43;2721:18;4364:35:8;;;;;;;4409:19;4419:8;4409:9;:19::i;:::-;4300:135;:::o;1148:140:7:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;948:895:9:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1771:152:8;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:8;;;;;;;;1771:152;:::o;6674:198:13:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:13:o;3988:201:8:-;-1:-1:-1;;;;;4051:22:8;;4043:73;;;;-1:-1:-1;;;4043:73:8;;3085:2:21;4043:73:8;;;3067:21:21;3124:2;3104:18;;;3097:30;3163:34;3143:18;;;3136:62;-1:-1:-1;;;3214:18:21;;;3207:36;3260:19;;4043:73:8;2883:402:21;4043:73:8;4174:8;3656:66;4126:39;:56;;-1:-1:-1;;;;;;4126:56:8;-1:-1:-1;;;;;4126:56:8;;;;;;;;;;-1:-1:-1;3988:201:8:o;1175:140::-;1228:7;1030:66;1254:48;1859:190:15;1406:259:8;-1:-1:-1;;;;;1702:19:13;;;1479:95:8;;;;-1:-1:-1;;;1479:95:8;;3492:2:21;1479:95:8;;;3474:21:21;3531:2;3511:18;;;3504:30;3570:34;3550:18;;;3543:62;-1:-1:-1;;;3621:18:21;;;3614:43;3674:19;;1479:95:8;3290:409:21;1479:95:8;1641:17;1030:66;1584:48;1859:190:15;7058:325:13;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:13;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:13:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:13;;;8113:60;;;;-1:-1:-1;;;8113:60:13;;4453:2:21;8113:60:13;;;4435:21:21;4492:2;4472:18;;;4465:30;4531:31;4511:18;;;4504:59;4580:18;;8113:60:13;4251:353:21;8113:60:13;-1:-1:-1;8208:10:13;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:13;;;;;;;;:::i;489:331:21:-;594:9;605;647:8;635:10;632:24;629:44;;;669:1;666;659:12;629:44;698:6;688:8;685:20;682:40;;;718:1;715;708:12;682:40;-1:-1:-1;;744:23:21;;;789:25;;;;;-1:-1:-1;489:331:21:o;825:181::-;901:20;;-1:-1:-1;;;;;950:31:21;;940:42;;930:70;;996:1;993;986:12;930:70;825:181;;;:::o;1011:202::-;1078:6;1131:2;1119:9;1110:7;1106:23;1102:32;1099:52;;;1147:1;1144;1137:12;1099:52;1170:37;1197:9;1170:37;:::i;1218:127::-;1279:10;1274:3;1270:20;1267:1;1260:31;1310:4;1307:1;1300:15;1334:4;1331:1;1324:15;1350:1011;1435:6;1443;1496:2;1484:9;1475:7;1471:23;1467:32;1464:52;;;1512:1;1509;1502:12;1464:52;1535:37;1562:9;1535:37;:::i;:::-;1525:47;;1623:2;1612:9;1608:18;1595:32;1646:18;1687:2;1679:6;1676:14;1673:34;;;1703:1;1700;1693:12;1673:34;1741:6;1730:9;1726:22;1716:32;;1786:7;1779:4;1775:2;1771:13;1767:27;1757:55;;1808:1;1805;1798:12;1757:55;1844:2;1831:16;1866:2;1862;1859:10;1856:36;;;1872:18;;:::i;:::-;1947:2;1941:9;1915:2;2001:13;;-1:-1:-1;;1997:22:21;;;2021:2;1993:31;1989:40;1977:53;;;2045:18;;;2065:22;;;2042:46;2039:72;;;2091:18;;:::i;:::-;2131:10;2127:2;2120:22;2166:2;2158:6;2151:18;2206:7;2201:2;2196;2192;2188:11;2184:20;2181:33;2178:53;;;2227:1;2224;2217:12;2178:53;2283:2;2278;2274;2270:11;2265:2;2257:6;2253:15;2240:46;2328:1;2323:2;2318;2310:6;2306:15;2302:24;2295:35;2349:6;2339:16;;;;;;;1350:1011;;;;;:::o;3704:250::-;3789:1;3799:113;3813:6;3810:1;3807:13;3799:113;;;3889:11;;;3883:18;3870:11;;;3863:39;3835:2;3828:10;3799:113;;;-1:-1:-1;;3946:1:21;3928:16;;3921:27;3704:250::o;3959:287::-;4088:3;4126:6;4120:13;4142:66;4201:6;4196:3;4189:4;4181:6;4177:17;4142:66;:::i;:::-;4224:16;;;;;3959:287;-1:-1:-1;;3959:287:21:o;4609:396::-;4758:2;4747:9;4740:21;4721:4;4790:6;4784:13;4833:6;4828:2;4817:9;4813:18;4806:34;4849:79;4921:6;4916:2;4905:9;4901:18;4896:2;4888:6;4884:15;4849:79;:::i;:::-;4989:2;4968:15;-1:-1:-1;;4964:29:21;4949:45;;;;4996:2;4945:54;;4609:396;-1:-1:-1;;4609:396:21:o"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorProxy.sol\":\"MonadSwapAggregatorProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\\\";\\n\\ncontract MonadSwapAggregatorProxy is TransparentUpgradeableProxy {\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) TransparentUpgradeableProxy(_logic, admin_, _data) {}\\n}\",\"keccak256\":\"0xe1e2c068ba70c7971b83485836beaa4219defeee415d08de6218874d497d5f6c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/MonadSwapAggregatorProxyAdmin.sol":{"MonadSwapAggregatorProxyAdmin":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2793":{"entryPoint":null,"id":2793,"parameterSlots":0,"returnSlots":0},"@_696":{"entryPoint":null,"id":696,"parameterSlots":0,"returnSlots":0},"@_msgSender_2020":{"entryPoint":null,"id":2020,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_784":{"entryPoint":31,"id":784,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61066b8061007e6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead1461016457600080fd5b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610499565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee3660046104bd565b610229565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461050c565b610291565b34801561013057600080fd5b506100d161013f3660046104bd565b610300565b34801561015057600080fd5b506100d161015f366004610499565b610336565b34801561017057600080fd5b506100a061017f366004610499565b6103b4565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d91906105e2565b949350505050565b61021d6103da565b6102276000610434565b565b6102316103da565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050505050565b6102996103da565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102c990869086906004016105ff565b6000604051808303818588803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b5050505050505050565b6103086103da565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe69060240161025b565b61033e6103da565b6001600160a01b0381166103a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103b181610434565b50565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b6000546001600160a01b031633146102275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146103b157600080fd5b6000602082840312156104ab57600080fd5b81356104b681610484565b9392505050565b600080604083850312156104d057600080fd5b82356104db81610484565b915060208301356104eb81610484565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561052157600080fd5b833561052c81610484565b9250602084013561053c81610484565b9150604084013567ffffffffffffffff8082111561055957600080fd5b818601915086601f83011261056d57600080fd5b81358181111561057f5761057f6104f6565b604051601f8201601f19908116603f011681019083821181831017156105a7576105a76104f6565b816040528281528960208487010111156105c057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156105f457600080fd5b81516104b681610484565b60018060a01b03831681526000602060406020840152835180604085015260005b8181101561063c57858101830151858201606001528201610620565b506000606082860101526060601f19601f83011685010192505050939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x66B DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA0 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x227 PUSH1 0x0 PUSH2 0x434 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F28397 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x8F283970 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x299 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x2C9 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x308 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x3659CFE6 SWAP1 PUSH1 0x24 ADD PUSH2 0x25B JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x3E14691 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4DB DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EB DUP2 PUSH2 0x484 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x52C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x53C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x4F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x620 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"126:90:18:-:0;;;185:29;;;;;;;;;-1:-1:-1;936:32:4;719:10:14;936:18:4;:32::i;:::-;126:90:18;;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;126:90:18:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_727":{"entryPoint":986,"id":727,"parameterSlots":0,"returnSlots":0},"@_msgSender_2020":{"entryPoint":null,"id":2020,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_784":{"entryPoint":1076,"id":784,"parameterSlots":1,"returnSlots":0},"@changeProxyAdmin_1312":{"entryPoint":553,"id":1312,"parameterSlots":2,"returnSlots":0},"@getProxyAdmin_1294":{"entryPoint":948,"id":1294,"parameterSlots":1,"returnSlots":1},"@getProxyImplementation_1260":{"entryPoint":388,"id":1260,"parameterSlots":1,"returnSlots":1},"@owner_713":{"entryPoint":null,"id":713,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_741":{"entryPoint":533,"id":741,"parameterSlots":0,"returnSlots":0},"@transferOwnership_764":{"entryPoint":822,"id":764,"parameterSlots":1,"returnSlots":0},"@upgradeAndCall_1354":{"entryPoint":657,"id":1354,"parameterSlots":3,"returnSlots":0},"@upgrade_1330":{"entryPoint":768,"id":1330,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":1506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_address":{"entryPoint":1213,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_addresst_bytes_memory_ptr":{"entryPoint":1292,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1535,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":1270,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_contract_ITransparentUpgradeableProxy":{"entryPoint":1156,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5161:21","nodeType":"YulBlock","src":"0:5161:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"89:86:21","nodeType":"YulBlock","src":"89:86:21","statements":[{"body":{"nativeSrc":"153:16:21","nodeType":"YulBlock","src":"153:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"162:1:21","nodeType":"YulLiteral","src":"162:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"165:1:21","nodeType":"YulLiteral","src":"165:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"155:6:21","nodeType":"YulIdentifier","src":"155:6:21"},"nativeSrc":"155:12:21","nodeType":"YulFunctionCall","src":"155:12:21"},"nativeSrc":"155:12:21","nodeType":"YulExpressionStatement","src":"155:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"112:5:21","nodeType":"YulIdentifier","src":"112:5:21"},{"arguments":[{"name":"value","nativeSrc":"123:5:21","nodeType":"YulIdentifier","src":"123:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"138:3:21","nodeType":"YulLiteral","src":"138:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"143:1:21","nodeType":"YulLiteral","src":"143:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"134:3:21","nodeType":"YulIdentifier","src":"134:3:21"},"nativeSrc":"134:11:21","nodeType":"YulFunctionCall","src":"134:11:21"},{"kind":"number","nativeSrc":"147:1:21","nodeType":"YulLiteral","src":"147:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"130:3:21","nodeType":"YulIdentifier","src":"130:3:21"},"nativeSrc":"130:19:21","nodeType":"YulFunctionCall","src":"130:19:21"}],"functionName":{"name":"and","nativeSrc":"119:3:21","nodeType":"YulIdentifier","src":"119:3:21"},"nativeSrc":"119:31:21","nodeType":"YulFunctionCall","src":"119:31:21"}],"functionName":{"name":"eq","nativeSrc":"109:2:21","nodeType":"YulIdentifier","src":"109:2:21"},"nativeSrc":"109:42:21","nodeType":"YulFunctionCall","src":"109:42:21"}],"functionName":{"name":"iszero","nativeSrc":"102:6:21","nodeType":"YulIdentifier","src":"102:6:21"},"nativeSrc":"102:50:21","nodeType":"YulFunctionCall","src":"102:50:21"},"nativeSrc":"99:70:21","nodeType":"YulIf","src":"99:70:21"}]},"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"14:161:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"78:5:21","nodeType":"YulTypedName","src":"78:5:21","type":""}],"src":"14:161:21"},{"body":{"nativeSrc":"287:207:21","nodeType":"YulBlock","src":"287:207:21","statements":[{"body":{"nativeSrc":"333:16:21","nodeType":"YulBlock","src":"333:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"342:1:21","nodeType":"YulLiteral","src":"342:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"345:1:21","nodeType":"YulLiteral","src":"345:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"335:6:21","nodeType":"YulIdentifier","src":"335:6:21"},"nativeSrc":"335:12:21","nodeType":"YulFunctionCall","src":"335:12:21"},"nativeSrc":"335:12:21","nodeType":"YulExpressionStatement","src":"335:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"308:7:21","nodeType":"YulIdentifier","src":"308:7:21"},{"name":"headStart","nativeSrc":"317:9:21","nodeType":"YulIdentifier","src":"317:9:21"}],"functionName":{"name":"sub","nativeSrc":"304:3:21","nodeType":"YulIdentifier","src":"304:3:21"},"nativeSrc":"304:23:21","nodeType":"YulFunctionCall","src":"304:23:21"},{"kind":"number","nativeSrc":"329:2:21","nodeType":"YulLiteral","src":"329:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"300:3:21","nodeType":"YulIdentifier","src":"300:3:21"},"nativeSrc":"300:32:21","nodeType":"YulFunctionCall","src":"300:32:21"},"nativeSrc":"297:52:21","nodeType":"YulIf","src":"297:52:21"},{"nativeSrc":"358:36:21","nodeType":"YulVariableDeclaration","src":"358:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"384:9:21","nodeType":"YulIdentifier","src":"384:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"371:12:21","nodeType":"YulIdentifier","src":"371:12:21"},"nativeSrc":"371:23:21","nodeType":"YulFunctionCall","src":"371:23:21"},"variables":[{"name":"value","nativeSrc":"362:5:21","nodeType":"YulTypedName","src":"362:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"458:5:21","nodeType":"YulIdentifier","src":"458:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"403:54:21","nodeType":"YulIdentifier","src":"403:54:21"},"nativeSrc":"403:61:21","nodeType":"YulFunctionCall","src":"403:61:21"},"nativeSrc":"403:61:21","nodeType":"YulExpressionStatement","src":"403:61:21"},{"nativeSrc":"473:15:21","nodeType":"YulAssignment","src":"473:15:21","value":{"name":"value","nativeSrc":"483:5:21","nodeType":"YulIdentifier","src":"483:5:21"},"variableNames":[{"name":"value0","nativeSrc":"473:6:21","nodeType":"YulIdentifier","src":"473:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389","nativeSrc":"180:314:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"253:9:21","nodeType":"YulTypedName","src":"253:9:21","type":""},{"name":"dataEnd","nativeSrc":"264:7:21","nodeType":"YulTypedName","src":"264:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"276:6:21","nodeType":"YulTypedName","src":"276:6:21","type":""}],"src":"180:314:21"},{"body":{"nativeSrc":"600:102:21","nodeType":"YulBlock","src":"600:102:21","statements":[{"nativeSrc":"610:26:21","nodeType":"YulAssignment","src":"610:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"622:9:21","nodeType":"YulIdentifier","src":"622:9:21"},{"kind":"number","nativeSrc":"633:2:21","nodeType":"YulLiteral","src":"633:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"618:3:21","nodeType":"YulIdentifier","src":"618:3:21"},"nativeSrc":"618:18:21","nodeType":"YulFunctionCall","src":"618:18:21"},"variableNames":[{"name":"tail","nativeSrc":"610:4:21","nodeType":"YulIdentifier","src":"610:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"652:9:21","nodeType":"YulIdentifier","src":"652:9:21"},{"arguments":[{"name":"value0","nativeSrc":"667:6:21","nodeType":"YulIdentifier","src":"667:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"683:3:21","nodeType":"YulLiteral","src":"683:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"688:1:21","nodeType":"YulLiteral","src":"688:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"679:3:21","nodeType":"YulIdentifier","src":"679:3:21"},"nativeSrc":"679:11:21","nodeType":"YulFunctionCall","src":"679:11:21"},{"kind":"number","nativeSrc":"692:1:21","nodeType":"YulLiteral","src":"692:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"675:3:21","nodeType":"YulIdentifier","src":"675:3:21"},"nativeSrc":"675:19:21","nodeType":"YulFunctionCall","src":"675:19:21"}],"functionName":{"name":"and","nativeSrc":"663:3:21","nodeType":"YulIdentifier","src":"663:3:21"},"nativeSrc":"663:32:21","nodeType":"YulFunctionCall","src":"663:32:21"}],"functionName":{"name":"mstore","nativeSrc":"645:6:21","nodeType":"YulIdentifier","src":"645:6:21"},"nativeSrc":"645:51:21","nodeType":"YulFunctionCall","src":"645:51:21"},"nativeSrc":"645:51:21","nodeType":"YulExpressionStatement","src":"645:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"499:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"569:9:21","nodeType":"YulTypedName","src":"569:9:21","type":""},{"name":"value0","nativeSrc":"580:6:21","nodeType":"YulTypedName","src":"580:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"591:4:21","nodeType":"YulTypedName","src":"591:4:21","type":""}],"src":"499:203:21"},{"body":{"nativeSrc":"831:361:21","nodeType":"YulBlock","src":"831:361:21","statements":[{"body":{"nativeSrc":"877:16:21","nodeType":"YulBlock","src":"877:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"886:1:21","nodeType":"YulLiteral","src":"886:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"889:1:21","nodeType":"YulLiteral","src":"889:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"879:6:21","nodeType":"YulIdentifier","src":"879:6:21"},"nativeSrc":"879:12:21","nodeType":"YulFunctionCall","src":"879:12:21"},"nativeSrc":"879:12:21","nodeType":"YulExpressionStatement","src":"879:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"852:7:21","nodeType":"YulIdentifier","src":"852:7:21"},{"name":"headStart","nativeSrc":"861:9:21","nodeType":"YulIdentifier","src":"861:9:21"}],"functionName":{"name":"sub","nativeSrc":"848:3:21","nodeType":"YulIdentifier","src":"848:3:21"},"nativeSrc":"848:23:21","nodeType":"YulFunctionCall","src":"848:23:21"},{"kind":"number","nativeSrc":"873:2:21","nodeType":"YulLiteral","src":"873:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"844:3:21","nodeType":"YulIdentifier","src":"844:3:21"},"nativeSrc":"844:32:21","nodeType":"YulFunctionCall","src":"844:32:21"},"nativeSrc":"841:52:21","nodeType":"YulIf","src":"841:52:21"},{"nativeSrc":"902:36:21","nodeType":"YulVariableDeclaration","src":"902:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"928:9:21","nodeType":"YulIdentifier","src":"928:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"915:12:21","nodeType":"YulIdentifier","src":"915:12:21"},"nativeSrc":"915:23:21","nodeType":"YulFunctionCall","src":"915:23:21"},"variables":[{"name":"value","nativeSrc":"906:5:21","nodeType":"YulTypedName","src":"906:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1002:5:21","nodeType":"YulIdentifier","src":"1002:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"947:54:21","nodeType":"YulIdentifier","src":"947:54:21"},"nativeSrc":"947:61:21","nodeType":"YulFunctionCall","src":"947:61:21"},"nativeSrc":"947:61:21","nodeType":"YulExpressionStatement","src":"947:61:21"},{"nativeSrc":"1017:15:21","nodeType":"YulAssignment","src":"1017:15:21","value":{"name":"value","nativeSrc":"1027:5:21","nodeType":"YulIdentifier","src":"1027:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1017:6:21","nodeType":"YulIdentifier","src":"1017:6:21"}]},{"nativeSrc":"1041:47:21","nodeType":"YulVariableDeclaration","src":"1041:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1073:9:21","nodeType":"YulIdentifier","src":"1073:9:21"},{"kind":"number","nativeSrc":"1084:2:21","nodeType":"YulLiteral","src":"1084:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1069:3:21","nodeType":"YulIdentifier","src":"1069:3:21"},"nativeSrc":"1069:18:21","nodeType":"YulFunctionCall","src":"1069:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1056:12:21","nodeType":"YulIdentifier","src":"1056:12:21"},"nativeSrc":"1056:32:21","nodeType":"YulFunctionCall","src":"1056:32:21"},"variables":[{"name":"value_1","nativeSrc":"1045:7:21","nodeType":"YulTypedName","src":"1045:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"1152:7:21","nodeType":"YulIdentifier","src":"1152:7:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"1097:54:21","nodeType":"YulIdentifier","src":"1097:54:21"},"nativeSrc":"1097:63:21","nodeType":"YulFunctionCall","src":"1097:63:21"},"nativeSrc":"1097:63:21","nodeType":"YulExpressionStatement","src":"1097:63:21"},{"nativeSrc":"1169:17:21","nodeType":"YulAssignment","src":"1169:17:21","value":{"name":"value_1","nativeSrc":"1179:7:21","nodeType":"YulIdentifier","src":"1179:7:21"},"variableNames":[{"name":"value1","nativeSrc":"1169:6:21","nodeType":"YulIdentifier","src":"1169:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_address","nativeSrc":"707:485:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"789:9:21","nodeType":"YulTypedName","src":"789:9:21","type":""},{"name":"dataEnd","nativeSrc":"800:7:21","nodeType":"YulTypedName","src":"800:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"812:6:21","nodeType":"YulTypedName","src":"812:6:21","type":""},{"name":"value1","nativeSrc":"820:6:21","nodeType":"YulTypedName","src":"820:6:21","type":""}],"src":"707:485:21"},{"body":{"nativeSrc":"1229:95:21","nodeType":"YulBlock","src":"1229:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1246:1:21","nodeType":"YulLiteral","src":"1246:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1253:3:21","nodeType":"YulLiteral","src":"1253:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"1258:10:21","nodeType":"YulLiteral","src":"1258:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1249:3:21","nodeType":"YulIdentifier","src":"1249:3:21"},"nativeSrc":"1249:20:21","nodeType":"YulFunctionCall","src":"1249:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1239:6:21","nodeType":"YulIdentifier","src":"1239:6:21"},"nativeSrc":"1239:31:21","nodeType":"YulFunctionCall","src":"1239:31:21"},"nativeSrc":"1239:31:21","nodeType":"YulExpressionStatement","src":"1239:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1286:1:21","nodeType":"YulLiteral","src":"1286:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1289:4:21","nodeType":"YulLiteral","src":"1289:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1279:6:21","nodeType":"YulIdentifier","src":"1279:6:21"},"nativeSrc":"1279:15:21","nodeType":"YulFunctionCall","src":"1279:15:21"},"nativeSrc":"1279:15:21","nodeType":"YulExpressionStatement","src":"1279:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1310:1:21","nodeType":"YulLiteral","src":"1310:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1313:4:21","nodeType":"YulLiteral","src":"1313:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1303:6:21","nodeType":"YulIdentifier","src":"1303:6:21"},"nativeSrc":"1303:15:21","nodeType":"YulFunctionCall","src":"1303:15:21"},"nativeSrc":"1303:15:21","nodeType":"YulExpressionStatement","src":"1303:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1197:127:21","nodeType":"YulFunctionDefinition","src":"1197:127:21"},{"body":{"nativeSrc":"1479:1144:21","nodeType":"YulBlock","src":"1479:1144:21","statements":[{"body":{"nativeSrc":"1525:16:21","nodeType":"YulBlock","src":"1525:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1534:1:21","nodeType":"YulLiteral","src":"1534:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1537:1:21","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1527:6:21","nodeType":"YulIdentifier","src":"1527:6:21"},"nativeSrc":"1527:12:21","nodeType":"YulFunctionCall","src":"1527:12:21"},"nativeSrc":"1527:12:21","nodeType":"YulExpressionStatement","src":"1527:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1500:7:21","nodeType":"YulIdentifier","src":"1500:7:21"},{"name":"headStart","nativeSrc":"1509:9:21","nodeType":"YulIdentifier","src":"1509:9:21"}],"functionName":{"name":"sub","nativeSrc":"1496:3:21","nodeType":"YulIdentifier","src":"1496:3:21"},"nativeSrc":"1496:23:21","nodeType":"YulFunctionCall","src":"1496:23:21"},{"kind":"number","nativeSrc":"1521:2:21","nodeType":"YulLiteral","src":"1521:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1492:3:21","nodeType":"YulIdentifier","src":"1492:3:21"},"nativeSrc":"1492:32:21","nodeType":"YulFunctionCall","src":"1492:32:21"},"nativeSrc":"1489:52:21","nodeType":"YulIf","src":"1489:52:21"},{"nativeSrc":"1550:36:21","nodeType":"YulVariableDeclaration","src":"1550:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1576:9:21","nodeType":"YulIdentifier","src":"1576:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1563:12:21","nodeType":"YulIdentifier","src":"1563:12:21"},"nativeSrc":"1563:23:21","nodeType":"YulFunctionCall","src":"1563:23:21"},"variables":[{"name":"value","nativeSrc":"1554:5:21","nodeType":"YulTypedName","src":"1554:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1650:5:21","nodeType":"YulIdentifier","src":"1650:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"1595:54:21","nodeType":"YulIdentifier","src":"1595:54:21"},"nativeSrc":"1595:61:21","nodeType":"YulFunctionCall","src":"1595:61:21"},"nativeSrc":"1595:61:21","nodeType":"YulExpressionStatement","src":"1595:61:21"},{"nativeSrc":"1665:15:21","nodeType":"YulAssignment","src":"1665:15:21","value":{"name":"value","nativeSrc":"1675:5:21","nodeType":"YulIdentifier","src":"1675:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1665:6:21","nodeType":"YulIdentifier","src":"1665:6:21"}]},{"nativeSrc":"1689:47:21","nodeType":"YulVariableDeclaration","src":"1689:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1721:9:21","nodeType":"YulIdentifier","src":"1721:9:21"},{"kind":"number","nativeSrc":"1732:2:21","nodeType":"YulLiteral","src":"1732:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1717:3:21","nodeType":"YulIdentifier","src":"1717:3:21"},"nativeSrc":"1717:18:21","nodeType":"YulFunctionCall","src":"1717:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1704:12:21","nodeType":"YulIdentifier","src":"1704:12:21"},"nativeSrc":"1704:32:21","nodeType":"YulFunctionCall","src":"1704:32:21"},"variables":[{"name":"value_1","nativeSrc":"1693:7:21","nodeType":"YulTypedName","src":"1693:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"1800:7:21","nodeType":"YulIdentifier","src":"1800:7:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"1745:54:21","nodeType":"YulIdentifier","src":"1745:54:21"},"nativeSrc":"1745:63:21","nodeType":"YulFunctionCall","src":"1745:63:21"},"nativeSrc":"1745:63:21","nodeType":"YulExpressionStatement","src":"1745:63:21"},{"nativeSrc":"1817:17:21","nodeType":"YulAssignment","src":"1817:17:21","value":{"name":"value_1","nativeSrc":"1827:7:21","nodeType":"YulIdentifier","src":"1827:7:21"},"variableNames":[{"name":"value1","nativeSrc":"1817:6:21","nodeType":"YulIdentifier","src":"1817:6:21"}]},{"nativeSrc":"1843:46:21","nodeType":"YulVariableDeclaration","src":"1843:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1874:9:21","nodeType":"YulIdentifier","src":"1874:9:21"},{"kind":"number","nativeSrc":"1885:2:21","nodeType":"YulLiteral","src":"1885:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1870:3:21","nodeType":"YulIdentifier","src":"1870:3:21"},"nativeSrc":"1870:18:21","nodeType":"YulFunctionCall","src":"1870:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1857:12:21","nodeType":"YulIdentifier","src":"1857:12:21"},"nativeSrc":"1857:32:21","nodeType":"YulFunctionCall","src":"1857:32:21"},"variables":[{"name":"offset","nativeSrc":"1847:6:21","nodeType":"YulTypedName","src":"1847:6:21","type":""}]},{"nativeSrc":"1898:28:21","nodeType":"YulVariableDeclaration","src":"1898:28:21","value":{"kind":"number","nativeSrc":"1908:18:21","nodeType":"YulLiteral","src":"1908:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1902:2:21","nodeType":"YulTypedName","src":"1902:2:21","type":""}]},{"body":{"nativeSrc":"1953:16:21","nodeType":"YulBlock","src":"1953:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1962:1:21","nodeType":"YulLiteral","src":"1962:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1965:1:21","nodeType":"YulLiteral","src":"1965:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1955:6:21","nodeType":"YulIdentifier","src":"1955:6:21"},"nativeSrc":"1955:12:21","nodeType":"YulFunctionCall","src":"1955:12:21"},"nativeSrc":"1955:12:21","nodeType":"YulExpressionStatement","src":"1955:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1941:6:21","nodeType":"YulIdentifier","src":"1941:6:21"},{"name":"_1","nativeSrc":"1949:2:21","nodeType":"YulIdentifier","src":"1949:2:21"}],"functionName":{"name":"gt","nativeSrc":"1938:2:21","nodeType":"YulIdentifier","src":"1938:2:21"},"nativeSrc":"1938:14:21","nodeType":"YulFunctionCall","src":"1938:14:21"},"nativeSrc":"1935:34:21","nodeType":"YulIf","src":"1935:34:21"},{"nativeSrc":"1978:32:21","nodeType":"YulVariableDeclaration","src":"1978:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1992:9:21","nodeType":"YulIdentifier","src":"1992:9:21"},{"name":"offset","nativeSrc":"2003:6:21","nodeType":"YulIdentifier","src":"2003:6:21"}],"functionName":{"name":"add","nativeSrc":"1988:3:21","nodeType":"YulIdentifier","src":"1988:3:21"},"nativeSrc":"1988:22:21","nodeType":"YulFunctionCall","src":"1988:22:21"},"variables":[{"name":"_2","nativeSrc":"1982:2:21","nodeType":"YulTypedName","src":"1982:2:21","type":""}]},{"body":{"nativeSrc":"2058:16:21","nodeType":"YulBlock","src":"2058:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2067:1:21","nodeType":"YulLiteral","src":"2067:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2070:1:21","nodeType":"YulLiteral","src":"2070:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2060:6:21","nodeType":"YulIdentifier","src":"2060:6:21"},"nativeSrc":"2060:12:21","nodeType":"YulFunctionCall","src":"2060:12:21"},"nativeSrc":"2060:12:21","nodeType":"YulExpressionStatement","src":"2060:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2037:2:21","nodeType":"YulIdentifier","src":"2037:2:21"},{"kind":"number","nativeSrc":"2041:4:21","nodeType":"YulLiteral","src":"2041:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2033:3:21","nodeType":"YulIdentifier","src":"2033:3:21"},"nativeSrc":"2033:13:21","nodeType":"YulFunctionCall","src":"2033:13:21"},{"name":"dataEnd","nativeSrc":"2048:7:21","nodeType":"YulIdentifier","src":"2048:7:21"}],"functionName":{"name":"slt","nativeSrc":"2029:3:21","nodeType":"YulIdentifier","src":"2029:3:21"},"nativeSrc":"2029:27:21","nodeType":"YulFunctionCall","src":"2029:27:21"}],"functionName":{"name":"iszero","nativeSrc":"2022:6:21","nodeType":"YulIdentifier","src":"2022:6:21"},"nativeSrc":"2022:35:21","nodeType":"YulFunctionCall","src":"2022:35:21"},"nativeSrc":"2019:55:21","nodeType":"YulIf","src":"2019:55:21"},{"nativeSrc":"2083:26:21","nodeType":"YulVariableDeclaration","src":"2083:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"2106:2:21","nodeType":"YulIdentifier","src":"2106:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"2093:12:21","nodeType":"YulIdentifier","src":"2093:12:21"},"nativeSrc":"2093:16:21","nodeType":"YulFunctionCall","src":"2093:16:21"},"variables":[{"name":"_3","nativeSrc":"2087:2:21","nodeType":"YulTypedName","src":"2087:2:21","type":""}]},{"body":{"nativeSrc":"2132:22:21","nodeType":"YulBlock","src":"2132:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2134:16:21","nodeType":"YulIdentifier","src":"2134:16:21"},"nativeSrc":"2134:18:21","nodeType":"YulFunctionCall","src":"2134:18:21"},"nativeSrc":"2134:18:21","nodeType":"YulExpressionStatement","src":"2134:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"2124:2:21","nodeType":"YulIdentifier","src":"2124:2:21"},{"name":"_1","nativeSrc":"2128:2:21","nodeType":"YulIdentifier","src":"2128:2:21"}],"functionName":{"name":"gt","nativeSrc":"2121:2:21","nodeType":"YulIdentifier","src":"2121:2:21"},"nativeSrc":"2121:10:21","nodeType":"YulFunctionCall","src":"2121:10:21"},"nativeSrc":"2118:36:21","nodeType":"YulIf","src":"2118:36:21"},{"nativeSrc":"2163:17:21","nodeType":"YulVariableDeclaration","src":"2163:17:21","value":{"arguments":[{"kind":"number","nativeSrc":"2177:2:21","nodeType":"YulLiteral","src":"2177:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2173:3:21","nodeType":"YulIdentifier","src":"2173:3:21"},"nativeSrc":"2173:7:21","nodeType":"YulFunctionCall","src":"2173:7:21"},"variables":[{"name":"_4","nativeSrc":"2167:2:21","nodeType":"YulTypedName","src":"2167:2:21","type":""}]},{"nativeSrc":"2189:23:21","nodeType":"YulVariableDeclaration","src":"2189:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"2209:2:21","nodeType":"YulLiteral","src":"2209:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2203:5:21","nodeType":"YulIdentifier","src":"2203:5:21"},"nativeSrc":"2203:9:21","nodeType":"YulFunctionCall","src":"2203:9:21"},"variables":[{"name":"memPtr","nativeSrc":"2193:6:21","nodeType":"YulTypedName","src":"2193:6:21","type":""}]},{"nativeSrc":"2221:71:21","nodeType":"YulVariableDeclaration","src":"2221:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"2243:6:21","nodeType":"YulIdentifier","src":"2243:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2267:2:21","nodeType":"YulIdentifier","src":"2267:2:21"},{"kind":"number","nativeSrc":"2271:4:21","nodeType":"YulLiteral","src":"2271:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2263:3:21","nodeType":"YulIdentifier","src":"2263:3:21"},"nativeSrc":"2263:13:21","nodeType":"YulFunctionCall","src":"2263:13:21"},{"name":"_4","nativeSrc":"2278:2:21","nodeType":"YulIdentifier","src":"2278:2:21"}],"functionName":{"name":"and","nativeSrc":"2259:3:21","nodeType":"YulIdentifier","src":"2259:3:21"},"nativeSrc":"2259:22:21","nodeType":"YulFunctionCall","src":"2259:22:21"},{"kind":"number","nativeSrc":"2283:2:21","nodeType":"YulLiteral","src":"2283:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"2255:3:21","nodeType":"YulIdentifier","src":"2255:3:21"},"nativeSrc":"2255:31:21","nodeType":"YulFunctionCall","src":"2255:31:21"},{"name":"_4","nativeSrc":"2288:2:21","nodeType":"YulIdentifier","src":"2288:2:21"}],"functionName":{"name":"and","nativeSrc":"2251:3:21","nodeType":"YulIdentifier","src":"2251:3:21"},"nativeSrc":"2251:40:21","nodeType":"YulFunctionCall","src":"2251:40:21"}],"functionName":{"name":"add","nativeSrc":"2239:3:21","nodeType":"YulIdentifier","src":"2239:3:21"},"nativeSrc":"2239:53:21","nodeType":"YulFunctionCall","src":"2239:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"2225:10:21","nodeType":"YulTypedName","src":"2225:10:21","type":""}]},{"body":{"nativeSrc":"2351:22:21","nodeType":"YulBlock","src":"2351:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2353:16:21","nodeType":"YulIdentifier","src":"2353:16:21"},"nativeSrc":"2353:18:21","nodeType":"YulFunctionCall","src":"2353:18:21"},"nativeSrc":"2353:18:21","nodeType":"YulExpressionStatement","src":"2353:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2310:10:21","nodeType":"YulIdentifier","src":"2310:10:21"},{"name":"_1","nativeSrc":"2322:2:21","nodeType":"YulIdentifier","src":"2322:2:21"}],"functionName":{"name":"gt","nativeSrc":"2307:2:21","nodeType":"YulIdentifier","src":"2307:2:21"},"nativeSrc":"2307:18:21","nodeType":"YulFunctionCall","src":"2307:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2330:10:21","nodeType":"YulIdentifier","src":"2330:10:21"},{"name":"memPtr","nativeSrc":"2342:6:21","nodeType":"YulIdentifier","src":"2342:6:21"}],"functionName":{"name":"lt","nativeSrc":"2327:2:21","nodeType":"YulIdentifier","src":"2327:2:21"},"nativeSrc":"2327:22:21","nodeType":"YulFunctionCall","src":"2327:22:21"}],"functionName":{"name":"or","nativeSrc":"2304:2:21","nodeType":"YulIdentifier","src":"2304:2:21"},"nativeSrc":"2304:46:21","nodeType":"YulFunctionCall","src":"2304:46:21"},"nativeSrc":"2301:72:21","nodeType":"YulIf","src":"2301:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2389:2:21","nodeType":"YulLiteral","src":"2389:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2393:10:21","nodeType":"YulIdentifier","src":"2393:10:21"}],"functionName":{"name":"mstore","nativeSrc":"2382:6:21","nodeType":"YulIdentifier","src":"2382:6:21"},"nativeSrc":"2382:22:21","nodeType":"YulFunctionCall","src":"2382:22:21"},"nativeSrc":"2382:22:21","nodeType":"YulExpressionStatement","src":"2382:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2420:6:21","nodeType":"YulIdentifier","src":"2420:6:21"},{"name":"_3","nativeSrc":"2428:2:21","nodeType":"YulIdentifier","src":"2428:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2413:6:21","nodeType":"YulIdentifier","src":"2413:6:21"},"nativeSrc":"2413:18:21","nodeType":"YulFunctionCall","src":"2413:18:21"},"nativeSrc":"2413:18:21","nodeType":"YulExpressionStatement","src":"2413:18:21"},{"body":{"nativeSrc":"2477:16:21","nodeType":"YulBlock","src":"2477:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2486:1:21","nodeType":"YulLiteral","src":"2486:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2489:1:21","nodeType":"YulLiteral","src":"2489:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2479:6:21","nodeType":"YulIdentifier","src":"2479:6:21"},"nativeSrc":"2479:12:21","nodeType":"YulFunctionCall","src":"2479:12:21"},"nativeSrc":"2479:12:21","nodeType":"YulExpressionStatement","src":"2479:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2454:2:21","nodeType":"YulIdentifier","src":"2454:2:21"},{"name":"_3","nativeSrc":"2458:2:21","nodeType":"YulIdentifier","src":"2458:2:21"}],"functionName":{"name":"add","nativeSrc":"2450:3:21","nodeType":"YulIdentifier","src":"2450:3:21"},"nativeSrc":"2450:11:21","nodeType":"YulFunctionCall","src":"2450:11:21"},{"kind":"number","nativeSrc":"2463:2:21","nodeType":"YulLiteral","src":"2463:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2446:3:21","nodeType":"YulIdentifier","src":"2446:3:21"},"nativeSrc":"2446:20:21","nodeType":"YulFunctionCall","src":"2446:20:21"},{"name":"dataEnd","nativeSrc":"2468:7:21","nodeType":"YulIdentifier","src":"2468:7:21"}],"functionName":{"name":"gt","nativeSrc":"2443:2:21","nodeType":"YulIdentifier","src":"2443:2:21"},"nativeSrc":"2443:33:21","nodeType":"YulFunctionCall","src":"2443:33:21"},"nativeSrc":"2440:53:21","nodeType":"YulIf","src":"2440:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2519:6:21","nodeType":"YulIdentifier","src":"2519:6:21"},{"kind":"number","nativeSrc":"2527:2:21","nodeType":"YulLiteral","src":"2527:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2515:3:21","nodeType":"YulIdentifier","src":"2515:3:21"},"nativeSrc":"2515:15:21","nodeType":"YulFunctionCall","src":"2515:15:21"},{"arguments":[{"name":"_2","nativeSrc":"2536:2:21","nodeType":"YulIdentifier","src":"2536:2:21"},{"kind":"number","nativeSrc":"2540:2:21","nodeType":"YulLiteral","src":"2540:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2532:3:21","nodeType":"YulIdentifier","src":"2532:3:21"},"nativeSrc":"2532:11:21","nodeType":"YulFunctionCall","src":"2532:11:21"},{"name":"_3","nativeSrc":"2545:2:21","nodeType":"YulIdentifier","src":"2545:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"2502:12:21","nodeType":"YulIdentifier","src":"2502:12:21"},"nativeSrc":"2502:46:21","nodeType":"YulFunctionCall","src":"2502:46:21"},"nativeSrc":"2502:46:21","nodeType":"YulExpressionStatement","src":"2502:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2572:6:21","nodeType":"YulIdentifier","src":"2572:6:21"},{"name":"_3","nativeSrc":"2580:2:21","nodeType":"YulIdentifier","src":"2580:2:21"}],"functionName":{"name":"add","nativeSrc":"2568:3:21","nodeType":"YulIdentifier","src":"2568:3:21"},"nativeSrc":"2568:15:21","nodeType":"YulFunctionCall","src":"2568:15:21"},{"kind":"number","nativeSrc":"2585:2:21","nodeType":"YulLiteral","src":"2585:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2564:3:21","nodeType":"YulIdentifier","src":"2564:3:21"},"nativeSrc":"2564:24:21","nodeType":"YulFunctionCall","src":"2564:24:21"},{"kind":"number","nativeSrc":"2590:1:21","nodeType":"YulLiteral","src":"2590:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2557:6:21","nodeType":"YulIdentifier","src":"2557:6:21"},"nativeSrc":"2557:35:21","nodeType":"YulFunctionCall","src":"2557:35:21"},"nativeSrc":"2557:35:21","nodeType":"YulExpressionStatement","src":"2557:35:21"},{"nativeSrc":"2601:16:21","nodeType":"YulAssignment","src":"2601:16:21","value":{"name":"memPtr","nativeSrc":"2611:6:21","nodeType":"YulIdentifier","src":"2611:6:21"},"variableNames":[{"name":"value2","nativeSrc":"2601:6:21","nodeType":"YulIdentifier","src":"2601:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_addresst_bytes_memory_ptr","nativeSrc":"1329:1294:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1429:9:21","nodeType":"YulTypedName","src":"1429:9:21","type":""},{"name":"dataEnd","nativeSrc":"1440:7:21","nodeType":"YulTypedName","src":"1440:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1452:6:21","nodeType":"YulTypedName","src":"1452:6:21","type":""},{"name":"value1","nativeSrc":"1460:6:21","nodeType":"YulTypedName","src":"1460:6:21","type":""},{"name":"value2","nativeSrc":"1468:6:21","nodeType":"YulTypedName","src":"1468:6:21","type":""}],"src":"1329:1294:21"},{"body":{"nativeSrc":"2698:207:21","nodeType":"YulBlock","src":"2698:207:21","statements":[{"body":{"nativeSrc":"2744:16:21","nodeType":"YulBlock","src":"2744:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2753:1:21","nodeType":"YulLiteral","src":"2753:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2756:1:21","nodeType":"YulLiteral","src":"2756:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2746:6:21","nodeType":"YulIdentifier","src":"2746:6:21"},"nativeSrc":"2746:12:21","nodeType":"YulFunctionCall","src":"2746:12:21"},"nativeSrc":"2746:12:21","nodeType":"YulExpressionStatement","src":"2746:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2719:7:21","nodeType":"YulIdentifier","src":"2719:7:21"},{"name":"headStart","nativeSrc":"2728:9:21","nodeType":"YulIdentifier","src":"2728:9:21"}],"functionName":{"name":"sub","nativeSrc":"2715:3:21","nodeType":"YulIdentifier","src":"2715:3:21"},"nativeSrc":"2715:23:21","nodeType":"YulFunctionCall","src":"2715:23:21"},{"kind":"number","nativeSrc":"2740:2:21","nodeType":"YulLiteral","src":"2740:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2711:3:21","nodeType":"YulIdentifier","src":"2711:3:21"},"nativeSrc":"2711:32:21","nodeType":"YulFunctionCall","src":"2711:32:21"},"nativeSrc":"2708:52:21","nodeType":"YulIf","src":"2708:52:21"},{"nativeSrc":"2769:36:21","nodeType":"YulVariableDeclaration","src":"2769:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2795:9:21","nodeType":"YulIdentifier","src":"2795:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"2782:12:21","nodeType":"YulIdentifier","src":"2782:12:21"},"nativeSrc":"2782:23:21","nodeType":"YulFunctionCall","src":"2782:23:21"},"variables":[{"name":"value","nativeSrc":"2773:5:21","nodeType":"YulTypedName","src":"2773:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2869:5:21","nodeType":"YulIdentifier","src":"2869:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"2814:54:21","nodeType":"YulIdentifier","src":"2814:54:21"},"nativeSrc":"2814:61:21","nodeType":"YulFunctionCall","src":"2814:61:21"},"nativeSrc":"2814:61:21","nodeType":"YulExpressionStatement","src":"2814:61:21"},{"nativeSrc":"2884:15:21","nodeType":"YulAssignment","src":"2884:15:21","value":{"name":"value","nativeSrc":"2894:5:21","nodeType":"YulIdentifier","src":"2894:5:21"},"variableNames":[{"name":"value0","nativeSrc":"2884:6:21","nodeType":"YulIdentifier","src":"2884:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2628:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2664:9:21","nodeType":"YulTypedName","src":"2664:9:21","type":""},{"name":"dataEnd","nativeSrc":"2675:7:21","nodeType":"YulTypedName","src":"2675:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2687:6:21","nodeType":"YulTypedName","src":"2687:6:21","type":""}],"src":"2628:277:21"},{"body":{"nativeSrc":"3101:76:21","nodeType":"YulBlock","src":"3101:76:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3118:3:21","nodeType":"YulIdentifier","src":"3118:3:21"},{"arguments":[{"kind":"number","nativeSrc":"3127:3:21","nodeType":"YulLiteral","src":"3127:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"3132:10:21","nodeType":"YulLiteral","src":"3132:10:21","type":"","value":"0x5c60da1b"}],"functionName":{"name":"shl","nativeSrc":"3123:3:21","nodeType":"YulIdentifier","src":"3123:3:21"},"nativeSrc":"3123:20:21","nodeType":"YulFunctionCall","src":"3123:20:21"}],"functionName":{"name":"mstore","nativeSrc":"3111:6:21","nodeType":"YulIdentifier","src":"3111:6:21"},"nativeSrc":"3111:33:21","nodeType":"YulFunctionCall","src":"3111:33:21"},"nativeSrc":"3111:33:21","nodeType":"YulExpressionStatement","src":"3111:33:21"},{"nativeSrc":"3153:18:21","nodeType":"YulAssignment","src":"3153:18:21","value":{"arguments":[{"name":"pos","nativeSrc":"3164:3:21","nodeType":"YulIdentifier","src":"3164:3:21"},{"kind":"number","nativeSrc":"3169:1:21","nodeType":"YulLiteral","src":"3169:1:21","type":"","value":"4"}],"functionName":{"name":"add","nativeSrc":"3160:3:21","nodeType":"YulIdentifier","src":"3160:3:21"},"nativeSrc":"3160:11:21","nodeType":"YulFunctionCall","src":"3160:11:21"},"variableNames":[{"name":"end","nativeSrc":"3153:3:21","nodeType":"YulIdentifier","src":"3153:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"2910:267:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3085:3:21","nodeType":"YulTypedName","src":"3085:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3093:3:21","nodeType":"YulTypedName","src":"3093:3:21","type":""}],"src":"2910:267:21"},{"body":{"nativeSrc":"3271:200:21","nodeType":"YulBlock","src":"3271:200:21","statements":[{"body":{"nativeSrc":"3317:16:21","nodeType":"YulBlock","src":"3317:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3326:1:21","nodeType":"YulLiteral","src":"3326:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3329:1:21","nodeType":"YulLiteral","src":"3329:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3319:6:21","nodeType":"YulIdentifier","src":"3319:6:21"},"nativeSrc":"3319:12:21","nodeType":"YulFunctionCall","src":"3319:12:21"},"nativeSrc":"3319:12:21","nodeType":"YulExpressionStatement","src":"3319:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3292:7:21","nodeType":"YulIdentifier","src":"3292:7:21"},{"name":"headStart","nativeSrc":"3301:9:21","nodeType":"YulIdentifier","src":"3301:9:21"}],"functionName":{"name":"sub","nativeSrc":"3288:3:21","nodeType":"YulIdentifier","src":"3288:3:21"},"nativeSrc":"3288:23:21","nodeType":"YulFunctionCall","src":"3288:23:21"},{"kind":"number","nativeSrc":"3313:2:21","nodeType":"YulLiteral","src":"3313:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3284:3:21","nodeType":"YulIdentifier","src":"3284:3:21"},"nativeSrc":"3284:32:21","nodeType":"YulFunctionCall","src":"3284:32:21"},"nativeSrc":"3281:52:21","nodeType":"YulIf","src":"3281:52:21"},{"nativeSrc":"3342:29:21","nodeType":"YulVariableDeclaration","src":"3342:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3361:9:21","nodeType":"YulIdentifier","src":"3361:9:21"}],"functionName":{"name":"mload","nativeSrc":"3355:5:21","nodeType":"YulIdentifier","src":"3355:5:21"},"nativeSrc":"3355:16:21","nodeType":"YulFunctionCall","src":"3355:16:21"},"variables":[{"name":"value","nativeSrc":"3346:5:21","nodeType":"YulTypedName","src":"3346:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3435:5:21","nodeType":"YulIdentifier","src":"3435:5:21"}],"functionName":{"name":"validator_revert_contract_ITransparentUpgradeableProxy","nativeSrc":"3380:54:21","nodeType":"YulIdentifier","src":"3380:54:21"},"nativeSrc":"3380:61:21","nodeType":"YulFunctionCall","src":"3380:61:21"},"nativeSrc":"3380:61:21","nodeType":"YulExpressionStatement","src":"3380:61:21"},{"nativeSrc":"3450:15:21","nodeType":"YulAssignment","src":"3450:15:21","value":{"name":"value","nativeSrc":"3460:5:21","nodeType":"YulIdentifier","src":"3460:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3450:6:21","nodeType":"YulIdentifier","src":"3450:6:21"}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nativeSrc":"3182:289:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3237:9:21","nodeType":"YulTypedName","src":"3237:9:21","type":""},{"name":"dataEnd","nativeSrc":"3248:7:21","nodeType":"YulTypedName","src":"3248:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3260:6:21","nodeType":"YulTypedName","src":"3260:6:21","type":""}],"src":"3182:289:21"},{"body":{"nativeSrc":"3623:496:21","nodeType":"YulBlock","src":"3623:496:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3640:9:21","nodeType":"YulIdentifier","src":"3640:9:21"},{"arguments":[{"name":"value0","nativeSrc":"3655:6:21","nodeType":"YulIdentifier","src":"3655:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3671:3:21","nodeType":"YulLiteral","src":"3671:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"3676:1:21","nodeType":"YulLiteral","src":"3676:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3667:3:21","nodeType":"YulIdentifier","src":"3667:3:21"},"nativeSrc":"3667:11:21","nodeType":"YulFunctionCall","src":"3667:11:21"},{"kind":"number","nativeSrc":"3680:1:21","nodeType":"YulLiteral","src":"3680:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3663:3:21","nodeType":"YulIdentifier","src":"3663:3:21"},"nativeSrc":"3663:19:21","nodeType":"YulFunctionCall","src":"3663:19:21"}],"functionName":{"name":"and","nativeSrc":"3651:3:21","nodeType":"YulIdentifier","src":"3651:3:21"},"nativeSrc":"3651:32:21","nodeType":"YulFunctionCall","src":"3651:32:21"}],"functionName":{"name":"mstore","nativeSrc":"3633:6:21","nodeType":"YulIdentifier","src":"3633:6:21"},"nativeSrc":"3633:51:21","nodeType":"YulFunctionCall","src":"3633:51:21"},"nativeSrc":"3633:51:21","nodeType":"YulExpressionStatement","src":"3633:51:21"},{"nativeSrc":"3693:12:21","nodeType":"YulVariableDeclaration","src":"3693:12:21","value":{"kind":"number","nativeSrc":"3703:2:21","nodeType":"YulLiteral","src":"3703:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3697:2:21","nodeType":"YulTypedName","src":"3697:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3725:9:21","nodeType":"YulIdentifier","src":"3725:9:21"},{"kind":"number","nativeSrc":"3736:2:21","nodeType":"YulLiteral","src":"3736:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3721:3:21","nodeType":"YulIdentifier","src":"3721:3:21"},"nativeSrc":"3721:18:21","nodeType":"YulFunctionCall","src":"3721:18:21"},{"kind":"number","nativeSrc":"3741:2:21","nodeType":"YulLiteral","src":"3741:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"3714:6:21","nodeType":"YulIdentifier","src":"3714:6:21"},"nativeSrc":"3714:30:21","nodeType":"YulFunctionCall","src":"3714:30:21"},"nativeSrc":"3714:30:21","nodeType":"YulExpressionStatement","src":"3714:30:21"},{"nativeSrc":"3753:27:21","nodeType":"YulVariableDeclaration","src":"3753:27:21","value":{"arguments":[{"name":"value1","nativeSrc":"3773:6:21","nodeType":"YulIdentifier","src":"3773:6:21"}],"functionName":{"name":"mload","nativeSrc":"3767:5:21","nodeType":"YulIdentifier","src":"3767:5:21"},"nativeSrc":"3767:13:21","nodeType":"YulFunctionCall","src":"3767:13:21"},"variables":[{"name":"length","nativeSrc":"3757:6:21","nodeType":"YulTypedName","src":"3757:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3800:9:21","nodeType":"YulIdentifier","src":"3800:9:21"},{"kind":"number","nativeSrc":"3811:2:21","nodeType":"YulLiteral","src":"3811:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3796:3:21","nodeType":"YulIdentifier","src":"3796:3:21"},"nativeSrc":"3796:18:21","nodeType":"YulFunctionCall","src":"3796:18:21"},{"name":"length","nativeSrc":"3816:6:21","nodeType":"YulIdentifier","src":"3816:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3789:6:21","nodeType":"YulIdentifier","src":"3789:6:21"},"nativeSrc":"3789:34:21","nodeType":"YulFunctionCall","src":"3789:34:21"},"nativeSrc":"3789:34:21","nodeType":"YulExpressionStatement","src":"3789:34:21"},{"nativeSrc":"3832:10:21","nodeType":"YulVariableDeclaration","src":"3832:10:21","value":{"kind":"number","nativeSrc":"3841:1:21","nodeType":"YulLiteral","src":"3841:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3836:1:21","nodeType":"YulTypedName","src":"3836:1:21","type":""}]},{"body":{"nativeSrc":"3901:90:21","nodeType":"YulBlock","src":"3901:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3930:9:21","nodeType":"YulIdentifier","src":"3930:9:21"},{"name":"i","nativeSrc":"3941:1:21","nodeType":"YulIdentifier","src":"3941:1:21"}],"functionName":{"name":"add","nativeSrc":"3926:3:21","nodeType":"YulIdentifier","src":"3926:3:21"},"nativeSrc":"3926:17:21","nodeType":"YulFunctionCall","src":"3926:17:21"},{"kind":"number","nativeSrc":"3945:2:21","nodeType":"YulLiteral","src":"3945:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3922:3:21","nodeType":"YulIdentifier","src":"3922:3:21"},"nativeSrc":"3922:26:21","nodeType":"YulFunctionCall","src":"3922:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"3964:6:21","nodeType":"YulIdentifier","src":"3964:6:21"},{"name":"i","nativeSrc":"3972:1:21","nodeType":"YulIdentifier","src":"3972:1:21"}],"functionName":{"name":"add","nativeSrc":"3960:3:21","nodeType":"YulIdentifier","src":"3960:3:21"},"nativeSrc":"3960:14:21","nodeType":"YulFunctionCall","src":"3960:14:21"},{"name":"_1","nativeSrc":"3976:2:21","nodeType":"YulIdentifier","src":"3976:2:21"}],"functionName":{"name":"add","nativeSrc":"3956:3:21","nodeType":"YulIdentifier","src":"3956:3:21"},"nativeSrc":"3956:23:21","nodeType":"YulFunctionCall","src":"3956:23:21"}],"functionName":{"name":"mload","nativeSrc":"3950:5:21","nodeType":"YulIdentifier","src":"3950:5:21"},"nativeSrc":"3950:30:21","nodeType":"YulFunctionCall","src":"3950:30:21"}],"functionName":{"name":"mstore","nativeSrc":"3915:6:21","nodeType":"YulIdentifier","src":"3915:6:21"},"nativeSrc":"3915:66:21","nodeType":"YulFunctionCall","src":"3915:66:21"},"nativeSrc":"3915:66:21","nodeType":"YulExpressionStatement","src":"3915:66:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3862:1:21","nodeType":"YulIdentifier","src":"3862:1:21"},{"name":"length","nativeSrc":"3865:6:21","nodeType":"YulIdentifier","src":"3865:6:21"}],"functionName":{"name":"lt","nativeSrc":"3859:2:21","nodeType":"YulIdentifier","src":"3859:2:21"},"nativeSrc":"3859:13:21","nodeType":"YulFunctionCall","src":"3859:13:21"},"nativeSrc":"3851:140:21","nodeType":"YulForLoop","post":{"nativeSrc":"3873:19:21","nodeType":"YulBlock","src":"3873:19:21","statements":[{"nativeSrc":"3875:15:21","nodeType":"YulAssignment","src":"3875:15:21","value":{"arguments":[{"name":"i","nativeSrc":"3884:1:21","nodeType":"YulIdentifier","src":"3884:1:21"},{"name":"_1","nativeSrc":"3887:2:21","nodeType":"YulIdentifier","src":"3887:2:21"}],"functionName":{"name":"add","nativeSrc":"3880:3:21","nodeType":"YulIdentifier","src":"3880:3:21"},"nativeSrc":"3880:10:21","nodeType":"YulFunctionCall","src":"3880:10:21"},"variableNames":[{"name":"i","nativeSrc":"3875:1:21","nodeType":"YulIdentifier","src":"3875:1:21"}]}]},"pre":{"nativeSrc":"3855:3:21","nodeType":"YulBlock","src":"3855:3:21","statements":[]},"src":"3851:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4015:9:21","nodeType":"YulIdentifier","src":"4015:9:21"},{"name":"length","nativeSrc":"4026:6:21","nodeType":"YulIdentifier","src":"4026:6:21"}],"functionName":{"name":"add","nativeSrc":"4011:3:21","nodeType":"YulIdentifier","src":"4011:3:21"},"nativeSrc":"4011:22:21","nodeType":"YulFunctionCall","src":"4011:22:21"},{"kind":"number","nativeSrc":"4035:2:21","nodeType":"YulLiteral","src":"4035:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4007:3:21","nodeType":"YulIdentifier","src":"4007:3:21"},"nativeSrc":"4007:31:21","nodeType":"YulFunctionCall","src":"4007:31:21"},{"kind":"number","nativeSrc":"4040:1:21","nodeType":"YulLiteral","src":"4040:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4000:6:21","nodeType":"YulIdentifier","src":"4000:6:21"},"nativeSrc":"4000:42:21","nodeType":"YulFunctionCall","src":"4000:42:21"},"nativeSrc":"4000:42:21","nodeType":"YulExpressionStatement","src":"4000:42:21"},{"nativeSrc":"4051:62:21","nodeType":"YulAssignment","src":"4051:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4067:9:21","nodeType":"YulIdentifier","src":"4067:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4086:6:21","nodeType":"YulIdentifier","src":"4086:6:21"},{"kind":"number","nativeSrc":"4094:2:21","nodeType":"YulLiteral","src":"4094:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4082:3:21","nodeType":"YulIdentifier","src":"4082:3:21"},"nativeSrc":"4082:15:21","nodeType":"YulFunctionCall","src":"4082:15:21"},{"arguments":[{"kind":"number","nativeSrc":"4103:2:21","nodeType":"YulLiteral","src":"4103:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4099:3:21","nodeType":"YulIdentifier","src":"4099:3:21"},"nativeSrc":"4099:7:21","nodeType":"YulFunctionCall","src":"4099:7:21"}],"functionName":{"name":"and","nativeSrc":"4078:3:21","nodeType":"YulIdentifier","src":"4078:3:21"},"nativeSrc":"4078:29:21","nodeType":"YulFunctionCall","src":"4078:29:21"}],"functionName":{"name":"add","nativeSrc":"4063:3:21","nodeType":"YulIdentifier","src":"4063:3:21"},"nativeSrc":"4063:45:21","nodeType":"YulFunctionCall","src":"4063:45:21"},{"kind":"number","nativeSrc":"4110:2:21","nodeType":"YulLiteral","src":"4110:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4059:3:21","nodeType":"YulIdentifier","src":"4059:3:21"},"nativeSrc":"4059:54:21","nodeType":"YulFunctionCall","src":"4059:54:21"},"variableNames":[{"name":"tail","nativeSrc":"4051:4:21","nodeType":"YulIdentifier","src":"4051:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"3476:643:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3584:9:21","nodeType":"YulTypedName","src":"3584:9:21","type":""},{"name":"value1","nativeSrc":"3595:6:21","nodeType":"YulTypedName","src":"3595:6:21","type":""},{"name":"value0","nativeSrc":"3603:6:21","nodeType":"YulTypedName","src":"3603:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3614:4:21","nodeType":"YulTypedName","src":"3614:4:21","type":""}],"src":"3476:643:21"},{"body":{"nativeSrc":"4298:228:21","nodeType":"YulBlock","src":"4298:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4315:9:21","nodeType":"YulIdentifier","src":"4315:9:21"},{"kind":"number","nativeSrc":"4326:2:21","nodeType":"YulLiteral","src":"4326:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4308:6:21","nodeType":"YulIdentifier","src":"4308:6:21"},"nativeSrc":"4308:21:21","nodeType":"YulFunctionCall","src":"4308:21:21"},"nativeSrc":"4308:21:21","nodeType":"YulExpressionStatement","src":"4308:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4349:9:21","nodeType":"YulIdentifier","src":"4349:9:21"},{"kind":"number","nativeSrc":"4360:2:21","nodeType":"YulLiteral","src":"4360:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4345:3:21","nodeType":"YulIdentifier","src":"4345:3:21"},"nativeSrc":"4345:18:21","nodeType":"YulFunctionCall","src":"4345:18:21"},{"kind":"number","nativeSrc":"4365:2:21","nodeType":"YulLiteral","src":"4365:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"4338:6:21","nodeType":"YulIdentifier","src":"4338:6:21"},"nativeSrc":"4338:30:21","nodeType":"YulFunctionCall","src":"4338:30:21"},"nativeSrc":"4338:30:21","nodeType":"YulExpressionStatement","src":"4338:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4388:9:21","nodeType":"YulIdentifier","src":"4388:9:21"},{"kind":"number","nativeSrc":"4399:2:21","nodeType":"YulLiteral","src":"4399:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4384:3:21","nodeType":"YulIdentifier","src":"4384:3:21"},"nativeSrc":"4384:18:21","nodeType":"YulFunctionCall","src":"4384:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"4404:34:21","nodeType":"YulLiteral","src":"4404:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"4377:6:21","nodeType":"YulIdentifier","src":"4377:6:21"},"nativeSrc":"4377:62:21","nodeType":"YulFunctionCall","src":"4377:62:21"},"nativeSrc":"4377:62:21","nodeType":"YulExpressionStatement","src":"4377:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4459:9:21","nodeType":"YulIdentifier","src":"4459:9:21"},{"kind":"number","nativeSrc":"4470:2:21","nodeType":"YulLiteral","src":"4470:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4455:3:21","nodeType":"YulIdentifier","src":"4455:3:21"},"nativeSrc":"4455:18:21","nodeType":"YulFunctionCall","src":"4455:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"4475:8:21","nodeType":"YulLiteral","src":"4475:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"4448:6:21","nodeType":"YulIdentifier","src":"4448:6:21"},"nativeSrc":"4448:36:21","nodeType":"YulFunctionCall","src":"4448:36:21"},"nativeSrc":"4448:36:21","nodeType":"YulExpressionStatement","src":"4448:36:21"},{"nativeSrc":"4493:27:21","nodeType":"YulAssignment","src":"4493:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4505:9:21","nodeType":"YulIdentifier","src":"4505:9:21"},{"kind":"number","nativeSrc":"4516:3:21","nodeType":"YulLiteral","src":"4516:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4501:3:21","nodeType":"YulIdentifier","src":"4501:3:21"},"nativeSrc":"4501:19:21","nodeType":"YulFunctionCall","src":"4501:19:21"},"variableNames":[{"name":"tail","nativeSrc":"4493:4:21","nodeType":"YulIdentifier","src":"4493:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4124:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4275:9:21","nodeType":"YulTypedName","src":"4275:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4289:4:21","nodeType":"YulTypedName","src":"4289:4:21","type":""}],"src":"4124:402:21"},{"body":{"nativeSrc":"4722:76:21","nodeType":"YulBlock","src":"4722:76:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4739:3:21","nodeType":"YulIdentifier","src":"4739:3:21"},{"arguments":[{"kind":"number","nativeSrc":"4748:3:21","nodeType":"YulLiteral","src":"4748:3:21","type":"","value":"230"},{"kind":"number","nativeSrc":"4753:10:21","nodeType":"YulLiteral","src":"4753:10:21","type":"","value":"0x03e14691"}],"functionName":{"name":"shl","nativeSrc":"4744:3:21","nodeType":"YulIdentifier","src":"4744:3:21"},"nativeSrc":"4744:20:21","nodeType":"YulFunctionCall","src":"4744:20:21"}],"functionName":{"name":"mstore","nativeSrc":"4732:6:21","nodeType":"YulIdentifier","src":"4732:6:21"},"nativeSrc":"4732:33:21","nodeType":"YulFunctionCall","src":"4732:33:21"},"nativeSrc":"4732:33:21","nodeType":"YulExpressionStatement","src":"4732:33:21"},{"nativeSrc":"4774:18:21","nodeType":"YulAssignment","src":"4774:18:21","value":{"arguments":[{"name":"pos","nativeSrc":"4785:3:21","nodeType":"YulIdentifier","src":"4785:3:21"},{"kind":"number","nativeSrc":"4790:1:21","nodeType":"YulLiteral","src":"4790:1:21","type":"","value":"4"}],"functionName":{"name":"add","nativeSrc":"4781:3:21","nodeType":"YulIdentifier","src":"4781:3:21"},"nativeSrc":"4781:11:21","nodeType":"YulFunctionCall","src":"4781:11:21"},"variableNames":[{"name":"end","nativeSrc":"4774:3:21","nodeType":"YulIdentifier","src":"4774:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4531:267:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4706:3:21","nodeType":"YulTypedName","src":"4706:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4714:3:21","nodeType":"YulTypedName","src":"4714:3:21","type":""}],"src":"4531:267:21"},{"body":{"nativeSrc":"4977:182:21","nodeType":"YulBlock","src":"4977:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4994:9:21","nodeType":"YulIdentifier","src":"4994:9:21"},{"kind":"number","nativeSrc":"5005:2:21","nodeType":"YulLiteral","src":"5005:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4987:6:21","nodeType":"YulIdentifier","src":"4987:6:21"},"nativeSrc":"4987:21:21","nodeType":"YulFunctionCall","src":"4987:21:21"},"nativeSrc":"4987:21:21","nodeType":"YulExpressionStatement","src":"4987:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5028:9:21","nodeType":"YulIdentifier","src":"5028:9:21"},{"kind":"number","nativeSrc":"5039:2:21","nodeType":"YulLiteral","src":"5039:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5024:3:21","nodeType":"YulIdentifier","src":"5024:3:21"},"nativeSrc":"5024:18:21","nodeType":"YulFunctionCall","src":"5024:18:21"},{"kind":"number","nativeSrc":"5044:2:21","nodeType":"YulLiteral","src":"5044:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5017:6:21","nodeType":"YulIdentifier","src":"5017:6:21"},"nativeSrc":"5017:30:21","nodeType":"YulFunctionCall","src":"5017:30:21"},"nativeSrc":"5017:30:21","nodeType":"YulExpressionStatement","src":"5017:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5067:9:21","nodeType":"YulIdentifier","src":"5067:9:21"},{"kind":"number","nativeSrc":"5078:2:21","nodeType":"YulLiteral","src":"5078:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5063:3:21","nodeType":"YulIdentifier","src":"5063:3:21"},"nativeSrc":"5063:18:21","nodeType":"YulFunctionCall","src":"5063:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"5083:34:21","nodeType":"YulLiteral","src":"5083:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"5056:6:21","nodeType":"YulIdentifier","src":"5056:6:21"},"nativeSrc":"5056:62:21","nodeType":"YulFunctionCall","src":"5056:62:21"},"nativeSrc":"5056:62:21","nodeType":"YulExpressionStatement","src":"5056:62:21"},{"nativeSrc":"5127:26:21","nodeType":"YulAssignment","src":"5127:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5139:9:21","nodeType":"YulIdentifier","src":"5139:9:21"},{"kind":"number","nativeSrc":"5150:2:21","nodeType":"YulLiteral","src":"5150:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5135:3:21","nodeType":"YulIdentifier","src":"5135:3:21"},"nativeSrc":"5135:18:21","nodeType":"YulFunctionCall","src":"5135:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5127:4:21","nodeType":"YulIdentifier","src":"5127:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4803:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4954:9:21","nodeType":"YulTypedName","src":"4954:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4968:4:21","nodeType":"YulTypedName","src":"4968:4:21","type":""}],"src":"4803:356:21"}]},"contents":"{\n    { }\n    function validator_revert_contract_ITransparentUpgradeableProxy(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ITransparentUpgradeableProxy(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$1389t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ITransparentUpgradeableProxy(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, shl(224, 0x5c60da1b))\n        end := add(pos, 4)\n    }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 32\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value1, i), _1)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, shl(230, 0x03e14691))\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead1461016457600080fd5b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610499565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee3660046104bd565b610229565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461050c565b610291565b34801561013057600080fd5b506100d161013f3660046104bd565b610300565b34801561015057600080fd5b506100d161015f366004610499565b610336565b34801561017057600080fd5b506100a061017f366004610499565b6103b4565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d91906105e2565b949350505050565b61021d6103da565b6102276000610434565b565b6102316103da565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050505050565b6102996103da565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102c990869086906004016105ff565b6000604051808303818588803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b5050505050505050565b6103086103da565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe69060240161025b565b61033e6103da565b6001600160a01b0381166103a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103b181610434565b50565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b6000546001600160a01b031633146102275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146103b157600080fd5b6000602082840312156104ab57600080fd5b81356104b681610484565b9392505050565b600080604083850312156104d057600080fd5b82356104db81610484565b915060208301356104eb81610484565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561052157600080fd5b833561052c81610484565b9250602084013561053c81610484565b9150604084013567ffffffffffffffff8082111561055957600080fd5b818601915086601f83011261056d57600080fd5b81358181111561057f5761057f6104f6565b604051601f8201601f19908116603f011681019083821181831017156105a7576105a76104f6565b816040528281528960208487010111156105c057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156105f457600080fd5b81516104b681610484565b60018060a01b03831681526000602060406020840152835180604085015260005b8181101561063c57858101830151858201606001528201610620565b506000606082860101526060601f19601f83011685010192505050939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA0 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x227 PUSH1 0x0 PUSH2 0x434 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F28397 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x8F283970 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x299 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x2C9 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x308 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x3659CFE6 SWAP1 PUSH1 0x24 ADD PUSH2 0x25B JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP1 PUSH4 0x3E14691 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4DB DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EB DUP2 PUSH2 0x484 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x52C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x53C DUP2 PUSH2 0x484 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x4F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4B6 DUP2 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x620 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"126:90:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:438:11;;;;;;;;;;-1:-1:-1;650:438:11;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;663:32:21;;;645:51;;633:2;618:18;650:438:11;;;;;;;1824:101:4;;;;;;;;;;;;;:::i;:::-;;1842:149:11;;;;;;;;;;-1:-1:-1;1842:149:11;;;;;:::i;:::-;;:::i;1201:85:4:-;;;;;;;;;;-1:-1:-1;1247:7:4;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;2612:245:11;;;;;;:::i;:::-;;:::i;2196:150::-;;;;;;;;;;-1:-1:-1;2196:150:11;;;;;:::i;:::-;;:::i;2074:198:4:-;;;;;;;;;;-1:-1:-1;2074:198:4;;;;;:::i;:::-;;:::i;1248:420:11:-;;;;;;;;;;-1:-1:-1;1248:420:11;;;;;:::i;:::-;;:::i;650:438::-;747:7;924:12;938:23;973:5;-1:-1:-1;;;;;965:25:11;:40;;;;-1:-1:-1;;;3111:33:21;;3169:1;3160:11;;2910:267;965:40:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:82;;;;1023:7;1015:16;;;;;;1059:10;1048:33;;;;;;;;;;;;:::i;:::-;1041:40;650:438;-1:-1:-1;;;;650:438:11:o;1824:101:4:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1842:149:11:-;1094:13:4;:11;:13::i;:::-;1957:27:11::1;::::0;-1:-1:-1;;;1957:27:11;;-1:-1:-1;;;;;663:32:21;;;1957:27:11::1;::::0;::::1;645:51:21::0;1957:17:11;::::1;::::0;::::1;::::0;618:18:21;;1957:27:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1842:149:::0;;:::o;2612:245::-;1094:13:4;:11;:13::i;:::-;2788:62:11::1;::::0;-1:-1:-1;;;2788:62:11;;-1:-1:-1;;;;;2788:22:11;::::1;::::0;::::1;::::0;2818:9:::1;::::0;2788:62:::1;::::0;2829:14;;2845:4;;2788:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2612:245:::0;;;:::o;2196:150::-;1094:13:4;:11;:13::i;:::-;2308:31:11::1;::::0;-1:-1:-1;;;2308:31:11;;-1:-1:-1;;;;;663:32:21;;;2308:31:11::1;::::0;::::1;645:51:21::0;2308:15:11;::::1;::::0;::::1;::::0;618:18:21;;2308:31:11::1;499:203:21::0;2074:198:4;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:4;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:4;;4326:2:21;2154:73:4::1;::::0;::::1;4308:21:21::0;4365:2;4345:18;;;4338:30;4404:34;4384:18;;;4377:62;-1:-1:-1;;;4455:18:21;;;4448:36;4501:19;;2154:73:4::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1248:420:11:-;1336:7;1504:12;1518:23;1553:5;-1:-1:-1;;;;;1545:25:11;:40;;;;-1:-1:-1;;;4732:33:21;;4790:1;4781:11;;4531:267;1359:130:4;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:14;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;5005:2:21;1414:68:4;;;4987:21:21;;;5024:18;;;5017:30;5083:34;5063:18;;;5056:62;5135:18;;1414:68:4;4803:356:21;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:161:21:-;-1:-1:-1;;;;;119:31:21;;109:42;;99:70;;165:1;162;155:12;180:314;276:6;329:2;317:9;308:7;304:23;300:32;297:52;;;345:1;342;335:12;297:52;384:9;371:23;403:61;458:5;403:61;:::i;:::-;483:5;180:314;-1:-1:-1;;;180:314:21:o;707:485::-;812:6;820;873:2;861:9;852:7;848:23;844:32;841:52;;;889:1;886;879:12;841:52;928:9;915:23;947:61;1002:5;947:61;:::i;:::-;1027:5;-1:-1:-1;1084:2:21;1069:18;;1056:32;1097:63;1056:32;1097:63;:::i;:::-;1179:7;1169:17;;;707:485;;;;;:::o;1197:127::-;1258:10;1253:3;1249:20;1246:1;1239:31;1289:4;1286:1;1279:15;1313:4;1310:1;1303:15;1329:1294;1452:6;1460;1468;1521:2;1509:9;1500:7;1496:23;1492:32;1489:52;;;1537:1;1534;1527:12;1489:52;1576:9;1563:23;1595:61;1650:5;1595:61;:::i;:::-;1675:5;-1:-1:-1;1732:2:21;1717:18;;1704:32;1745:63;1704:32;1745:63;:::i;:::-;1827:7;-1:-1:-1;1885:2:21;1870:18;;1857:32;1908:18;1938:14;;;1935:34;;;1965:1;1962;1955:12;1935:34;2003:6;1992:9;1988:22;1978:32;;2048:7;2041:4;2037:2;2033:13;2029:27;2019:55;;2070:1;2067;2060:12;2019:55;2106:2;2093:16;2128:2;2124;2121:10;2118:36;;;2134:18;;:::i;:::-;2209:2;2203:9;2177:2;2263:13;;-1:-1:-1;;2259:22:21;;;2283:2;2255:31;2251:40;2239:53;;;2307:18;;;2327:22;;;2304:46;2301:72;;;2353:18;;:::i;:::-;2393:10;2389:2;2382:22;2428:2;2420:6;2413:18;2468:7;2463:2;2458;2454;2450:11;2446:20;2443:33;2440:53;;;2489:1;2486;2479:12;2440:53;2545:2;2540;2536;2532:11;2527:2;2519:6;2515:15;2502:46;2590:1;2585:2;2580;2572:6;2568:15;2564:24;2557:35;2611:6;2601:16;;;;;;;1329:1294;;;;;:::o;3182:289::-;3260:6;3313:2;3301:9;3292:7;3288:23;3284:32;3281:52;;;3329:1;3326;3319:12;3281:52;3361:9;3355:16;3380:61;3435:5;3380:61;:::i;3476:643::-;3680:1;3676;3671:3;3667:11;3663:19;3655:6;3651:32;3640:9;3633:51;3614:4;3703:2;3741;3736;3725:9;3721:18;3714:30;3773:6;3767:13;3816:6;3811:2;3800:9;3796:18;3789:34;3841:1;3851:140;3865:6;3862:1;3859:13;3851:140;;;3960:14;;;3956:23;;3950:30;3926:17;;;3945:2;3922:26;3915:66;3880:10;;3851:140;;;3855:3;4040:1;4035:2;4026:6;4015:9;4011:22;4007:31;4000:42;4110:2;4103;4099:7;4094:2;4086:6;4082:15;4078:29;4067:9;4063:45;4059:54;4051:62;;;;3476:643;;;;;:::o"},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorProxyAdmin.sol\":\"MonadSwapAggregatorProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        ITransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\n\\ncontract MonadSwapAggregatorProxyAdmin is ProxyAdmin {\\n    constructor() ProxyAdmin() {}\\n}\",\"keccak256\":\"0x3890a080e9e4ccfbf70e63d9220f939fd7a339fa13684cb9c972069a38d5d3d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":680,"contract":"contracts/MonadSwapAggregatorProxyAdmin.sol:MonadSwapAggregatorProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"contracts/MonadSwapAggregatorV1.sol":{"IBeanRouter":{"abi":[{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAmountsOut(uint256,address[])":"d06ca61f","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorV1.sol\":\"IBeanRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregatorV1 is Initializable, OwnableUpgradeable {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n\\n    // State variables\\n    IBeanRouter public beanRouter;\\n    address public wmon;\\n    address private constant NATIVE = address(0);\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _beanRouter, address _wmon) public initializer {\\n        __Ownable_init();\\n        beanRouter = IBeanRouter(_beanRouter);\\n        wmon = _wmon;\\n    }\\n\\n    // Function untuk mendapatkan estimasi output\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path;\\n\\n        // Handle native MON\\n        if (fromToken == NATIVE) fromToken = wmon;\\n        if (toToken == NATIVE) toToken = wmon;\\n\\n        if (fromToken == wmon || toToken == wmon) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            // Jika bukan WMON, gunakan WMON sebagai perantara\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n        }\\n\\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    // Main swap function\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = wmon;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = wmon;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path;\\n        if (fromToken == wmon || toToken == wmon) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n        }\\n\\n        // Execute swap\\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Function untuk menerima MON\\n    receive() external payable {}\\n\\n    // Fungsi upgrade (hanya owner)\\n    function updateBeanRouter(address _newRouter) external onlyOwner {\\n        require(_newRouter != address(0), \\\"Invalid router address\\\");\\n        beanRouter = IBeanRouter(_newRouter);\\n    }\\n\\n    function updateWMON(address _newWMON) external onlyOwner {\\n        require(_newWMON != address(0), \\\"Invalid WMON address\\\");\\n        wmon = _newWMON;\\n    }\\n}\",\"keccak256\":\"0x53feb8f96f0cc3f72c53b1ceeb8cf84b144d41b0116f005a67d6cb8d18711a67\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorV1.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregatorV1 is Initializable, OwnableUpgradeable {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n\\n    // State variables\\n    IBeanRouter public beanRouter;\\n    address public wmon;\\n    address private constant NATIVE = address(0);\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _beanRouter, address _wmon) public initializer {\\n        __Ownable_init();\\n        beanRouter = IBeanRouter(_beanRouter);\\n        wmon = _wmon;\\n    }\\n\\n    // Function untuk mendapatkan estimasi output\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path;\\n\\n        // Handle native MON\\n        if (fromToken == NATIVE) fromToken = wmon;\\n        if (toToken == NATIVE) toToken = wmon;\\n\\n        if (fromToken == wmon || toToken == wmon) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            // Jika bukan WMON, gunakan WMON sebagai perantara\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n        }\\n\\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    // Main swap function\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = wmon;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = wmon;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path;\\n        if (fromToken == wmon || toToken == wmon) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n        }\\n\\n        // Execute swap\\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Function untuk menerima MON\\n    receive() external payable {}\\n\\n    // Fungsi upgrade (hanya owner)\\n    function updateBeanRouter(address _newRouter) external onlyOwner {\\n        require(_newRouter != address(0), \\\"Invalid router address\\\");\\n        beanRouter = IBeanRouter(_newRouter);\\n    }\\n\\n    function updateWMON(address _newWMON) external onlyOwner {\\n        require(_newWMON != address(0), \\\"Invalid WMON address\\\");\\n        wmon = _newWMON;\\n    }\\n}\",\"keccak256\":\"0x53feb8f96f0cc3f72c53b1ceeb8cf84b144d41b0116f005a67d6cb8d18711a67\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"MonadSwapAggregatorV1":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"TokenSwapped","type":"event"},{"inputs":[],"name":"beanRouter","outputs":[{"internalType":"contract IBeanRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_beanRouter","type":"address"},{"internalType":"address","name":"_wmon","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"updateBeanRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newWMON","type":"address"}],"name":"updateWMON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wmon","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_2931":{"entryPoint":null,"id":2931,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_281":{"entryPoint":30,"id":281,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:608:21","nodeType":"YulBlock","src":"0:608:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"188:229:21","nodeType":"YulBlock","src":"188:229:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"205:9:21","nodeType":"YulIdentifier","src":"205:9:21"},{"kind":"number","nativeSrc":"216:2:21","nodeType":"YulLiteral","src":"216:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"198:6:21","nodeType":"YulIdentifier","src":"198:6:21"},"nativeSrc":"198:21:21","nodeType":"YulFunctionCall","src":"198:21:21"},"nativeSrc":"198:21:21","nodeType":"YulExpressionStatement","src":"198:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"239:9:21","nodeType":"YulIdentifier","src":"239:9:21"},{"kind":"number","nativeSrc":"250:2:21","nodeType":"YulLiteral","src":"250:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"235:3:21","nodeType":"YulIdentifier","src":"235:3:21"},"nativeSrc":"235:18:21","nodeType":"YulFunctionCall","src":"235:18:21"},{"kind":"number","nativeSrc":"255:2:21","nodeType":"YulLiteral","src":"255:2:21","type":"","value":"39"}],"functionName":{"name":"mstore","nativeSrc":"228:6:21","nodeType":"YulIdentifier","src":"228:6:21"},"nativeSrc":"228:30:21","nodeType":"YulFunctionCall","src":"228:30:21"},"nativeSrc":"228:30:21","nodeType":"YulExpressionStatement","src":"228:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"278:9:21","nodeType":"YulIdentifier","src":"278:9:21"},{"kind":"number","nativeSrc":"289:2:21","nodeType":"YulLiteral","src":"289:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"274:3:21","nodeType":"YulIdentifier","src":"274:3:21"},"nativeSrc":"274:18:21","nodeType":"YulFunctionCall","src":"274:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nativeSrc":"294:34:21","nodeType":"YulLiteral","src":"294:34:21","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nativeSrc":"267:6:21","nodeType":"YulIdentifier","src":"267:6:21"},"nativeSrc":"267:62:21","nodeType":"YulFunctionCall","src":"267:62:21"},"nativeSrc":"267:62:21","nodeType":"YulExpressionStatement","src":"267:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"349:9:21","nodeType":"YulIdentifier","src":"349:9:21"},{"kind":"number","nativeSrc":"360:2:21","nodeType":"YulLiteral","src":"360:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"345:3:21","nodeType":"YulIdentifier","src":"345:3:21"},"nativeSrc":"345:18:21","nodeType":"YulFunctionCall","src":"345:18:21"},{"hexValue":"616c697a696e67","kind":"string","nativeSrc":"365:9:21","nodeType":"YulLiteral","src":"365:9:21","type":"","value":"alizing"}],"functionName":{"name":"mstore","nativeSrc":"338:6:21","nodeType":"YulIdentifier","src":"338:6:21"},"nativeSrc":"338:37:21","nodeType":"YulFunctionCall","src":"338:37:21"},"nativeSrc":"338:37:21","nodeType":"YulExpressionStatement","src":"338:37:21"},{"nativeSrc":"384:27:21","nodeType":"YulAssignment","src":"384:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"396:9:21","nodeType":"YulIdentifier","src":"396:9:21"},{"kind":"number","nativeSrc":"407:3:21","nodeType":"YulLiteral","src":"407:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"392:3:21","nodeType":"YulIdentifier","src":"392:3:21"},"nativeSrc":"392:19:21","nodeType":"YulFunctionCall","src":"392:19:21"},"variableNames":[{"name":"tail","nativeSrc":"384:4:21","nodeType":"YulIdentifier","src":"384:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:403:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"165:9:21","nodeType":"YulTypedName","src":"165:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"179:4:21","nodeType":"YulTypedName","src":"179:4:21","type":""}],"src":"14:403:21"},{"body":{"nativeSrc":"519:87:21","nodeType":"YulBlock","src":"519:87:21","statements":[{"nativeSrc":"529:26:21","nodeType":"YulAssignment","src":"529:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"541:9:21","nodeType":"YulIdentifier","src":"541:9:21"},{"kind":"number","nativeSrc":"552:2:21","nodeType":"YulLiteral","src":"552:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"537:3:21","nodeType":"YulIdentifier","src":"537:3:21"},"nativeSrc":"537:18:21","nodeType":"YulFunctionCall","src":"537:18:21"},"variableNames":[{"name":"tail","nativeSrc":"529:4:21","nodeType":"YulIdentifier","src":"529:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"571:9:21","nodeType":"YulIdentifier","src":"571:9:21"},{"arguments":[{"name":"value0","nativeSrc":"586:6:21","nodeType":"YulIdentifier","src":"586:6:21"},{"kind":"number","nativeSrc":"594:4:21","nodeType":"YulLiteral","src":"594:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"582:3:21","nodeType":"YulIdentifier","src":"582:3:21"},"nativeSrc":"582:17:21","nodeType":"YulFunctionCall","src":"582:17:21"}],"functionName":{"name":"mstore","nativeSrc":"564:6:21","nodeType":"YulIdentifier","src":"564:6:21"},"nativeSrc":"564:36:21","nodeType":"YulFunctionCall","src":"564:36:21"},"nativeSrc":"564:36:21","nodeType":"YulExpressionStatement","src":"564:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"422:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"488:9:21","nodeType":"YulTypedName","src":"488:9:21","type":""},{"name":"value0","nativeSrc":"499:6:21","nodeType":"YulTypedName","src":"499:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"510:4:21","nodeType":"YulTypedName","src":"510:4:21","type":""}],"src":"422:184:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6114e2806100ec6000396000f3fe6080604052600436106100955760003560e01c80638da5cb5b116100595780638da5cb5b146101635780639b69c7c814610181578063ac29e1a1146101a1578063f2fde38b146101c1578063fe029156146101e157600080fd5b8063485cc955146100a15780634aa06652146100c3578063715018a6146100f65780637d86b8a51461010b578063858845d91461014357600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461119a565b6101f4565b005b3480156100cf57600080fd5b506100e36100de3660046111cd565b61033c565b6040519081526020015b60405180910390f35b34801561010257600080fd5b506100c161059c565b34801561011757600080fd5b5060665461012b906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b34801561014f57600080fd5b506100c161015e366004611209565b6105b0565b34801561016f57600080fd5b506033546001600160a01b031661012b565b34801561018d57600080fd5b506100c161019c366004611209565b610629565b3480156101ad57600080fd5b5060655461012b906001600160a01b031681565b3480156101cd57600080fd5b506100c16101dc366004611209565b6106a0565b6100e36101ef36600461122b565b610719565b600054610100900460ff16158080156102145750600054600160ff909116105b8061022e5750303b15801561022e575060005460ff166001145b6102965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156102b9576000805461ff0019166101001790555b6102c161083f565b606580546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558015610337576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b600060606001600160a01b03851661035d576066546001600160a01b031694505b6001600160a01b03841661037a576066546001600160a01b031693505b6066546001600160a01b03868116911614806103a357506066546001600160a01b038581169116145b1561043557604080516002808252606082018352909160208301908036833701905050905084816000815181106103dc576103dc611283565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061041057610410611283565b60200260200101906001600160a01b031690816001600160a01b0316815250506104f0565b604080516003808252608082019092529060208201606080368337019050509050848160008151811061046a5761046a611283565b6001600160a01b03928316602091820292909201015260665482519116908290600190811061049b5761049b611283565b60200260200101906001600160a01b031690816001600160a01b03168152505083816002815181106104cf576104cf611283565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60655460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f9061052390879086906004016112de565b600060405180830381865afa158015610540573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056891908101906112f7565b9050806001825161057991906113cb565b8151811061058957610589611283565b6020026020010151925050509392505050565b6105a461086e565b6105ae60006108c8565b565b6105b861086e565b6001600160a01b0381166106075760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420726f75746572206164647265737360501b604482015260640161028d565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b61063161086e565b6001600160a01b03811661067e5760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420574d4f4e206164647265737360601b604482015260640161028d565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6106a861086e565b6001600160a01b03811661070d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028d565b610716816108c8565b50565b600080831161075f5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161028d565b836001600160a01b0316856001600160a01b0316036107ae5760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b604482015260640161028d565b6001600160a01b038516610812578234146108005760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081353d388185b5bdd5b9d60721b604482015260640161028d565b61080b84848461091a565b9050610837565b6001600160a01b03841661082b5761080b858484610ac3565b61080b85858585610d7d565b949350505050565b600054610100900460ff166108665760405162461bcd60e51b815260040161028d906113e4565b6105ae61114e565b6033546001600160a01b031633146105ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051600280825260608201835260009283929190602083019080368337505060665482519293506001600160a01b03169183915060009061095f5761095f611283565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061099357610993611283565b6001600160a01b03928316602091820292909201015260655460009116637ff36ab5868685336109c5426104b061142f565b6040518663ffffffff1660e01b81526004016109e49493929190611442565b60006040518083038185885af1158015610a02573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610a2b91908101906112f7565b905060008160018351610a3e91906113cb565b81518110610a4e57610a4e611283565b60200260200101519050866001600160a01b031660006001600160a01b0316336001600160a01b03167fd36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d248985604051610ab1929190918252602082015260400190565b60405180910390a49695505050505050565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611477565b610b805760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b604482015260640161028d565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529085169063095ea7b3906044016020604051808303816000875af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf79190611477565b506040805160028082526060820183526000926020830190803683370190505090508481600081518110610c2d57610c2d611283565b6001600160a01b039283166020918202929092010152606654825191169082906001908110610c5e57610c5e611283565b6001600160a01b039283166020918202929092010152606554600091166318cbafe586868533610c90426104b061142f565b6040518663ffffffff1660e01b8152600401610cb0959493929190611499565b6000604051808303816000875af1158015610ccf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf791908101906112f7565b905060008160018351610d0a91906113cb565b81518110610d1a57610d1a611283565b6020026020010151905060006001600160a01b0316876001600160a01b0316336001600160a01b03167fd36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d248985604051610ab1929190918252602082015260400190565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038616906323b872dd906064016020604051808303816000875af1158015610dd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df79190611477565b610e3a5760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b604482015260640161028d565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af1158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb19190611477565b506066546060906001600160a01b0387811691161480610ede57506066546001600160a01b038681169116145b15610f705760408051600280825260608201835290916020830190803683370190505090508581600081518110610f1757610f17611283565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610f4b57610f4b611283565b60200260200101906001600160a01b031690816001600160a01b03168152505061102b565b6040805160038082526080820190925290602082016060803683370190505090508581600081518110610fa557610fa5611283565b6001600160a01b039283166020918202929092010152606654825191169082906001908110610fd657610fd6611283565b60200260200101906001600160a01b031690816001600160a01b031681525050848160028151811061100a5761100a611283565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6065546000906001600160a01b03166338ed17398686853361104f426104b061142f565b6040518663ffffffff1660e01b815260040161106f959493929190611499565b6000604051808303816000875af115801561108e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b691908101906112f7565b9050600081600183516110c991906113cb565b815181106110d9576110d9611283565b60200260200101519050866001600160a01b0316886001600160a01b0316336001600160a01b03167fd36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d24898560405161113b929190918252602082015260400190565b60405180910390a4979650505050505050565b600054610100900460ff166111755760405162461bcd60e51b815260040161028d906113e4565b6105ae336108c8565b80356001600160a01b038116811461119557600080fd5b919050565b600080604083850312156111ad57600080fd5b6111b68361117e565b91506111c46020840161117e565b90509250929050565b6000806000606084860312156111e257600080fd5b6111eb8461117e565b92506111f96020850161117e565b9150604084013590509250925092565b60006020828403121561121b57600080fd5b6112248261117e565b9392505050565b6000806000806080858703121561124157600080fd5b61124a8561117e565b93506112586020860161117e565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008151808452602080850194506020840160005b838110156112d35781516001600160a01b0316875295820195908201906001016112ae565b509495945050505050565b8281526040602082015260006108376040830184611299565b6000602080838503121561130a57600080fd5b825167ffffffffffffffff8082111561132257600080fd5b818501915085601f83011261133657600080fd5b8151818111156113485761134861126d565b8060051b604051601f19603f8301168101818110858211171561136d5761136d61126d565b60405291825284820192508381018501918883111561138b57600080fd5b938501935b828510156113a957845184529385019392850192611390565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156113de576113de6113b5565b92915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156113de576113de6113b5565b84815260806020820152600061145b6080830186611299565b6001600160a01b03949094166040830152506060015292915050565b60006020828403121561148957600080fd5b8151801515811461122457600080fd5b85815284602082015260a0604082015260006114b860a0830186611299565b6001600160a01b039490941660608301525060800152939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19 PUSH2 0x1E JUMP JUMPDEST PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH2 0x14E2 DUP1 PUSH2 0xEC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x9B69C7C8 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xAC29E1A1 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xFE029156 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x7D86B8A5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x858845D9 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x66 SLOAD PUSH2 0x12B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x12B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x214 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x22E JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2C1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x35D JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x37A JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x435 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3DC JUMPI PUSH2 0x3DC PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x49B JUMPI PUSH2 0x49B PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x523 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x568 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x589 JUMPI PUSH2 0x589 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x5AE PUSH1 0x0 PUSH2 0x8C8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420726F757465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x631 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420574D4F4E2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28D JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x8C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x812 JUMPI DUP3 CALLVALUE EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081353D388185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH2 0x80B DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST SWAP1 POP PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x82B JUMPI PUSH2 0x80B DUP6 DUP5 DUP5 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x80B DUP6 DUP6 DUP6 DUP6 PUSH2 0xD7D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x5AE PUSH2 0x114E JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x66 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x95F JUMPI PUSH2 0x95F PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x993 JUMPI PUSH2 0x993 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x7FF36AB5 DUP7 DUP7 DUP6 CALLER PUSH2 0x9C5 TIMESTAMP PUSH2 0x4B0 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA2B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA4E JUMPI PUSH2 0xA4E PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAB1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x18CBAFE5 DUP7 DUP7 DUP6 CALLER PUSH2 0xC90 TIMESTAMP PUSH2 0x4B0 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCF7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xD0A SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD1A JUMPI PUSH2 0xD1A PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAB1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST POP PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xEDE JUMPI POP PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF17 JUMPI PUSH2 0xF17 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF4B JUMPI PUSH2 0xF4B PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFA5 JUMPI PUSH2 0xFA5 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xFD6 JUMPI PUSH2 0xFD6 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x100A JUMPI PUSH2 0x100A PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP7 DUP7 DUP6 CALLER PUSH2 0x104F TIMESTAMP PUSH2 0x4B0 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x108E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10B6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x113B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x5AE CALLER PUSH2 0x8C8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B6 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x11C4 PUSH1 0x20 DUP5 ADD PUSH2 0x117E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EB DUP5 PUSH2 0x117E JUMP JUMPDEST SWAP3 POP PUSH2 0x11F9 PUSH1 0x20 DUP6 ADD PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1224 DUP3 PUSH2 0x117E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x124A DUP6 PUSH2 0x117E JUMP JUMPDEST SWAP4 POP PUSH2 0x1258 PUSH1 0x20 DUP7 ADD PUSH2 0x117E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12D3 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12AE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x837 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1348 PUSH2 0x126D JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x136D JUMPI PUSH2 0x136D PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x13A9 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x1390 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x13DE JUMPI PUSH2 0x13DE PUSH2 0x13B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13DE JUMPI PUSH2 0x13DE PUSH2 0x13B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x145B PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x14B8 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1367:5702:19:-:0;;;1824:53;;;;;;;;;-1:-1:-1;1848:22:19;:20;:22::i;:::-;1367:5702;;5939:280:1;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:1;;216:2:21;5998:66:1;;;198:21:21;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:21;;;338:37;392:19;;5998:66:1;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:1;6140:15;6125:30;;;;;;6174:28;;564:36:21;;;6174:28:1;;552:2:21;537:18;6174:28:1;;;;;;;6074:139;5939:280::o;422:184:21:-;1367:5702:19;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_3447":{"entryPoint":null,"id":3447,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_26":{"entryPoint":2111,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_37":{"entryPoint":4430,"id":37,"parameterSlots":0,"returnSlots":0},"@_checkOwner_68":{"entryPoint":2158,"id":68,"parameterSlots":0,"returnSlots":0},"@_msgSender_657":{"entryPoint":null,"id":657,"parameterSlots":0,"returnSlots":1},"@_swapMonForTokens_3202":{"entryPoint":2330,"id":3202,"parameterSlots":3,"returnSlots":1},"@_swapTokensForMon_3302":{"entryPoint":2755,"id":3302,"parameterSlots":3,"returnSlots":1},"@_swapTokens_3443":{"entryPoint":3453,"id":3443,"parameterSlots":4,"returnSlots":1},"@_transferOwnership_125":{"entryPoint":2248,"id":125,"parameterSlots":1,"returnSlots":0},"@beanRouter_2915":{"entryPoint":null,"id":2915,"parameterSlots":0,"returnSlots":0},"@getAmountOut_3062":{"entryPoint":828,"id":3062,"parameterSlots":3,"returnSlots":1},"@initialize_2954":{"entryPoint":500,"id":2954,"parameterSlots":2,"returnSlots":0},"@isContract_318":{"entryPoint":null,"id":318,"parameterSlots":1,"returnSlots":1},"@owner_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_82":{"entryPoint":1436,"id":82,"parameterSlots":0,"returnSlots":0},"@swap_3128":{"entryPoint":1817,"id":3128,"parameterSlots":4,"returnSlots":1},"@transferOwnership_105":{"entryPoint":1696,"id":105,"parameterSlots":1,"returnSlots":0},"@updateBeanRouter_3471":{"entryPoint":1456,"id":3471,"parameterSlots":1,"returnSlots":0},"@updateWMON_3493":{"entryPoint":1577,"id":3493,"parameterSlots":1,"returnSlots":0},"@wmon_2917":{"entryPoint":null,"id":2917,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":4478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4506,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4557,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":4651,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":4855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":4761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IBeanRouter_$2896__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4830,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":5186,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":5273,"id":null,"parameterSlots":6,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5167,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5067,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5045,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4739,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4717,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10731:21","nodeType":"YulBlock","src":"0:10731:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"63:124:21","nodeType":"YulBlock","src":"63:124:21","statements":[{"nativeSrc":"73:29:21","nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:21","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:21","nodeType":"YulIdentifier","src":"82:12:21"},"nativeSrc":"82:20:21","nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nativeSrc":"73:5:21","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nativeSrc":"165:16:21","nodeType":"YulBlock","src":"165:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:21","nodeType":"YulLiteral","src":"174:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:21","nodeType":"YulLiteral","src":"177:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:21","nodeType":"YulIdentifier","src":"167:6:21"},"nativeSrc":"167:12:21","nodeType":"YulFunctionCall","src":"167:12:21"},"nativeSrc":"167:12:21","nodeType":"YulExpressionStatement","src":"167:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:21","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nativeSrc":"135:5:21","nodeType":"YulIdentifier","src":"135:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:21","nodeType":"YulLiteral","src":"150:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:21","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:21","nodeType":"YulIdentifier","src":"146:3:21"},"nativeSrc":"146:11:21","nodeType":"YulFunctionCall","src":"146:11:21"},{"kind":"number","nativeSrc":"159:1:21","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:21","nodeType":"YulIdentifier","src":"142:3:21"},"nativeSrc":"142:19:21","nodeType":"YulFunctionCall","src":"142:19:21"}],"functionName":{"name":"and","nativeSrc":"131:3:21","nodeType":"YulIdentifier","src":"131:3:21"},"nativeSrc":"131:31:21","nodeType":"YulFunctionCall","src":"131:31:21"}],"functionName":{"name":"eq","nativeSrc":"121:2:21","nodeType":"YulIdentifier","src":"121:2:21"},"nativeSrc":"121:42:21","nodeType":"YulFunctionCall","src":"121:42:21"}],"functionName":{"name":"iszero","nativeSrc":"114:6:21","nodeType":"YulIdentifier","src":"114:6:21"},"nativeSrc":"114:50:21","nodeType":"YulFunctionCall","src":"114:50:21"},"nativeSrc":"111:70:21","nodeType":"YulIf","src":"111:70:21"}]},"name":"abi_decode_address","nativeSrc":"14:173:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:21","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:21","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:173:21"},{"body":{"nativeSrc":"279:173:21","nodeType":"YulBlock","src":"279:173:21","statements":[{"body":{"nativeSrc":"325:16:21","nodeType":"YulBlock","src":"325:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"334:1:21","nodeType":"YulLiteral","src":"334:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"337:1:21","nodeType":"YulLiteral","src":"337:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"327:6:21","nodeType":"YulIdentifier","src":"327:6:21"},"nativeSrc":"327:12:21","nodeType":"YulFunctionCall","src":"327:12:21"},"nativeSrc":"327:12:21","nodeType":"YulExpressionStatement","src":"327:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"300:7:21","nodeType":"YulIdentifier","src":"300:7:21"},{"name":"headStart","nativeSrc":"309:9:21","nodeType":"YulIdentifier","src":"309:9:21"}],"functionName":{"name":"sub","nativeSrc":"296:3:21","nodeType":"YulIdentifier","src":"296:3:21"},"nativeSrc":"296:23:21","nodeType":"YulFunctionCall","src":"296:23:21"},{"kind":"number","nativeSrc":"321:2:21","nodeType":"YulLiteral","src":"321:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"292:3:21","nodeType":"YulIdentifier","src":"292:3:21"},"nativeSrc":"292:32:21","nodeType":"YulFunctionCall","src":"292:32:21"},"nativeSrc":"289:52:21","nodeType":"YulIf","src":"289:52:21"},{"nativeSrc":"350:39:21","nodeType":"YulAssignment","src":"350:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"379:9:21","nodeType":"YulIdentifier","src":"379:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"360:18:21","nodeType":"YulIdentifier","src":"360:18:21"},"nativeSrc":"360:29:21","nodeType":"YulFunctionCall","src":"360:29:21"},"variableNames":[{"name":"value0","nativeSrc":"350:6:21","nodeType":"YulIdentifier","src":"350:6:21"}]},{"nativeSrc":"398:48:21","nodeType":"YulAssignment","src":"398:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"431:9:21","nodeType":"YulIdentifier","src":"431:9:21"},{"kind":"number","nativeSrc":"442:2:21","nodeType":"YulLiteral","src":"442:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"427:3:21","nodeType":"YulIdentifier","src":"427:3:21"},"nativeSrc":"427:18:21","nodeType":"YulFunctionCall","src":"427:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"408:18:21","nodeType":"YulIdentifier","src":"408:18:21"},"nativeSrc":"408:38:21","nodeType":"YulFunctionCall","src":"408:38:21"},"variableNames":[{"name":"value1","nativeSrc":"398:6:21","nodeType":"YulIdentifier","src":"398:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"192:260:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"237:9:21","nodeType":"YulTypedName","src":"237:9:21","type":""},{"name":"dataEnd","nativeSrc":"248:7:21","nodeType":"YulTypedName","src":"248:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"260:6:21","nodeType":"YulTypedName","src":"260:6:21","type":""},{"name":"value1","nativeSrc":"268:6:21","nodeType":"YulTypedName","src":"268:6:21","type":""}],"src":"192:260:21"},{"body":{"nativeSrc":"561:224:21","nodeType":"YulBlock","src":"561:224:21","statements":[{"body":{"nativeSrc":"607:16:21","nodeType":"YulBlock","src":"607:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"616:1:21","nodeType":"YulLiteral","src":"616:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"619:1:21","nodeType":"YulLiteral","src":"619:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"609:6:21","nodeType":"YulIdentifier","src":"609:6:21"},"nativeSrc":"609:12:21","nodeType":"YulFunctionCall","src":"609:12:21"},"nativeSrc":"609:12:21","nodeType":"YulExpressionStatement","src":"609:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"582:7:21","nodeType":"YulIdentifier","src":"582:7:21"},{"name":"headStart","nativeSrc":"591:9:21","nodeType":"YulIdentifier","src":"591:9:21"}],"functionName":{"name":"sub","nativeSrc":"578:3:21","nodeType":"YulIdentifier","src":"578:3:21"},"nativeSrc":"578:23:21","nodeType":"YulFunctionCall","src":"578:23:21"},{"kind":"number","nativeSrc":"603:2:21","nodeType":"YulLiteral","src":"603:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"574:3:21","nodeType":"YulIdentifier","src":"574:3:21"},"nativeSrc":"574:32:21","nodeType":"YulFunctionCall","src":"574:32:21"},"nativeSrc":"571:52:21","nodeType":"YulIf","src":"571:52:21"},{"nativeSrc":"632:39:21","nodeType":"YulAssignment","src":"632:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"661:9:21","nodeType":"YulIdentifier","src":"661:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"642:18:21","nodeType":"YulIdentifier","src":"642:18:21"},"nativeSrc":"642:29:21","nodeType":"YulFunctionCall","src":"642:29:21"},"variableNames":[{"name":"value0","nativeSrc":"632:6:21","nodeType":"YulIdentifier","src":"632:6:21"}]},{"nativeSrc":"680:48:21","nodeType":"YulAssignment","src":"680:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"713:9:21","nodeType":"YulIdentifier","src":"713:9:21"},{"kind":"number","nativeSrc":"724:2:21","nodeType":"YulLiteral","src":"724:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"709:3:21","nodeType":"YulIdentifier","src":"709:3:21"},"nativeSrc":"709:18:21","nodeType":"YulFunctionCall","src":"709:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"690:18:21","nodeType":"YulIdentifier","src":"690:18:21"},"nativeSrc":"690:38:21","nodeType":"YulFunctionCall","src":"690:38:21"},"variableNames":[{"name":"value1","nativeSrc":"680:6:21","nodeType":"YulIdentifier","src":"680:6:21"}]},{"nativeSrc":"737:42:21","nodeType":"YulAssignment","src":"737:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"764:9:21","nodeType":"YulIdentifier","src":"764:9:21"},{"kind":"number","nativeSrc":"775:2:21","nodeType":"YulLiteral","src":"775:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"760:3:21","nodeType":"YulIdentifier","src":"760:3:21"},"nativeSrc":"760:18:21","nodeType":"YulFunctionCall","src":"760:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"747:12:21","nodeType":"YulIdentifier","src":"747:12:21"},"nativeSrc":"747:32:21","nodeType":"YulFunctionCall","src":"747:32:21"},"variableNames":[{"name":"value2","nativeSrc":"737:6:21","nodeType":"YulIdentifier","src":"737:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"457:328:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"511:9:21","nodeType":"YulTypedName","src":"511:9:21","type":""},{"name":"dataEnd","nativeSrc":"522:7:21","nodeType":"YulTypedName","src":"522:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"534:6:21","nodeType":"YulTypedName","src":"534:6:21","type":""},{"name":"value1","nativeSrc":"542:6:21","nodeType":"YulTypedName","src":"542:6:21","type":""},{"name":"value2","nativeSrc":"550:6:21","nodeType":"YulTypedName","src":"550:6:21","type":""}],"src":"457:328:21"},{"body":{"nativeSrc":"891:76:21","nodeType":"YulBlock","src":"891:76:21","statements":[{"nativeSrc":"901:26:21","nodeType":"YulAssignment","src":"901:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"913:9:21","nodeType":"YulIdentifier","src":"913:9:21"},{"kind":"number","nativeSrc":"924:2:21","nodeType":"YulLiteral","src":"924:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"909:3:21","nodeType":"YulIdentifier","src":"909:3:21"},"nativeSrc":"909:18:21","nodeType":"YulFunctionCall","src":"909:18:21"},"variableNames":[{"name":"tail","nativeSrc":"901:4:21","nodeType":"YulIdentifier","src":"901:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"943:9:21","nodeType":"YulIdentifier","src":"943:9:21"},{"name":"value0","nativeSrc":"954:6:21","nodeType":"YulIdentifier","src":"954:6:21"}],"functionName":{"name":"mstore","nativeSrc":"936:6:21","nodeType":"YulIdentifier","src":"936:6:21"},"nativeSrc":"936:25:21","nodeType":"YulFunctionCall","src":"936:25:21"},"nativeSrc":"936:25:21","nodeType":"YulExpressionStatement","src":"936:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"790:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"860:9:21","nodeType":"YulTypedName","src":"860:9:21","type":""},{"name":"value0","nativeSrc":"871:6:21","nodeType":"YulTypedName","src":"871:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"882:4:21","nodeType":"YulTypedName","src":"882:4:21","type":""}],"src":"790:177:21"},{"body":{"nativeSrc":"1073:102:21","nodeType":"YulBlock","src":"1073:102:21","statements":[{"nativeSrc":"1083:26:21","nodeType":"YulAssignment","src":"1083:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1095:9:21","nodeType":"YulIdentifier","src":"1095:9:21"},{"kind":"number","nativeSrc":"1106:2:21","nodeType":"YulLiteral","src":"1106:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1091:3:21","nodeType":"YulIdentifier","src":"1091:3:21"},"nativeSrc":"1091:18:21","nodeType":"YulFunctionCall","src":"1091:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1083:4:21","nodeType":"YulIdentifier","src":"1083:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1125:9:21","nodeType":"YulIdentifier","src":"1125:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1140:6:21","nodeType":"YulIdentifier","src":"1140:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1156:3:21","nodeType":"YulLiteral","src":"1156:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1161:1:21","nodeType":"YulLiteral","src":"1161:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1152:3:21","nodeType":"YulIdentifier","src":"1152:3:21"},"nativeSrc":"1152:11:21","nodeType":"YulFunctionCall","src":"1152:11:21"},{"kind":"number","nativeSrc":"1165:1:21","nodeType":"YulLiteral","src":"1165:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1148:3:21","nodeType":"YulIdentifier","src":"1148:3:21"},"nativeSrc":"1148:19:21","nodeType":"YulFunctionCall","src":"1148:19:21"}],"functionName":{"name":"and","nativeSrc":"1136:3:21","nodeType":"YulIdentifier","src":"1136:3:21"},"nativeSrc":"1136:32:21","nodeType":"YulFunctionCall","src":"1136:32:21"}],"functionName":{"name":"mstore","nativeSrc":"1118:6:21","nodeType":"YulIdentifier","src":"1118:6:21"},"nativeSrc":"1118:51:21","nodeType":"YulFunctionCall","src":"1118:51:21"},"nativeSrc":"1118:51:21","nodeType":"YulExpressionStatement","src":"1118:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"972:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1042:9:21","nodeType":"YulTypedName","src":"1042:9:21","type":""},{"name":"value0","nativeSrc":"1053:6:21","nodeType":"YulTypedName","src":"1053:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1064:4:21","nodeType":"YulTypedName","src":"1064:4:21","type":""}],"src":"972:203:21"},{"body":{"nativeSrc":"1250:116:21","nodeType":"YulBlock","src":"1250:116:21","statements":[{"body":{"nativeSrc":"1296:16:21","nodeType":"YulBlock","src":"1296:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1305:1:21","nodeType":"YulLiteral","src":"1305:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1308:1:21","nodeType":"YulLiteral","src":"1308:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1298:6:21","nodeType":"YulIdentifier","src":"1298:6:21"},"nativeSrc":"1298:12:21","nodeType":"YulFunctionCall","src":"1298:12:21"},"nativeSrc":"1298:12:21","nodeType":"YulExpressionStatement","src":"1298:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1271:7:21","nodeType":"YulIdentifier","src":"1271:7:21"},{"name":"headStart","nativeSrc":"1280:9:21","nodeType":"YulIdentifier","src":"1280:9:21"}],"functionName":{"name":"sub","nativeSrc":"1267:3:21","nodeType":"YulIdentifier","src":"1267:3:21"},"nativeSrc":"1267:23:21","nodeType":"YulFunctionCall","src":"1267:23:21"},{"kind":"number","nativeSrc":"1292:2:21","nodeType":"YulLiteral","src":"1292:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1263:3:21","nodeType":"YulIdentifier","src":"1263:3:21"},"nativeSrc":"1263:32:21","nodeType":"YulFunctionCall","src":"1263:32:21"},"nativeSrc":"1260:52:21","nodeType":"YulIf","src":"1260:52:21"},{"nativeSrc":"1321:39:21","nodeType":"YulAssignment","src":"1321:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1350:9:21","nodeType":"YulIdentifier","src":"1350:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1331:18:21","nodeType":"YulIdentifier","src":"1331:18:21"},"nativeSrc":"1331:29:21","nodeType":"YulFunctionCall","src":"1331:29:21"},"variableNames":[{"name":"value0","nativeSrc":"1321:6:21","nodeType":"YulIdentifier","src":"1321:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1180:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1216:9:21","nodeType":"YulTypedName","src":"1216:9:21","type":""},{"name":"dataEnd","nativeSrc":"1227:7:21","nodeType":"YulTypedName","src":"1227:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1239:6:21","nodeType":"YulTypedName","src":"1239:6:21","type":""}],"src":"1180:186:21"},{"body":{"nativeSrc":"1492:102:21","nodeType":"YulBlock","src":"1492:102:21","statements":[{"nativeSrc":"1502:26:21","nodeType":"YulAssignment","src":"1502:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1514:9:21","nodeType":"YulIdentifier","src":"1514:9:21"},{"kind":"number","nativeSrc":"1525:2:21","nodeType":"YulLiteral","src":"1525:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1510:3:21","nodeType":"YulIdentifier","src":"1510:3:21"},"nativeSrc":"1510:18:21","nodeType":"YulFunctionCall","src":"1510:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1502:4:21","nodeType":"YulIdentifier","src":"1502:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1544:9:21","nodeType":"YulIdentifier","src":"1544:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1559:6:21","nodeType":"YulIdentifier","src":"1559:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1575:3:21","nodeType":"YulLiteral","src":"1575:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1580:1:21","nodeType":"YulLiteral","src":"1580:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1571:3:21","nodeType":"YulIdentifier","src":"1571:3:21"},"nativeSrc":"1571:11:21","nodeType":"YulFunctionCall","src":"1571:11:21"},{"kind":"number","nativeSrc":"1584:1:21","nodeType":"YulLiteral","src":"1584:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1567:3:21","nodeType":"YulIdentifier","src":"1567:3:21"},"nativeSrc":"1567:19:21","nodeType":"YulFunctionCall","src":"1567:19:21"}],"functionName":{"name":"and","nativeSrc":"1555:3:21","nodeType":"YulIdentifier","src":"1555:3:21"},"nativeSrc":"1555:32:21","nodeType":"YulFunctionCall","src":"1555:32:21"}],"functionName":{"name":"mstore","nativeSrc":"1537:6:21","nodeType":"YulIdentifier","src":"1537:6:21"},"nativeSrc":"1537:51:21","nodeType":"YulFunctionCall","src":"1537:51:21"},"nativeSrc":"1537:51:21","nodeType":"YulExpressionStatement","src":"1537:51:21"}]},"name":"abi_encode_tuple_t_contract$_IBeanRouter_$2896__to_t_address__fromStack_reversed","nativeSrc":"1371:223:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1461:9:21","nodeType":"YulTypedName","src":"1461:9:21","type":""},{"name":"value0","nativeSrc":"1472:6:21","nodeType":"YulTypedName","src":"1472:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1483:4:21","nodeType":"YulTypedName","src":"1483:4:21","type":""}],"src":"1371:223:21"},{"body":{"nativeSrc":"1720:276:21","nodeType":"YulBlock","src":"1720:276:21","statements":[{"body":{"nativeSrc":"1767:16:21","nodeType":"YulBlock","src":"1767:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1776:1:21","nodeType":"YulLiteral","src":"1776:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1779:1:21","nodeType":"YulLiteral","src":"1779:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1769:6:21","nodeType":"YulIdentifier","src":"1769:6:21"},"nativeSrc":"1769:12:21","nodeType":"YulFunctionCall","src":"1769:12:21"},"nativeSrc":"1769:12:21","nodeType":"YulExpressionStatement","src":"1769:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1741:7:21","nodeType":"YulIdentifier","src":"1741:7:21"},{"name":"headStart","nativeSrc":"1750:9:21","nodeType":"YulIdentifier","src":"1750:9:21"}],"functionName":{"name":"sub","nativeSrc":"1737:3:21","nodeType":"YulIdentifier","src":"1737:3:21"},"nativeSrc":"1737:23:21","nodeType":"YulFunctionCall","src":"1737:23:21"},{"kind":"number","nativeSrc":"1762:3:21","nodeType":"YulLiteral","src":"1762:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1733:3:21","nodeType":"YulIdentifier","src":"1733:3:21"},"nativeSrc":"1733:33:21","nodeType":"YulFunctionCall","src":"1733:33:21"},"nativeSrc":"1730:53:21","nodeType":"YulIf","src":"1730:53:21"},{"nativeSrc":"1792:39:21","nodeType":"YulAssignment","src":"1792:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1821:9:21","nodeType":"YulIdentifier","src":"1821:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1802:18:21","nodeType":"YulIdentifier","src":"1802:18:21"},"nativeSrc":"1802:29:21","nodeType":"YulFunctionCall","src":"1802:29:21"},"variableNames":[{"name":"value0","nativeSrc":"1792:6:21","nodeType":"YulIdentifier","src":"1792:6:21"}]},{"nativeSrc":"1840:48:21","nodeType":"YulAssignment","src":"1840:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1873:9:21","nodeType":"YulIdentifier","src":"1873:9:21"},{"kind":"number","nativeSrc":"1884:2:21","nodeType":"YulLiteral","src":"1884:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1869:3:21","nodeType":"YulIdentifier","src":"1869:3:21"},"nativeSrc":"1869:18:21","nodeType":"YulFunctionCall","src":"1869:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1850:18:21","nodeType":"YulIdentifier","src":"1850:18:21"},"nativeSrc":"1850:38:21","nodeType":"YulFunctionCall","src":"1850:38:21"},"variableNames":[{"name":"value1","nativeSrc":"1840:6:21","nodeType":"YulIdentifier","src":"1840:6:21"}]},{"nativeSrc":"1897:42:21","nodeType":"YulAssignment","src":"1897:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1924:9:21","nodeType":"YulIdentifier","src":"1924:9:21"},{"kind":"number","nativeSrc":"1935:2:21","nodeType":"YulLiteral","src":"1935:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1920:3:21","nodeType":"YulIdentifier","src":"1920:3:21"},"nativeSrc":"1920:18:21","nodeType":"YulFunctionCall","src":"1920:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1907:12:21","nodeType":"YulIdentifier","src":"1907:12:21"},"nativeSrc":"1907:32:21","nodeType":"YulFunctionCall","src":"1907:32:21"},"variableNames":[{"name":"value2","nativeSrc":"1897:6:21","nodeType":"YulIdentifier","src":"1897:6:21"}]},{"nativeSrc":"1948:42:21","nodeType":"YulAssignment","src":"1948:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1975:9:21","nodeType":"YulIdentifier","src":"1975:9:21"},{"kind":"number","nativeSrc":"1986:2:21","nodeType":"YulLiteral","src":"1986:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1971:3:21","nodeType":"YulIdentifier","src":"1971:3:21"},"nativeSrc":"1971:18:21","nodeType":"YulFunctionCall","src":"1971:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1958:12:21","nodeType":"YulIdentifier","src":"1958:12:21"},"nativeSrc":"1958:32:21","nodeType":"YulFunctionCall","src":"1958:32:21"},"variableNames":[{"name":"value3","nativeSrc":"1948:6:21","nodeType":"YulIdentifier","src":"1948:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nativeSrc":"1599:397:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1662:9:21","nodeType":"YulTypedName","src":"1662:9:21","type":""},{"name":"dataEnd","nativeSrc":"1673:7:21","nodeType":"YulTypedName","src":"1673:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1685:6:21","nodeType":"YulTypedName","src":"1685:6:21","type":""},{"name":"value1","nativeSrc":"1693:6:21","nodeType":"YulTypedName","src":"1693:6:21","type":""},{"name":"value2","nativeSrc":"1701:6:21","nodeType":"YulTypedName","src":"1701:6:21","type":""},{"name":"value3","nativeSrc":"1709:6:21","nodeType":"YulTypedName","src":"1709:6:21","type":""}],"src":"1599:397:21"},{"body":{"nativeSrc":"2175:236:21","nodeType":"YulBlock","src":"2175:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2192:9:21","nodeType":"YulIdentifier","src":"2192:9:21"},{"kind":"number","nativeSrc":"2203:2:21","nodeType":"YulLiteral","src":"2203:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2185:6:21","nodeType":"YulIdentifier","src":"2185:6:21"},"nativeSrc":"2185:21:21","nodeType":"YulFunctionCall","src":"2185:21:21"},"nativeSrc":"2185:21:21","nodeType":"YulExpressionStatement","src":"2185:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2226:9:21","nodeType":"YulIdentifier","src":"2226:9:21"},{"kind":"number","nativeSrc":"2237:2:21","nodeType":"YulLiteral","src":"2237:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2222:3:21","nodeType":"YulIdentifier","src":"2222:3:21"},"nativeSrc":"2222:18:21","nodeType":"YulFunctionCall","src":"2222:18:21"},{"kind":"number","nativeSrc":"2242:2:21","nodeType":"YulLiteral","src":"2242:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"2215:6:21","nodeType":"YulIdentifier","src":"2215:6:21"},"nativeSrc":"2215:30:21","nodeType":"YulFunctionCall","src":"2215:30:21"},"nativeSrc":"2215:30:21","nodeType":"YulExpressionStatement","src":"2215:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2265:9:21","nodeType":"YulIdentifier","src":"2265:9:21"},{"kind":"number","nativeSrc":"2276:2:21","nodeType":"YulLiteral","src":"2276:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2261:3:21","nodeType":"YulIdentifier","src":"2261:3:21"},"nativeSrc":"2261:18:21","nodeType":"YulFunctionCall","src":"2261:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nativeSrc":"2281:34:21","nodeType":"YulLiteral","src":"2281:34:21","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nativeSrc":"2254:6:21","nodeType":"YulIdentifier","src":"2254:6:21"},"nativeSrc":"2254:62:21","nodeType":"YulFunctionCall","src":"2254:62:21"},"nativeSrc":"2254:62:21","nodeType":"YulExpressionStatement","src":"2254:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2336:9:21","nodeType":"YulIdentifier","src":"2336:9:21"},{"kind":"number","nativeSrc":"2347:2:21","nodeType":"YulLiteral","src":"2347:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2332:3:21","nodeType":"YulIdentifier","src":"2332:3:21"},"nativeSrc":"2332:18:21","nodeType":"YulFunctionCall","src":"2332:18:21"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nativeSrc":"2352:16:21","nodeType":"YulLiteral","src":"2352:16:21","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nativeSrc":"2325:6:21","nodeType":"YulIdentifier","src":"2325:6:21"},"nativeSrc":"2325:44:21","nodeType":"YulFunctionCall","src":"2325:44:21"},"nativeSrc":"2325:44:21","nodeType":"YulExpressionStatement","src":"2325:44:21"},{"nativeSrc":"2378:27:21","nodeType":"YulAssignment","src":"2378:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2390:9:21","nodeType":"YulIdentifier","src":"2390:9:21"},{"kind":"number","nativeSrc":"2401:3:21","nodeType":"YulLiteral","src":"2401:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2386:3:21","nodeType":"YulIdentifier","src":"2386:3:21"},"nativeSrc":"2386:19:21","nodeType":"YulFunctionCall","src":"2386:19:21"},"variableNames":[{"name":"tail","nativeSrc":"2378:4:21","nodeType":"YulIdentifier","src":"2378:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2001:410:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2152:9:21","nodeType":"YulTypedName","src":"2152:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2166:4:21","nodeType":"YulTypedName","src":"2166:4:21","type":""}],"src":"2001:410:21"},{"body":{"nativeSrc":"2523:87:21","nodeType":"YulBlock","src":"2523:87:21","statements":[{"nativeSrc":"2533:26:21","nodeType":"YulAssignment","src":"2533:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2545:9:21","nodeType":"YulIdentifier","src":"2545:9:21"},{"kind":"number","nativeSrc":"2556:2:21","nodeType":"YulLiteral","src":"2556:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2541:3:21","nodeType":"YulIdentifier","src":"2541:3:21"},"nativeSrc":"2541:18:21","nodeType":"YulFunctionCall","src":"2541:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2533:4:21","nodeType":"YulIdentifier","src":"2533:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2575:9:21","nodeType":"YulIdentifier","src":"2575:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2590:6:21","nodeType":"YulIdentifier","src":"2590:6:21"},{"kind":"number","nativeSrc":"2598:4:21","nodeType":"YulLiteral","src":"2598:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2586:3:21","nodeType":"YulIdentifier","src":"2586:3:21"},"nativeSrc":"2586:17:21","nodeType":"YulFunctionCall","src":"2586:17:21"}],"functionName":{"name":"mstore","nativeSrc":"2568:6:21","nodeType":"YulIdentifier","src":"2568:6:21"},"nativeSrc":"2568:36:21","nodeType":"YulFunctionCall","src":"2568:36:21"},"nativeSrc":"2568:36:21","nodeType":"YulExpressionStatement","src":"2568:36:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nativeSrc":"2416:194:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2492:9:21","nodeType":"YulTypedName","src":"2492:9:21","type":""},{"name":"value0","nativeSrc":"2503:6:21","nodeType":"YulTypedName","src":"2503:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2514:4:21","nodeType":"YulTypedName","src":"2514:4:21","type":""}],"src":"2416:194:21"},{"body":{"nativeSrc":"2647:95:21","nodeType":"YulBlock","src":"2647:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2664:1:21","nodeType":"YulLiteral","src":"2664:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2671:3:21","nodeType":"YulLiteral","src":"2671:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"2676:10:21","nodeType":"YulLiteral","src":"2676:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2667:3:21","nodeType":"YulIdentifier","src":"2667:3:21"},"nativeSrc":"2667:20:21","nodeType":"YulFunctionCall","src":"2667:20:21"}],"functionName":{"name":"mstore","nativeSrc":"2657:6:21","nodeType":"YulIdentifier","src":"2657:6:21"},"nativeSrc":"2657:31:21","nodeType":"YulFunctionCall","src":"2657:31:21"},"nativeSrc":"2657:31:21","nodeType":"YulExpressionStatement","src":"2657:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2704:1:21","nodeType":"YulLiteral","src":"2704:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"2707:4:21","nodeType":"YulLiteral","src":"2707:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2697:6:21","nodeType":"YulIdentifier","src":"2697:6:21"},"nativeSrc":"2697:15:21","nodeType":"YulFunctionCall","src":"2697:15:21"},"nativeSrc":"2697:15:21","nodeType":"YulExpressionStatement","src":"2697:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2728:1:21","nodeType":"YulLiteral","src":"2728:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2731:4:21","nodeType":"YulLiteral","src":"2731:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2721:6:21","nodeType":"YulIdentifier","src":"2721:6:21"},"nativeSrc":"2721:15:21","nodeType":"YulFunctionCall","src":"2721:15:21"},"nativeSrc":"2721:15:21","nodeType":"YulExpressionStatement","src":"2721:15:21"}]},"name":"panic_error_0x41","nativeSrc":"2615:127:21","nodeType":"YulFunctionDefinition","src":"2615:127:21"},{"body":{"nativeSrc":"2779:95:21","nodeType":"YulBlock","src":"2779:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2796:1:21","nodeType":"YulLiteral","src":"2796:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2803:3:21","nodeType":"YulLiteral","src":"2803:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"2808:10:21","nodeType":"YulLiteral","src":"2808:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2799:3:21","nodeType":"YulIdentifier","src":"2799:3:21"},"nativeSrc":"2799:20:21","nodeType":"YulFunctionCall","src":"2799:20:21"}],"functionName":{"name":"mstore","nativeSrc":"2789:6:21","nodeType":"YulIdentifier","src":"2789:6:21"},"nativeSrc":"2789:31:21","nodeType":"YulFunctionCall","src":"2789:31:21"},"nativeSrc":"2789:31:21","nodeType":"YulExpressionStatement","src":"2789:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2836:1:21","nodeType":"YulLiteral","src":"2836:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"2839:4:21","nodeType":"YulLiteral","src":"2839:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"2829:6:21","nodeType":"YulIdentifier","src":"2829:6:21"},"nativeSrc":"2829:15:21","nodeType":"YulFunctionCall","src":"2829:15:21"},"nativeSrc":"2829:15:21","nodeType":"YulExpressionStatement","src":"2829:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2860:1:21","nodeType":"YulLiteral","src":"2860:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2863:4:21","nodeType":"YulLiteral","src":"2863:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2853:6:21","nodeType":"YulIdentifier","src":"2853:6:21"},"nativeSrc":"2853:15:21","nodeType":"YulFunctionCall","src":"2853:15:21"},"nativeSrc":"2853:15:21","nodeType":"YulExpressionStatement","src":"2853:15:21"}]},"name":"panic_error_0x32","nativeSrc":"2747:127:21","nodeType":"YulFunctionDefinition","src":"2747:127:21"},{"body":{"nativeSrc":"2940:404:21","nodeType":"YulBlock","src":"2940:404:21","statements":[{"nativeSrc":"2950:26:21","nodeType":"YulVariableDeclaration","src":"2950:26:21","value":{"arguments":[{"name":"value","nativeSrc":"2970:5:21","nodeType":"YulIdentifier","src":"2970:5:21"}],"functionName":{"name":"mload","nativeSrc":"2964:5:21","nodeType":"YulIdentifier","src":"2964:5:21"},"nativeSrc":"2964:12:21","nodeType":"YulFunctionCall","src":"2964:12:21"},"variables":[{"name":"length","nativeSrc":"2954:6:21","nodeType":"YulTypedName","src":"2954:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2992:3:21","nodeType":"YulIdentifier","src":"2992:3:21"},{"name":"length","nativeSrc":"2997:6:21","nodeType":"YulIdentifier","src":"2997:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2985:6:21","nodeType":"YulIdentifier","src":"2985:6:21"},"nativeSrc":"2985:19:21","nodeType":"YulFunctionCall","src":"2985:19:21"},"nativeSrc":"2985:19:21","nodeType":"YulExpressionStatement","src":"2985:19:21"},{"nativeSrc":"3013:14:21","nodeType":"YulVariableDeclaration","src":"3013:14:21","value":{"kind":"number","nativeSrc":"3023:4:21","nodeType":"YulLiteral","src":"3023:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"3017:2:21","nodeType":"YulTypedName","src":"3017:2:21","type":""}]},{"nativeSrc":"3036:21:21","nodeType":"YulAssignment","src":"3036:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"3047:3:21","nodeType":"YulIdentifier","src":"3047:3:21"},{"kind":"number","nativeSrc":"3052:4:21","nodeType":"YulLiteral","src":"3052:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3043:3:21","nodeType":"YulIdentifier","src":"3043:3:21"},"nativeSrc":"3043:14:21","nodeType":"YulFunctionCall","src":"3043:14:21"},"variableNames":[{"name":"pos","nativeSrc":"3036:3:21","nodeType":"YulIdentifier","src":"3036:3:21"}]},{"nativeSrc":"3066:30:21","nodeType":"YulVariableDeclaration","src":"3066:30:21","value":{"arguments":[{"name":"value","nativeSrc":"3084:5:21","nodeType":"YulIdentifier","src":"3084:5:21"},{"kind":"number","nativeSrc":"3091:4:21","nodeType":"YulLiteral","src":"3091:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3080:3:21","nodeType":"YulIdentifier","src":"3080:3:21"},"nativeSrc":"3080:16:21","nodeType":"YulFunctionCall","src":"3080:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"3070:6:21","nodeType":"YulTypedName","src":"3070:6:21","type":""}]},{"nativeSrc":"3105:10:21","nodeType":"YulVariableDeclaration","src":"3105:10:21","value":{"kind":"number","nativeSrc":"3114:1:21","nodeType":"YulLiteral","src":"3114:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3109:1:21","nodeType":"YulTypedName","src":"3109:1:21","type":""}]},{"body":{"nativeSrc":"3173:146:21","nodeType":"YulBlock","src":"3173:146:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3194:3:21","nodeType":"YulIdentifier","src":"3194:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"3209:6:21","nodeType":"YulIdentifier","src":"3209:6:21"}],"functionName":{"name":"mload","nativeSrc":"3203:5:21","nodeType":"YulIdentifier","src":"3203:5:21"},"nativeSrc":"3203:13:21","nodeType":"YulFunctionCall","src":"3203:13:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3226:3:21","nodeType":"YulLiteral","src":"3226:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"3231:1:21","nodeType":"YulLiteral","src":"3231:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3222:3:21","nodeType":"YulIdentifier","src":"3222:3:21"},"nativeSrc":"3222:11:21","nodeType":"YulFunctionCall","src":"3222:11:21"},{"kind":"number","nativeSrc":"3235:1:21","nodeType":"YulLiteral","src":"3235:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3218:3:21","nodeType":"YulIdentifier","src":"3218:3:21"},"nativeSrc":"3218:19:21","nodeType":"YulFunctionCall","src":"3218:19:21"}],"functionName":{"name":"and","nativeSrc":"3199:3:21","nodeType":"YulIdentifier","src":"3199:3:21"},"nativeSrc":"3199:39:21","nodeType":"YulFunctionCall","src":"3199:39:21"}],"functionName":{"name":"mstore","nativeSrc":"3187:6:21","nodeType":"YulIdentifier","src":"3187:6:21"},"nativeSrc":"3187:52:21","nodeType":"YulFunctionCall","src":"3187:52:21"},"nativeSrc":"3187:52:21","nodeType":"YulExpressionStatement","src":"3187:52:21"},{"nativeSrc":"3252:19:21","nodeType":"YulAssignment","src":"3252:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"3263:3:21","nodeType":"YulIdentifier","src":"3263:3:21"},{"name":"_1","nativeSrc":"3268:2:21","nodeType":"YulIdentifier","src":"3268:2:21"}],"functionName":{"name":"add","nativeSrc":"3259:3:21","nodeType":"YulIdentifier","src":"3259:3:21"},"nativeSrc":"3259:12:21","nodeType":"YulFunctionCall","src":"3259:12:21"},"variableNames":[{"name":"pos","nativeSrc":"3252:3:21","nodeType":"YulIdentifier","src":"3252:3:21"}]},{"nativeSrc":"3284:25:21","nodeType":"YulAssignment","src":"3284:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"3298:6:21","nodeType":"YulIdentifier","src":"3298:6:21"},{"name":"_1","nativeSrc":"3306:2:21","nodeType":"YulIdentifier","src":"3306:2:21"}],"functionName":{"name":"add","nativeSrc":"3294:3:21","nodeType":"YulIdentifier","src":"3294:3:21"},"nativeSrc":"3294:15:21","nodeType":"YulFunctionCall","src":"3294:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"3284:6:21","nodeType":"YulIdentifier","src":"3284:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3135:1:21","nodeType":"YulIdentifier","src":"3135:1:21"},{"name":"length","nativeSrc":"3138:6:21","nodeType":"YulIdentifier","src":"3138:6:21"}],"functionName":{"name":"lt","nativeSrc":"3132:2:21","nodeType":"YulIdentifier","src":"3132:2:21"},"nativeSrc":"3132:13:21","nodeType":"YulFunctionCall","src":"3132:13:21"},"nativeSrc":"3124:195:21","nodeType":"YulForLoop","post":{"nativeSrc":"3146:18:21","nodeType":"YulBlock","src":"3146:18:21","statements":[{"nativeSrc":"3148:14:21","nodeType":"YulAssignment","src":"3148:14:21","value":{"arguments":[{"name":"i","nativeSrc":"3157:1:21","nodeType":"YulIdentifier","src":"3157:1:21"},{"kind":"number","nativeSrc":"3160:1:21","nodeType":"YulLiteral","src":"3160:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3153:3:21","nodeType":"YulIdentifier","src":"3153:3:21"},"nativeSrc":"3153:9:21","nodeType":"YulFunctionCall","src":"3153:9:21"},"variableNames":[{"name":"i","nativeSrc":"3148:1:21","nodeType":"YulIdentifier","src":"3148:1:21"}]}]},"pre":{"nativeSrc":"3128:3:21","nodeType":"YulBlock","src":"3128:3:21","statements":[]},"src":"3124:195:21"},{"nativeSrc":"3328:10:21","nodeType":"YulAssignment","src":"3328:10:21","value":{"name":"pos","nativeSrc":"3335:3:21","nodeType":"YulIdentifier","src":"3335:3:21"},"variableNames":[{"name":"end","nativeSrc":"3328:3:21","nodeType":"YulIdentifier","src":"3328:3:21"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"2879:465:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2917:5:21","nodeType":"YulTypedName","src":"2917:5:21","type":""},{"name":"pos","nativeSrc":"2924:3:21","nodeType":"YulTypedName","src":"2924:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2932:3:21","nodeType":"YulTypedName","src":"2932:3:21","type":""}],"src":"2879:465:21"},{"body":{"nativeSrc":"3528:153:21","nodeType":"YulBlock","src":"3528:153:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3545:9:21","nodeType":"YulIdentifier","src":"3545:9:21"},{"name":"value0","nativeSrc":"3556:6:21","nodeType":"YulIdentifier","src":"3556:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3538:6:21","nodeType":"YulIdentifier","src":"3538:6:21"},"nativeSrc":"3538:25:21","nodeType":"YulFunctionCall","src":"3538:25:21"},"nativeSrc":"3538:25:21","nodeType":"YulExpressionStatement","src":"3538:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3583:9:21","nodeType":"YulIdentifier","src":"3583:9:21"},{"kind":"number","nativeSrc":"3594:2:21","nodeType":"YulLiteral","src":"3594:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3579:3:21","nodeType":"YulIdentifier","src":"3579:3:21"},"nativeSrc":"3579:18:21","nodeType":"YulFunctionCall","src":"3579:18:21"},{"kind":"number","nativeSrc":"3599:2:21","nodeType":"YulLiteral","src":"3599:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"3572:6:21","nodeType":"YulIdentifier","src":"3572:6:21"},"nativeSrc":"3572:30:21","nodeType":"YulFunctionCall","src":"3572:30:21"},"nativeSrc":"3572:30:21","nodeType":"YulExpressionStatement","src":"3572:30:21"},{"nativeSrc":"3611:64:21","nodeType":"YulAssignment","src":"3611:64:21","value":{"arguments":[{"name":"value1","nativeSrc":"3648:6:21","nodeType":"YulIdentifier","src":"3648:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3660:9:21","nodeType":"YulIdentifier","src":"3660:9:21"},{"kind":"number","nativeSrc":"3671:2:21","nodeType":"YulLiteral","src":"3671:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3656:3:21","nodeType":"YulIdentifier","src":"3656:3:21"},"nativeSrc":"3656:18:21","nodeType":"YulFunctionCall","src":"3656:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"3619:28:21","nodeType":"YulIdentifier","src":"3619:28:21"},"nativeSrc":"3619:56:21","nodeType":"YulFunctionCall","src":"3619:56:21"},"variableNames":[{"name":"tail","nativeSrc":"3611:4:21","nodeType":"YulIdentifier","src":"3611:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3349:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3489:9:21","nodeType":"YulTypedName","src":"3489:9:21","type":""},{"name":"value1","nativeSrc":"3500:6:21","nodeType":"YulTypedName","src":"3500:6:21","type":""},{"name":"value0","nativeSrc":"3508:6:21","nodeType":"YulTypedName","src":"3508:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3519:4:21","nodeType":"YulTypedName","src":"3519:4:21","type":""}],"src":"3349:332:21"},{"body":{"nativeSrc":"3792:999:21","nodeType":"YulBlock","src":"3792:999:21","statements":[{"nativeSrc":"3802:12:21","nodeType":"YulVariableDeclaration","src":"3802:12:21","value":{"kind":"number","nativeSrc":"3812:2:21","nodeType":"YulLiteral","src":"3812:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3806:2:21","nodeType":"YulTypedName","src":"3806:2:21","type":""}]},{"body":{"nativeSrc":"3859:16:21","nodeType":"YulBlock","src":"3859:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3868:1:21","nodeType":"YulLiteral","src":"3868:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3871:1:21","nodeType":"YulLiteral","src":"3871:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3861:6:21","nodeType":"YulIdentifier","src":"3861:6:21"},"nativeSrc":"3861:12:21","nodeType":"YulFunctionCall","src":"3861:12:21"},"nativeSrc":"3861:12:21","nodeType":"YulExpressionStatement","src":"3861:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3834:7:21","nodeType":"YulIdentifier","src":"3834:7:21"},{"name":"headStart","nativeSrc":"3843:9:21","nodeType":"YulIdentifier","src":"3843:9:21"}],"functionName":{"name":"sub","nativeSrc":"3830:3:21","nodeType":"YulIdentifier","src":"3830:3:21"},"nativeSrc":"3830:23:21","nodeType":"YulFunctionCall","src":"3830:23:21"},{"name":"_1","nativeSrc":"3855:2:21","nodeType":"YulIdentifier","src":"3855:2:21"}],"functionName":{"name":"slt","nativeSrc":"3826:3:21","nodeType":"YulIdentifier","src":"3826:3:21"},"nativeSrc":"3826:32:21","nodeType":"YulFunctionCall","src":"3826:32:21"},"nativeSrc":"3823:52:21","nodeType":"YulIf","src":"3823:52:21"},{"nativeSrc":"3884:30:21","nodeType":"YulVariableDeclaration","src":"3884:30:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3904:9:21","nodeType":"YulIdentifier","src":"3904:9:21"}],"functionName":{"name":"mload","nativeSrc":"3898:5:21","nodeType":"YulIdentifier","src":"3898:5:21"},"nativeSrc":"3898:16:21","nodeType":"YulFunctionCall","src":"3898:16:21"},"variables":[{"name":"offset","nativeSrc":"3888:6:21","nodeType":"YulTypedName","src":"3888:6:21","type":""}]},{"nativeSrc":"3923:28:21","nodeType":"YulVariableDeclaration","src":"3923:28:21","value":{"kind":"number","nativeSrc":"3933:18:21","nodeType":"YulLiteral","src":"3933:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"3927:2:21","nodeType":"YulTypedName","src":"3927:2:21","type":""}]},{"body":{"nativeSrc":"3978:16:21","nodeType":"YulBlock","src":"3978:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3987:1:21","nodeType":"YulLiteral","src":"3987:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3990:1:21","nodeType":"YulLiteral","src":"3990:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3980:6:21","nodeType":"YulIdentifier","src":"3980:6:21"},"nativeSrc":"3980:12:21","nodeType":"YulFunctionCall","src":"3980:12:21"},"nativeSrc":"3980:12:21","nodeType":"YulExpressionStatement","src":"3980:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3966:6:21","nodeType":"YulIdentifier","src":"3966:6:21"},{"name":"_2","nativeSrc":"3974:2:21","nodeType":"YulIdentifier","src":"3974:2:21"}],"functionName":{"name":"gt","nativeSrc":"3963:2:21","nodeType":"YulIdentifier","src":"3963:2:21"},"nativeSrc":"3963:14:21","nodeType":"YulFunctionCall","src":"3963:14:21"},"nativeSrc":"3960:34:21","nodeType":"YulIf","src":"3960:34:21"},{"nativeSrc":"4003:32:21","nodeType":"YulVariableDeclaration","src":"4003:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4017:9:21","nodeType":"YulIdentifier","src":"4017:9:21"},{"name":"offset","nativeSrc":"4028:6:21","nodeType":"YulIdentifier","src":"4028:6:21"}],"functionName":{"name":"add","nativeSrc":"4013:3:21","nodeType":"YulIdentifier","src":"4013:3:21"},"nativeSrc":"4013:22:21","nodeType":"YulFunctionCall","src":"4013:22:21"},"variables":[{"name":"_3","nativeSrc":"4007:2:21","nodeType":"YulTypedName","src":"4007:2:21","type":""}]},{"body":{"nativeSrc":"4083:16:21","nodeType":"YulBlock","src":"4083:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4092:1:21","nodeType":"YulLiteral","src":"4092:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4095:1:21","nodeType":"YulLiteral","src":"4095:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4085:6:21","nodeType":"YulIdentifier","src":"4085:6:21"},"nativeSrc":"4085:12:21","nodeType":"YulFunctionCall","src":"4085:12:21"},"nativeSrc":"4085:12:21","nodeType":"YulExpressionStatement","src":"4085:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"4062:2:21","nodeType":"YulIdentifier","src":"4062:2:21"},{"kind":"number","nativeSrc":"4066:4:21","nodeType":"YulLiteral","src":"4066:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4058:3:21","nodeType":"YulIdentifier","src":"4058:3:21"},"nativeSrc":"4058:13:21","nodeType":"YulFunctionCall","src":"4058:13:21"},{"name":"dataEnd","nativeSrc":"4073:7:21","nodeType":"YulIdentifier","src":"4073:7:21"}],"functionName":{"name":"slt","nativeSrc":"4054:3:21","nodeType":"YulIdentifier","src":"4054:3:21"},"nativeSrc":"4054:27:21","nodeType":"YulFunctionCall","src":"4054:27:21"}],"functionName":{"name":"iszero","nativeSrc":"4047:6:21","nodeType":"YulIdentifier","src":"4047:6:21"},"nativeSrc":"4047:35:21","nodeType":"YulFunctionCall","src":"4047:35:21"},"nativeSrc":"4044:55:21","nodeType":"YulIf","src":"4044:55:21"},{"nativeSrc":"4108:19:21","nodeType":"YulVariableDeclaration","src":"4108:19:21","value":{"arguments":[{"name":"_3","nativeSrc":"4124:2:21","nodeType":"YulIdentifier","src":"4124:2:21"}],"functionName":{"name":"mload","nativeSrc":"4118:5:21","nodeType":"YulIdentifier","src":"4118:5:21"},"nativeSrc":"4118:9:21","nodeType":"YulFunctionCall","src":"4118:9:21"},"variables":[{"name":"_4","nativeSrc":"4112:2:21","nodeType":"YulTypedName","src":"4112:2:21","type":""}]},{"body":{"nativeSrc":"4150:22:21","nodeType":"YulBlock","src":"4150:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4152:16:21","nodeType":"YulIdentifier","src":"4152:16:21"},"nativeSrc":"4152:18:21","nodeType":"YulFunctionCall","src":"4152:18:21"},"nativeSrc":"4152:18:21","nodeType":"YulExpressionStatement","src":"4152:18:21"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"4142:2:21","nodeType":"YulIdentifier","src":"4142:2:21"},{"name":"_2","nativeSrc":"4146:2:21","nodeType":"YulIdentifier","src":"4146:2:21"}],"functionName":{"name":"gt","nativeSrc":"4139:2:21","nodeType":"YulIdentifier","src":"4139:2:21"},"nativeSrc":"4139:10:21","nodeType":"YulFunctionCall","src":"4139:10:21"},"nativeSrc":"4136:36:21","nodeType":"YulIf","src":"4136:36:21"},{"nativeSrc":"4181:20:21","nodeType":"YulVariableDeclaration","src":"4181:20:21","value":{"arguments":[{"kind":"number","nativeSrc":"4195:1:21","nodeType":"YulLiteral","src":"4195:1:21","type":"","value":"5"},{"name":"_4","nativeSrc":"4198:2:21","nodeType":"YulIdentifier","src":"4198:2:21"}],"functionName":{"name":"shl","nativeSrc":"4191:3:21","nodeType":"YulIdentifier","src":"4191:3:21"},"nativeSrc":"4191:10:21","nodeType":"YulFunctionCall","src":"4191:10:21"},"variables":[{"name":"_5","nativeSrc":"4185:2:21","nodeType":"YulTypedName","src":"4185:2:21","type":""}]},{"nativeSrc":"4210:23:21","nodeType":"YulVariableDeclaration","src":"4210:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"4230:2:21","nodeType":"YulLiteral","src":"4230:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"4224:5:21","nodeType":"YulIdentifier","src":"4224:5:21"},"nativeSrc":"4224:9:21","nodeType":"YulFunctionCall","src":"4224:9:21"},"variables":[{"name":"memPtr","nativeSrc":"4214:6:21","nodeType":"YulTypedName","src":"4214:6:21","type":""}]},{"nativeSrc":"4242:56:21","nodeType":"YulVariableDeclaration","src":"4242:56:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"4264:6:21","nodeType":"YulIdentifier","src":"4264:6:21"},{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"4280:2:21","nodeType":"YulIdentifier","src":"4280:2:21"},{"kind":"number","nativeSrc":"4284:2:21","nodeType":"YulLiteral","src":"4284:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"4276:3:21","nodeType":"YulIdentifier","src":"4276:3:21"},"nativeSrc":"4276:11:21","nodeType":"YulFunctionCall","src":"4276:11:21"},{"arguments":[{"kind":"number","nativeSrc":"4293:2:21","nodeType":"YulLiteral","src":"4293:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4289:3:21","nodeType":"YulIdentifier","src":"4289:3:21"},"nativeSrc":"4289:7:21","nodeType":"YulFunctionCall","src":"4289:7:21"}],"functionName":{"name":"and","nativeSrc":"4272:3:21","nodeType":"YulIdentifier","src":"4272:3:21"},"nativeSrc":"4272:25:21","nodeType":"YulFunctionCall","src":"4272:25:21"}],"functionName":{"name":"add","nativeSrc":"4260:3:21","nodeType":"YulIdentifier","src":"4260:3:21"},"nativeSrc":"4260:38:21","nodeType":"YulFunctionCall","src":"4260:38:21"},"variables":[{"name":"newFreePtr","nativeSrc":"4246:10:21","nodeType":"YulTypedName","src":"4246:10:21","type":""}]},{"body":{"nativeSrc":"4357:22:21","nodeType":"YulBlock","src":"4357:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4359:16:21","nodeType":"YulIdentifier","src":"4359:16:21"},"nativeSrc":"4359:18:21","nodeType":"YulFunctionCall","src":"4359:18:21"},"nativeSrc":"4359:18:21","nodeType":"YulExpressionStatement","src":"4359:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4316:10:21","nodeType":"YulIdentifier","src":"4316:10:21"},{"name":"_2","nativeSrc":"4328:2:21","nodeType":"YulIdentifier","src":"4328:2:21"}],"functionName":{"name":"gt","nativeSrc":"4313:2:21","nodeType":"YulIdentifier","src":"4313:2:21"},"nativeSrc":"4313:18:21","nodeType":"YulFunctionCall","src":"4313:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4336:10:21","nodeType":"YulIdentifier","src":"4336:10:21"},{"name":"memPtr","nativeSrc":"4348:6:21","nodeType":"YulIdentifier","src":"4348:6:21"}],"functionName":{"name":"lt","nativeSrc":"4333:2:21","nodeType":"YulIdentifier","src":"4333:2:21"},"nativeSrc":"4333:22:21","nodeType":"YulFunctionCall","src":"4333:22:21"}],"functionName":{"name":"or","nativeSrc":"4310:2:21","nodeType":"YulIdentifier","src":"4310:2:21"},"nativeSrc":"4310:46:21","nodeType":"YulFunctionCall","src":"4310:46:21"},"nativeSrc":"4307:72:21","nodeType":"YulIf","src":"4307:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4395:2:21","nodeType":"YulLiteral","src":"4395:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4399:10:21","nodeType":"YulIdentifier","src":"4399:10:21"}],"functionName":{"name":"mstore","nativeSrc":"4388:6:21","nodeType":"YulIdentifier","src":"4388:6:21"},"nativeSrc":"4388:22:21","nodeType":"YulFunctionCall","src":"4388:22:21"},"nativeSrc":"4388:22:21","nodeType":"YulExpressionStatement","src":"4388:22:21"},{"nativeSrc":"4419:17:21","nodeType":"YulVariableDeclaration","src":"4419:17:21","value":{"name":"memPtr","nativeSrc":"4430:6:21","nodeType":"YulIdentifier","src":"4430:6:21"},"variables":[{"name":"dst","nativeSrc":"4423:3:21","nodeType":"YulTypedName","src":"4423:3:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4452:6:21","nodeType":"YulIdentifier","src":"4452:6:21"},{"name":"_4","nativeSrc":"4460:2:21","nodeType":"YulIdentifier","src":"4460:2:21"}],"functionName":{"name":"mstore","nativeSrc":"4445:6:21","nodeType":"YulIdentifier","src":"4445:6:21"},"nativeSrc":"4445:18:21","nodeType":"YulFunctionCall","src":"4445:18:21"},"nativeSrc":"4445:18:21","nodeType":"YulExpressionStatement","src":"4445:18:21"},{"nativeSrc":"4472:22:21","nodeType":"YulAssignment","src":"4472:22:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"4483:6:21","nodeType":"YulIdentifier","src":"4483:6:21"},{"name":"_1","nativeSrc":"4491:2:21","nodeType":"YulIdentifier","src":"4491:2:21"}],"functionName":{"name":"add","nativeSrc":"4479:3:21","nodeType":"YulIdentifier","src":"4479:3:21"},"nativeSrc":"4479:15:21","nodeType":"YulFunctionCall","src":"4479:15:21"},"variableNames":[{"name":"dst","nativeSrc":"4472:3:21","nodeType":"YulIdentifier","src":"4472:3:21"}]},{"nativeSrc":"4503:34:21","nodeType":"YulVariableDeclaration","src":"4503:34:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"4525:2:21","nodeType":"YulIdentifier","src":"4525:2:21"},{"name":"_5","nativeSrc":"4529:2:21","nodeType":"YulIdentifier","src":"4529:2:21"}],"functionName":{"name":"add","nativeSrc":"4521:3:21","nodeType":"YulIdentifier","src":"4521:3:21"},"nativeSrc":"4521:11:21","nodeType":"YulFunctionCall","src":"4521:11:21"},{"name":"_1","nativeSrc":"4534:2:21","nodeType":"YulIdentifier","src":"4534:2:21"}],"functionName":{"name":"add","nativeSrc":"4517:3:21","nodeType":"YulIdentifier","src":"4517:3:21"},"nativeSrc":"4517:20:21","nodeType":"YulFunctionCall","src":"4517:20:21"},"variables":[{"name":"srcEnd","nativeSrc":"4507:6:21","nodeType":"YulTypedName","src":"4507:6:21","type":""}]},{"body":{"nativeSrc":"4569:16:21","nodeType":"YulBlock","src":"4569:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4578:1:21","nodeType":"YulLiteral","src":"4578:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4581:1:21","nodeType":"YulLiteral","src":"4581:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4571:6:21","nodeType":"YulIdentifier","src":"4571:6:21"},"nativeSrc":"4571:12:21","nodeType":"YulFunctionCall","src":"4571:12:21"},"nativeSrc":"4571:12:21","nodeType":"YulExpressionStatement","src":"4571:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"4552:6:21","nodeType":"YulIdentifier","src":"4552:6:21"},{"name":"dataEnd","nativeSrc":"4560:7:21","nodeType":"YulIdentifier","src":"4560:7:21"}],"functionName":{"name":"gt","nativeSrc":"4549:2:21","nodeType":"YulIdentifier","src":"4549:2:21"},"nativeSrc":"4549:19:21","nodeType":"YulFunctionCall","src":"4549:19:21"},"nativeSrc":"4546:39:21","nodeType":"YulIf","src":"4546:39:21"},{"nativeSrc":"4594:22:21","nodeType":"YulVariableDeclaration","src":"4594:22:21","value":{"arguments":[{"name":"_3","nativeSrc":"4609:2:21","nodeType":"YulIdentifier","src":"4609:2:21"},{"name":"_1","nativeSrc":"4613:2:21","nodeType":"YulIdentifier","src":"4613:2:21"}],"functionName":{"name":"add","nativeSrc":"4605:3:21","nodeType":"YulIdentifier","src":"4605:3:21"},"nativeSrc":"4605:11:21","nodeType":"YulFunctionCall","src":"4605:11:21"},"variables":[{"name":"src","nativeSrc":"4598:3:21","nodeType":"YulTypedName","src":"4598:3:21","type":""}]},{"body":{"nativeSrc":"4681:79:21","nodeType":"YulBlock","src":"4681:79:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4702:3:21","nodeType":"YulIdentifier","src":"4702:3:21"},{"arguments":[{"name":"src","nativeSrc":"4713:3:21","nodeType":"YulIdentifier","src":"4713:3:21"}],"functionName":{"name":"mload","nativeSrc":"4707:5:21","nodeType":"YulIdentifier","src":"4707:5:21"},"nativeSrc":"4707:10:21","nodeType":"YulFunctionCall","src":"4707:10:21"}],"functionName":{"name":"mstore","nativeSrc":"4695:6:21","nodeType":"YulIdentifier","src":"4695:6:21"},"nativeSrc":"4695:23:21","nodeType":"YulFunctionCall","src":"4695:23:21"},"nativeSrc":"4695:23:21","nodeType":"YulExpressionStatement","src":"4695:23:21"},{"nativeSrc":"4731:19:21","nodeType":"YulAssignment","src":"4731:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"4742:3:21","nodeType":"YulIdentifier","src":"4742:3:21"},{"name":"_1","nativeSrc":"4747:2:21","nodeType":"YulIdentifier","src":"4747:2:21"}],"functionName":{"name":"add","nativeSrc":"4738:3:21","nodeType":"YulIdentifier","src":"4738:3:21"},"nativeSrc":"4738:12:21","nodeType":"YulFunctionCall","src":"4738:12:21"},"variableNames":[{"name":"dst","nativeSrc":"4731:3:21","nodeType":"YulIdentifier","src":"4731:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"4636:3:21","nodeType":"YulIdentifier","src":"4636:3:21"},{"name":"srcEnd","nativeSrc":"4641:6:21","nodeType":"YulIdentifier","src":"4641:6:21"}],"functionName":{"name":"lt","nativeSrc":"4633:2:21","nodeType":"YulIdentifier","src":"4633:2:21"},"nativeSrc":"4633:15:21","nodeType":"YulFunctionCall","src":"4633:15:21"},"nativeSrc":"4625:135:21","nodeType":"YulForLoop","post":{"nativeSrc":"4649:23:21","nodeType":"YulBlock","src":"4649:23:21","statements":[{"nativeSrc":"4651:19:21","nodeType":"YulAssignment","src":"4651:19:21","value":{"arguments":[{"name":"src","nativeSrc":"4662:3:21","nodeType":"YulIdentifier","src":"4662:3:21"},{"name":"_1","nativeSrc":"4667:2:21","nodeType":"YulIdentifier","src":"4667:2:21"}],"functionName":{"name":"add","nativeSrc":"4658:3:21","nodeType":"YulIdentifier","src":"4658:3:21"},"nativeSrc":"4658:12:21","nodeType":"YulFunctionCall","src":"4658:12:21"},"variableNames":[{"name":"src","nativeSrc":"4651:3:21","nodeType":"YulIdentifier","src":"4651:3:21"}]}]},"pre":{"nativeSrc":"4629:3:21","nodeType":"YulBlock","src":"4629:3:21","statements":[]},"src":"4625:135:21"},{"nativeSrc":"4769:16:21","nodeType":"YulAssignment","src":"4769:16:21","value":{"name":"memPtr","nativeSrc":"4779:6:21","nodeType":"YulIdentifier","src":"4779:6:21"},"variableNames":[{"name":"value0","nativeSrc":"4769:6:21","nodeType":"YulIdentifier","src":"4769:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"3686:1105:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3758:9:21","nodeType":"YulTypedName","src":"3758:9:21","type":""},{"name":"dataEnd","nativeSrc":"3769:7:21","nodeType":"YulTypedName","src":"3769:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3781:6:21","nodeType":"YulTypedName","src":"3781:6:21","type":""}],"src":"3686:1105:21"},{"body":{"nativeSrc":"4828:95:21","nodeType":"YulBlock","src":"4828:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4845:1:21","nodeType":"YulLiteral","src":"4845:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4852:3:21","nodeType":"YulLiteral","src":"4852:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"4857:10:21","nodeType":"YulLiteral","src":"4857:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4848:3:21","nodeType":"YulIdentifier","src":"4848:3:21"},"nativeSrc":"4848:20:21","nodeType":"YulFunctionCall","src":"4848:20:21"}],"functionName":{"name":"mstore","nativeSrc":"4838:6:21","nodeType":"YulIdentifier","src":"4838:6:21"},"nativeSrc":"4838:31:21","nodeType":"YulFunctionCall","src":"4838:31:21"},"nativeSrc":"4838:31:21","nodeType":"YulExpressionStatement","src":"4838:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4885:1:21","nodeType":"YulLiteral","src":"4885:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"4888:4:21","nodeType":"YulLiteral","src":"4888:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4878:6:21","nodeType":"YulIdentifier","src":"4878:6:21"},"nativeSrc":"4878:15:21","nodeType":"YulFunctionCall","src":"4878:15:21"},"nativeSrc":"4878:15:21","nodeType":"YulExpressionStatement","src":"4878:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4909:1:21","nodeType":"YulLiteral","src":"4909:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4912:4:21","nodeType":"YulLiteral","src":"4912:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4902:6:21","nodeType":"YulIdentifier","src":"4902:6:21"},"nativeSrc":"4902:15:21","nodeType":"YulFunctionCall","src":"4902:15:21"},"nativeSrc":"4902:15:21","nodeType":"YulExpressionStatement","src":"4902:15:21"}]},"name":"panic_error_0x11","nativeSrc":"4796:127:21","nodeType":"YulFunctionDefinition","src":"4796:127:21"},{"body":{"nativeSrc":"4977:79:21","nodeType":"YulBlock","src":"4977:79:21","statements":[{"nativeSrc":"4987:17:21","nodeType":"YulAssignment","src":"4987:17:21","value":{"arguments":[{"name":"x","nativeSrc":"4999:1:21","nodeType":"YulIdentifier","src":"4999:1:21"},{"name":"y","nativeSrc":"5002:1:21","nodeType":"YulIdentifier","src":"5002:1:21"}],"functionName":{"name":"sub","nativeSrc":"4995:3:21","nodeType":"YulIdentifier","src":"4995:3:21"},"nativeSrc":"4995:9:21","nodeType":"YulFunctionCall","src":"4995:9:21"},"variableNames":[{"name":"diff","nativeSrc":"4987:4:21","nodeType":"YulIdentifier","src":"4987:4:21"}]},{"body":{"nativeSrc":"5028:22:21","nodeType":"YulBlock","src":"5028:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5030:16:21","nodeType":"YulIdentifier","src":"5030:16:21"},"nativeSrc":"5030:18:21","nodeType":"YulFunctionCall","src":"5030:18:21"},"nativeSrc":"5030:18:21","nodeType":"YulExpressionStatement","src":"5030:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"5019:4:21","nodeType":"YulIdentifier","src":"5019:4:21"},{"name":"x","nativeSrc":"5025:1:21","nodeType":"YulIdentifier","src":"5025:1:21"}],"functionName":{"name":"gt","nativeSrc":"5016:2:21","nodeType":"YulIdentifier","src":"5016:2:21"},"nativeSrc":"5016:11:21","nodeType":"YulFunctionCall","src":"5016:11:21"},"nativeSrc":"5013:37:21","nodeType":"YulIf","src":"5013:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"4928:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4959:1:21","nodeType":"YulTypedName","src":"4959:1:21","type":""},{"name":"y","nativeSrc":"4962:1:21","nodeType":"YulTypedName","src":"4962:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"4968:4:21","nodeType":"YulTypedName","src":"4968:4:21","type":""}],"src":"4928:128:21"},{"body":{"nativeSrc":"5235:172:21","nodeType":"YulBlock","src":"5235:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5252:9:21","nodeType":"YulIdentifier","src":"5252:9:21"},{"kind":"number","nativeSrc":"5263:2:21","nodeType":"YulLiteral","src":"5263:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5245:6:21","nodeType":"YulIdentifier","src":"5245:6:21"},"nativeSrc":"5245:21:21","nodeType":"YulFunctionCall","src":"5245:21:21"},"nativeSrc":"5245:21:21","nodeType":"YulExpressionStatement","src":"5245:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5286:9:21","nodeType":"YulIdentifier","src":"5286:9:21"},{"kind":"number","nativeSrc":"5297:2:21","nodeType":"YulLiteral","src":"5297:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5282:3:21","nodeType":"YulIdentifier","src":"5282:3:21"},"nativeSrc":"5282:18:21","nodeType":"YulFunctionCall","src":"5282:18:21"},{"kind":"number","nativeSrc":"5302:2:21","nodeType":"YulLiteral","src":"5302:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"5275:6:21","nodeType":"YulIdentifier","src":"5275:6:21"},"nativeSrc":"5275:30:21","nodeType":"YulFunctionCall","src":"5275:30:21"},"nativeSrc":"5275:30:21","nodeType":"YulExpressionStatement","src":"5275:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5325:9:21","nodeType":"YulIdentifier","src":"5325:9:21"},{"kind":"number","nativeSrc":"5336:2:21","nodeType":"YulLiteral","src":"5336:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5321:3:21","nodeType":"YulIdentifier","src":"5321:3:21"},"nativeSrc":"5321:18:21","nodeType":"YulFunctionCall","src":"5321:18:21"},{"hexValue":"496e76616c696420726f757465722061646472657373","kind":"string","nativeSrc":"5341:24:21","nodeType":"YulLiteral","src":"5341:24:21","type":"","value":"Invalid router address"}],"functionName":{"name":"mstore","nativeSrc":"5314:6:21","nodeType":"YulIdentifier","src":"5314:6:21"},"nativeSrc":"5314:52:21","nodeType":"YulFunctionCall","src":"5314:52:21"},"nativeSrc":"5314:52:21","nodeType":"YulExpressionStatement","src":"5314:52:21"},{"nativeSrc":"5375:26:21","nodeType":"YulAssignment","src":"5375:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5387:9:21","nodeType":"YulIdentifier","src":"5387:9:21"},{"kind":"number","nativeSrc":"5398:2:21","nodeType":"YulLiteral","src":"5398:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5383:3:21","nodeType":"YulIdentifier","src":"5383:3:21"},"nativeSrc":"5383:18:21","nodeType":"YulFunctionCall","src":"5383:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5375:4:21","nodeType":"YulIdentifier","src":"5375:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5061:346:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5212:9:21","nodeType":"YulTypedName","src":"5212:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5226:4:21","nodeType":"YulTypedName","src":"5226:4:21","type":""}],"src":"5061:346:21"},{"body":{"nativeSrc":"5586:170:21","nodeType":"YulBlock","src":"5586:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5603:9:21","nodeType":"YulIdentifier","src":"5603:9:21"},{"kind":"number","nativeSrc":"5614:2:21","nodeType":"YulLiteral","src":"5614:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5596:6:21","nodeType":"YulIdentifier","src":"5596:6:21"},"nativeSrc":"5596:21:21","nodeType":"YulFunctionCall","src":"5596:21:21"},"nativeSrc":"5596:21:21","nodeType":"YulExpressionStatement","src":"5596:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5637:9:21","nodeType":"YulIdentifier","src":"5637:9:21"},{"kind":"number","nativeSrc":"5648:2:21","nodeType":"YulLiteral","src":"5648:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5633:3:21","nodeType":"YulIdentifier","src":"5633:3:21"},"nativeSrc":"5633:18:21","nodeType":"YulFunctionCall","src":"5633:18:21"},{"kind":"number","nativeSrc":"5653:2:21","nodeType":"YulLiteral","src":"5653:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"5626:6:21","nodeType":"YulIdentifier","src":"5626:6:21"},"nativeSrc":"5626:30:21","nodeType":"YulFunctionCall","src":"5626:30:21"},"nativeSrc":"5626:30:21","nodeType":"YulExpressionStatement","src":"5626:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5676:9:21","nodeType":"YulIdentifier","src":"5676:9:21"},{"kind":"number","nativeSrc":"5687:2:21","nodeType":"YulLiteral","src":"5687:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5672:3:21","nodeType":"YulIdentifier","src":"5672:3:21"},"nativeSrc":"5672:18:21","nodeType":"YulFunctionCall","src":"5672:18:21"},{"hexValue":"496e76616c696420574d4f4e2061646472657373","kind":"string","nativeSrc":"5692:22:21","nodeType":"YulLiteral","src":"5692:22:21","type":"","value":"Invalid WMON address"}],"functionName":{"name":"mstore","nativeSrc":"5665:6:21","nodeType":"YulIdentifier","src":"5665:6:21"},"nativeSrc":"5665:50:21","nodeType":"YulFunctionCall","src":"5665:50:21"},"nativeSrc":"5665:50:21","nodeType":"YulExpressionStatement","src":"5665:50:21"},{"nativeSrc":"5724:26:21","nodeType":"YulAssignment","src":"5724:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5736:9:21","nodeType":"YulIdentifier","src":"5736:9:21"},{"kind":"number","nativeSrc":"5747:2:21","nodeType":"YulLiteral","src":"5747:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5732:3:21","nodeType":"YulIdentifier","src":"5732:3:21"},"nativeSrc":"5732:18:21","nodeType":"YulFunctionCall","src":"5732:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5724:4:21","nodeType":"YulIdentifier","src":"5724:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5412:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5563:9:21","nodeType":"YulTypedName","src":"5563:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5577:4:21","nodeType":"YulTypedName","src":"5577:4:21","type":""}],"src":"5412:344:21"},{"body":{"nativeSrc":"5935:228:21","nodeType":"YulBlock","src":"5935:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5952:9:21","nodeType":"YulIdentifier","src":"5952:9:21"},{"kind":"number","nativeSrc":"5963:2:21","nodeType":"YulLiteral","src":"5963:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5945:6:21","nodeType":"YulIdentifier","src":"5945:6:21"},"nativeSrc":"5945:21:21","nodeType":"YulFunctionCall","src":"5945:21:21"},"nativeSrc":"5945:21:21","nodeType":"YulExpressionStatement","src":"5945:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5986:9:21","nodeType":"YulIdentifier","src":"5986:9:21"},{"kind":"number","nativeSrc":"5997:2:21","nodeType":"YulLiteral","src":"5997:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5982:3:21","nodeType":"YulIdentifier","src":"5982:3:21"},"nativeSrc":"5982:18:21","nodeType":"YulFunctionCall","src":"5982:18:21"},{"kind":"number","nativeSrc":"6002:2:21","nodeType":"YulLiteral","src":"6002:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"5975:6:21","nodeType":"YulIdentifier","src":"5975:6:21"},"nativeSrc":"5975:30:21","nodeType":"YulFunctionCall","src":"5975:30:21"},"nativeSrc":"5975:30:21","nodeType":"YulExpressionStatement","src":"5975:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6025:9:21","nodeType":"YulIdentifier","src":"6025:9:21"},{"kind":"number","nativeSrc":"6036:2:21","nodeType":"YulLiteral","src":"6036:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6021:3:21","nodeType":"YulIdentifier","src":"6021:3:21"},"nativeSrc":"6021:18:21","nodeType":"YulFunctionCall","src":"6021:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"6041:34:21","nodeType":"YulLiteral","src":"6041:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"6014:6:21","nodeType":"YulIdentifier","src":"6014:6:21"},"nativeSrc":"6014:62:21","nodeType":"YulFunctionCall","src":"6014:62:21"},"nativeSrc":"6014:62:21","nodeType":"YulExpressionStatement","src":"6014:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6096:9:21","nodeType":"YulIdentifier","src":"6096:9:21"},{"kind":"number","nativeSrc":"6107:2:21","nodeType":"YulLiteral","src":"6107:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6092:3:21","nodeType":"YulIdentifier","src":"6092:3:21"},"nativeSrc":"6092:18:21","nodeType":"YulFunctionCall","src":"6092:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"6112:8:21","nodeType":"YulLiteral","src":"6112:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"6085:6:21","nodeType":"YulIdentifier","src":"6085:6:21"},"nativeSrc":"6085:36:21","nodeType":"YulFunctionCall","src":"6085:36:21"},"nativeSrc":"6085:36:21","nodeType":"YulExpressionStatement","src":"6085:36:21"},{"nativeSrc":"6130:27:21","nodeType":"YulAssignment","src":"6130:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6142:9:21","nodeType":"YulIdentifier","src":"6142:9:21"},{"kind":"number","nativeSrc":"6153:3:21","nodeType":"YulLiteral","src":"6153:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6138:3:21","nodeType":"YulIdentifier","src":"6138:3:21"},"nativeSrc":"6138:19:21","nodeType":"YulFunctionCall","src":"6138:19:21"},"variableNames":[{"name":"tail","nativeSrc":"6130:4:21","nodeType":"YulIdentifier","src":"6130:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5761:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5912:9:21","nodeType":"YulTypedName","src":"5912:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5926:4:21","nodeType":"YulTypedName","src":"5926:4:21","type":""}],"src":"5761:402:21"},{"body":{"nativeSrc":"6342:168:21","nodeType":"YulBlock","src":"6342:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6359:9:21","nodeType":"YulIdentifier","src":"6359:9:21"},{"kind":"number","nativeSrc":"6370:2:21","nodeType":"YulLiteral","src":"6370:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6352:6:21","nodeType":"YulIdentifier","src":"6352:6:21"},"nativeSrc":"6352:21:21","nodeType":"YulFunctionCall","src":"6352:21:21"},"nativeSrc":"6352:21:21","nodeType":"YulExpressionStatement","src":"6352:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6393:9:21","nodeType":"YulIdentifier","src":"6393:9:21"},{"kind":"number","nativeSrc":"6404:2:21","nodeType":"YulLiteral","src":"6404:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6389:3:21","nodeType":"YulIdentifier","src":"6389:3:21"},"nativeSrc":"6389:18:21","nodeType":"YulFunctionCall","src":"6389:18:21"},{"kind":"number","nativeSrc":"6409:2:21","nodeType":"YulLiteral","src":"6409:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"6382:6:21","nodeType":"YulIdentifier","src":"6382:6:21"},"nativeSrc":"6382:30:21","nodeType":"YulFunctionCall","src":"6382:30:21"},"nativeSrc":"6382:30:21","nodeType":"YulExpressionStatement","src":"6382:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6432:9:21","nodeType":"YulIdentifier","src":"6432:9:21"},{"kind":"number","nativeSrc":"6443:2:21","nodeType":"YulLiteral","src":"6443:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6428:3:21","nodeType":"YulIdentifier","src":"6428:3:21"},"nativeSrc":"6428:18:21","nodeType":"YulFunctionCall","src":"6428:18:21"},{"hexValue":"416d6f756e74206d757374206265203e2030","kind":"string","nativeSrc":"6448:20:21","nodeType":"YulLiteral","src":"6448:20:21","type":"","value":"Amount must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"6421:6:21","nodeType":"YulIdentifier","src":"6421:6:21"},"nativeSrc":"6421:48:21","nodeType":"YulFunctionCall","src":"6421:48:21"},"nativeSrc":"6421:48:21","nodeType":"YulExpressionStatement","src":"6421:48:21"},{"nativeSrc":"6478:26:21","nodeType":"YulAssignment","src":"6478:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6490:9:21","nodeType":"YulIdentifier","src":"6490:9:21"},{"kind":"number","nativeSrc":"6501:2:21","nodeType":"YulLiteral","src":"6501:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6486:3:21","nodeType":"YulIdentifier","src":"6486:3:21"},"nativeSrc":"6486:18:21","nodeType":"YulFunctionCall","src":"6486:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6478:4:21","nodeType":"YulIdentifier","src":"6478:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6168:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6319:9:21","nodeType":"YulTypedName","src":"6319:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6333:4:21","nodeType":"YulTypedName","src":"6333:4:21","type":""}],"src":"6168:342:21"},{"body":{"nativeSrc":"6689:161:21","nodeType":"YulBlock","src":"6689:161:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6706:9:21","nodeType":"YulIdentifier","src":"6706:9:21"},{"kind":"number","nativeSrc":"6717:2:21","nodeType":"YulLiteral","src":"6717:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6699:6:21","nodeType":"YulIdentifier","src":"6699:6:21"},"nativeSrc":"6699:21:21","nodeType":"YulFunctionCall","src":"6699:21:21"},"nativeSrc":"6699:21:21","nodeType":"YulExpressionStatement","src":"6699:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6740:9:21","nodeType":"YulIdentifier","src":"6740:9:21"},{"kind":"number","nativeSrc":"6751:2:21","nodeType":"YulLiteral","src":"6751:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6736:3:21","nodeType":"YulIdentifier","src":"6736:3:21"},"nativeSrc":"6736:18:21","nodeType":"YulFunctionCall","src":"6736:18:21"},{"kind":"number","nativeSrc":"6756:2:21","nodeType":"YulLiteral","src":"6756:2:21","type":"","value":"11"}],"functionName":{"name":"mstore","nativeSrc":"6729:6:21","nodeType":"YulIdentifier","src":"6729:6:21"},"nativeSrc":"6729:30:21","nodeType":"YulFunctionCall","src":"6729:30:21"},"nativeSrc":"6729:30:21","nodeType":"YulExpressionStatement","src":"6729:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6779:9:21","nodeType":"YulIdentifier","src":"6779:9:21"},{"kind":"number","nativeSrc":"6790:2:21","nodeType":"YulLiteral","src":"6790:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6775:3:21","nodeType":"YulIdentifier","src":"6775:3:21"},"nativeSrc":"6775:18:21","nodeType":"YulFunctionCall","src":"6775:18:21"},{"hexValue":"53616d6520746f6b656e73","kind":"string","nativeSrc":"6795:13:21","nodeType":"YulLiteral","src":"6795:13:21","type":"","value":"Same tokens"}],"functionName":{"name":"mstore","nativeSrc":"6768:6:21","nodeType":"YulIdentifier","src":"6768:6:21"},"nativeSrc":"6768:41:21","nodeType":"YulFunctionCall","src":"6768:41:21"},"nativeSrc":"6768:41:21","nodeType":"YulExpressionStatement","src":"6768:41:21"},{"nativeSrc":"6818:26:21","nodeType":"YulAssignment","src":"6818:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6830:9:21","nodeType":"YulIdentifier","src":"6830:9:21"},{"kind":"number","nativeSrc":"6841:2:21","nodeType":"YulLiteral","src":"6841:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6826:3:21","nodeType":"YulIdentifier","src":"6826:3:21"},"nativeSrc":"6826:18:21","nodeType":"YulFunctionCall","src":"6826:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6818:4:21","nodeType":"YulIdentifier","src":"6818:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6515:335:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6666:9:21","nodeType":"YulTypedName","src":"6666:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6680:4:21","nodeType":"YulTypedName","src":"6680:4:21","type":""}],"src":"6515:335:21"},{"body":{"nativeSrc":"7029:168:21","nodeType":"YulBlock","src":"7029:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7046:9:21","nodeType":"YulIdentifier","src":"7046:9:21"},{"kind":"number","nativeSrc":"7057:2:21","nodeType":"YulLiteral","src":"7057:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7039:6:21","nodeType":"YulIdentifier","src":"7039:6:21"},"nativeSrc":"7039:21:21","nodeType":"YulFunctionCall","src":"7039:21:21"},"nativeSrc":"7039:21:21","nodeType":"YulExpressionStatement","src":"7039:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7080:9:21","nodeType":"YulIdentifier","src":"7080:9:21"},{"kind":"number","nativeSrc":"7091:2:21","nodeType":"YulLiteral","src":"7091:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7076:3:21","nodeType":"YulIdentifier","src":"7076:3:21"},"nativeSrc":"7076:18:21","nodeType":"YulFunctionCall","src":"7076:18:21"},{"kind":"number","nativeSrc":"7096:2:21","nodeType":"YulLiteral","src":"7096:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"7069:6:21","nodeType":"YulIdentifier","src":"7069:6:21"},"nativeSrc":"7069:30:21","nodeType":"YulFunctionCall","src":"7069:30:21"},"nativeSrc":"7069:30:21","nodeType":"YulExpressionStatement","src":"7069:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7119:9:21","nodeType":"YulIdentifier","src":"7119:9:21"},{"kind":"number","nativeSrc":"7130:2:21","nodeType":"YulLiteral","src":"7130:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7115:3:21","nodeType":"YulIdentifier","src":"7115:3:21"},"nativeSrc":"7115:18:21","nodeType":"YulFunctionCall","src":"7115:18:21"},{"hexValue":"496e76616c6964204d4f4e20616d6f756e74","kind":"string","nativeSrc":"7135:20:21","nodeType":"YulLiteral","src":"7135:20:21","type":"","value":"Invalid MON amount"}],"functionName":{"name":"mstore","nativeSrc":"7108:6:21","nodeType":"YulIdentifier","src":"7108:6:21"},"nativeSrc":"7108:48:21","nodeType":"YulFunctionCall","src":"7108:48:21"},"nativeSrc":"7108:48:21","nodeType":"YulExpressionStatement","src":"7108:48:21"},{"nativeSrc":"7165:26:21","nodeType":"YulAssignment","src":"7165:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7177:9:21","nodeType":"YulIdentifier","src":"7177:9:21"},{"kind":"number","nativeSrc":"7188:2:21","nodeType":"YulLiteral","src":"7188:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7173:3:21","nodeType":"YulIdentifier","src":"7173:3:21"},"nativeSrc":"7173:18:21","nodeType":"YulFunctionCall","src":"7173:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7165:4:21","nodeType":"YulIdentifier","src":"7165:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6855:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7006:9:21","nodeType":"YulTypedName","src":"7006:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7020:4:21","nodeType":"YulTypedName","src":"7020:4:21","type":""}],"src":"6855:342:21"},{"body":{"nativeSrc":"7376:233:21","nodeType":"YulBlock","src":"7376:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7393:9:21","nodeType":"YulIdentifier","src":"7393:9:21"},{"kind":"number","nativeSrc":"7404:2:21","nodeType":"YulLiteral","src":"7404:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7386:6:21","nodeType":"YulIdentifier","src":"7386:6:21"},"nativeSrc":"7386:21:21","nodeType":"YulFunctionCall","src":"7386:21:21"},"nativeSrc":"7386:21:21","nodeType":"YulExpressionStatement","src":"7386:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7427:9:21","nodeType":"YulIdentifier","src":"7427:9:21"},{"kind":"number","nativeSrc":"7438:2:21","nodeType":"YulLiteral","src":"7438:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7423:3:21","nodeType":"YulIdentifier","src":"7423:3:21"},"nativeSrc":"7423:18:21","nodeType":"YulFunctionCall","src":"7423:18:21"},{"kind":"number","nativeSrc":"7443:2:21","nodeType":"YulLiteral","src":"7443:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"7416:6:21","nodeType":"YulIdentifier","src":"7416:6:21"},"nativeSrc":"7416:30:21","nodeType":"YulFunctionCall","src":"7416:30:21"},"nativeSrc":"7416:30:21","nodeType":"YulExpressionStatement","src":"7416:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7466:9:21","nodeType":"YulIdentifier","src":"7466:9:21"},{"kind":"number","nativeSrc":"7477:2:21","nodeType":"YulLiteral","src":"7477:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7462:3:21","nodeType":"YulIdentifier","src":"7462:3:21"},"nativeSrc":"7462:18:21","nodeType":"YulFunctionCall","src":"7462:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nativeSrc":"7482:34:21","nodeType":"YulLiteral","src":"7482:34:21","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nativeSrc":"7455:6:21","nodeType":"YulIdentifier","src":"7455:6:21"},"nativeSrc":"7455:62:21","nodeType":"YulFunctionCall","src":"7455:62:21"},"nativeSrc":"7455:62:21","nodeType":"YulExpressionStatement","src":"7455:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7537:9:21","nodeType":"YulIdentifier","src":"7537:9:21"},{"kind":"number","nativeSrc":"7548:2:21","nodeType":"YulLiteral","src":"7548:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7533:3:21","nodeType":"YulIdentifier","src":"7533:3:21"},"nativeSrc":"7533:18:21","nodeType":"YulFunctionCall","src":"7533:18:21"},{"hexValue":"6e697469616c697a696e67","kind":"string","nativeSrc":"7553:13:21","nodeType":"YulLiteral","src":"7553:13:21","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nativeSrc":"7526:6:21","nodeType":"YulIdentifier","src":"7526:6:21"},"nativeSrc":"7526:41:21","nodeType":"YulFunctionCall","src":"7526:41:21"},"nativeSrc":"7526:41:21","nodeType":"YulExpressionStatement","src":"7526:41:21"},{"nativeSrc":"7576:27:21","nodeType":"YulAssignment","src":"7576:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7588:9:21","nodeType":"YulIdentifier","src":"7588:9:21"},{"kind":"number","nativeSrc":"7599:3:21","nodeType":"YulLiteral","src":"7599:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7584:3:21","nodeType":"YulIdentifier","src":"7584:3:21"},"nativeSrc":"7584:19:21","nodeType":"YulFunctionCall","src":"7584:19:21"},"variableNames":[{"name":"tail","nativeSrc":"7576:4:21","nodeType":"YulIdentifier","src":"7576:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7202:407:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7353:9:21","nodeType":"YulTypedName","src":"7353:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7367:4:21","nodeType":"YulTypedName","src":"7367:4:21","type":""}],"src":"7202:407:21"},{"body":{"nativeSrc":"7788:182:21","nodeType":"YulBlock","src":"7788:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7805:9:21","nodeType":"YulIdentifier","src":"7805:9:21"},{"kind":"number","nativeSrc":"7816:2:21","nodeType":"YulLiteral","src":"7816:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7798:6:21","nodeType":"YulIdentifier","src":"7798:6:21"},"nativeSrc":"7798:21:21","nodeType":"YulFunctionCall","src":"7798:21:21"},"nativeSrc":"7798:21:21","nodeType":"YulExpressionStatement","src":"7798:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7839:9:21","nodeType":"YulIdentifier","src":"7839:9:21"},{"kind":"number","nativeSrc":"7850:2:21","nodeType":"YulLiteral","src":"7850:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7835:3:21","nodeType":"YulIdentifier","src":"7835:3:21"},"nativeSrc":"7835:18:21","nodeType":"YulFunctionCall","src":"7835:18:21"},{"kind":"number","nativeSrc":"7855:2:21","nodeType":"YulLiteral","src":"7855:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7828:6:21","nodeType":"YulIdentifier","src":"7828:6:21"},"nativeSrc":"7828:30:21","nodeType":"YulFunctionCall","src":"7828:30:21"},"nativeSrc":"7828:30:21","nodeType":"YulExpressionStatement","src":"7828:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7878:9:21","nodeType":"YulIdentifier","src":"7878:9:21"},{"kind":"number","nativeSrc":"7889:2:21","nodeType":"YulLiteral","src":"7889:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7874:3:21","nodeType":"YulIdentifier","src":"7874:3:21"},"nativeSrc":"7874:18:21","nodeType":"YulFunctionCall","src":"7874:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"7894:34:21","nodeType":"YulLiteral","src":"7894:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"7867:6:21","nodeType":"YulIdentifier","src":"7867:6:21"},"nativeSrc":"7867:62:21","nodeType":"YulFunctionCall","src":"7867:62:21"},"nativeSrc":"7867:62:21","nodeType":"YulExpressionStatement","src":"7867:62:21"},{"nativeSrc":"7938:26:21","nodeType":"YulAssignment","src":"7938:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7950:9:21","nodeType":"YulIdentifier","src":"7950:9:21"},{"kind":"number","nativeSrc":"7961:2:21","nodeType":"YulLiteral","src":"7961:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7946:3:21","nodeType":"YulIdentifier","src":"7946:3:21"},"nativeSrc":"7946:18:21","nodeType":"YulFunctionCall","src":"7946:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7938:4:21","nodeType":"YulIdentifier","src":"7938:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7614:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7765:9:21","nodeType":"YulTypedName","src":"7765:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7779:4:21","nodeType":"YulTypedName","src":"7779:4:21","type":""}],"src":"7614:356:21"},{"body":{"nativeSrc":"8023:77:21","nodeType":"YulBlock","src":"8023:77:21","statements":[{"nativeSrc":"8033:16:21","nodeType":"YulAssignment","src":"8033:16:21","value":{"arguments":[{"name":"x","nativeSrc":"8044:1:21","nodeType":"YulIdentifier","src":"8044:1:21"},{"name":"y","nativeSrc":"8047:1:21","nodeType":"YulIdentifier","src":"8047:1:21"}],"functionName":{"name":"add","nativeSrc":"8040:3:21","nodeType":"YulIdentifier","src":"8040:3:21"},"nativeSrc":"8040:9:21","nodeType":"YulFunctionCall","src":"8040:9:21"},"variableNames":[{"name":"sum","nativeSrc":"8033:3:21","nodeType":"YulIdentifier","src":"8033:3:21"}]},{"body":{"nativeSrc":"8072:22:21","nodeType":"YulBlock","src":"8072:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8074:16:21","nodeType":"YulIdentifier","src":"8074:16:21"},"nativeSrc":"8074:18:21","nodeType":"YulFunctionCall","src":"8074:18:21"},"nativeSrc":"8074:18:21","nodeType":"YulExpressionStatement","src":"8074:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8064:1:21","nodeType":"YulIdentifier","src":"8064:1:21"},{"name":"sum","nativeSrc":"8067:3:21","nodeType":"YulIdentifier","src":"8067:3:21"}],"functionName":{"name":"gt","nativeSrc":"8061:2:21","nodeType":"YulIdentifier","src":"8061:2:21"},"nativeSrc":"8061:10:21","nodeType":"YulFunctionCall","src":"8061:10:21"},"nativeSrc":"8058:36:21","nodeType":"YulIf","src":"8058:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"7975:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8006:1:21","nodeType":"YulTypedName","src":"8006:1:21","type":""},{"name":"y","nativeSrc":"8009:1:21","nodeType":"YulTypedName","src":"8009:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"8015:3:21","nodeType":"YulTypedName","src":"8015:3:21","type":""}],"src":"7975:125:21"},{"body":{"nativeSrc":"8340:267:21","nodeType":"YulBlock","src":"8340:267:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8357:9:21","nodeType":"YulIdentifier","src":"8357:9:21"},{"name":"value0","nativeSrc":"8368:6:21","nodeType":"YulIdentifier","src":"8368:6:21"}],"functionName":{"name":"mstore","nativeSrc":"8350:6:21","nodeType":"YulIdentifier","src":"8350:6:21"},"nativeSrc":"8350:25:21","nodeType":"YulFunctionCall","src":"8350:25:21"},"nativeSrc":"8350:25:21","nodeType":"YulExpressionStatement","src":"8350:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8395:9:21","nodeType":"YulIdentifier","src":"8395:9:21"},{"kind":"number","nativeSrc":"8406:2:21","nodeType":"YulLiteral","src":"8406:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8391:3:21","nodeType":"YulIdentifier","src":"8391:3:21"},"nativeSrc":"8391:18:21","nodeType":"YulFunctionCall","src":"8391:18:21"},{"kind":"number","nativeSrc":"8411:3:21","nodeType":"YulLiteral","src":"8411:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"8384:6:21","nodeType":"YulIdentifier","src":"8384:6:21"},"nativeSrc":"8384:31:21","nodeType":"YulFunctionCall","src":"8384:31:21"},"nativeSrc":"8384:31:21","nodeType":"YulExpressionStatement","src":"8384:31:21"},{"nativeSrc":"8424:65:21","nodeType":"YulAssignment","src":"8424:65:21","value":{"arguments":[{"name":"value1","nativeSrc":"8461:6:21","nodeType":"YulIdentifier","src":"8461:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8473:9:21","nodeType":"YulIdentifier","src":"8473:9:21"},{"kind":"number","nativeSrc":"8484:3:21","nodeType":"YulLiteral","src":"8484:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8469:3:21","nodeType":"YulIdentifier","src":"8469:3:21"},"nativeSrc":"8469:19:21","nodeType":"YulFunctionCall","src":"8469:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"8432:28:21","nodeType":"YulIdentifier","src":"8432:28:21"},"nativeSrc":"8432:57:21","nodeType":"YulFunctionCall","src":"8432:57:21"},"variableNames":[{"name":"tail","nativeSrc":"8424:4:21","nodeType":"YulIdentifier","src":"8424:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8509:9:21","nodeType":"YulIdentifier","src":"8509:9:21"},{"kind":"number","nativeSrc":"8520:2:21","nodeType":"YulLiteral","src":"8520:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8505:3:21","nodeType":"YulIdentifier","src":"8505:3:21"},"nativeSrc":"8505:18:21","nodeType":"YulFunctionCall","src":"8505:18:21"},{"arguments":[{"name":"value2","nativeSrc":"8529:6:21","nodeType":"YulIdentifier","src":"8529:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8545:3:21","nodeType":"YulLiteral","src":"8545:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"8550:1:21","nodeType":"YulLiteral","src":"8550:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8541:3:21","nodeType":"YulIdentifier","src":"8541:3:21"},"nativeSrc":"8541:11:21","nodeType":"YulFunctionCall","src":"8541:11:21"},{"kind":"number","nativeSrc":"8554:1:21","nodeType":"YulLiteral","src":"8554:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8537:3:21","nodeType":"YulIdentifier","src":"8537:3:21"},"nativeSrc":"8537:19:21","nodeType":"YulFunctionCall","src":"8537:19:21"}],"functionName":{"name":"and","nativeSrc":"8525:3:21","nodeType":"YulIdentifier","src":"8525:3:21"},"nativeSrc":"8525:32:21","nodeType":"YulFunctionCall","src":"8525:32:21"}],"functionName":{"name":"mstore","nativeSrc":"8498:6:21","nodeType":"YulIdentifier","src":"8498:6:21"},"nativeSrc":"8498:60:21","nodeType":"YulFunctionCall","src":"8498:60:21"},"nativeSrc":"8498:60:21","nodeType":"YulExpressionStatement","src":"8498:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8578:9:21","nodeType":"YulIdentifier","src":"8578:9:21"},{"kind":"number","nativeSrc":"8589:2:21","nodeType":"YulLiteral","src":"8589:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8574:3:21","nodeType":"YulIdentifier","src":"8574:3:21"},"nativeSrc":"8574:18:21","nodeType":"YulFunctionCall","src":"8574:18:21"},{"name":"value3","nativeSrc":"8594:6:21","nodeType":"YulIdentifier","src":"8594:6:21"}],"functionName":{"name":"mstore","nativeSrc":"8567:6:21","nodeType":"YulIdentifier","src":"8567:6:21"},"nativeSrc":"8567:34:21","nodeType":"YulFunctionCall","src":"8567:34:21"},"nativeSrc":"8567:34:21","nodeType":"YulExpressionStatement","src":"8567:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nativeSrc":"8105:502:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8285:9:21","nodeType":"YulTypedName","src":"8285:9:21","type":""},{"name":"value3","nativeSrc":"8296:6:21","nodeType":"YulTypedName","src":"8296:6:21","type":""},{"name":"value2","nativeSrc":"8304:6:21","nodeType":"YulTypedName","src":"8304:6:21","type":""},{"name":"value1","nativeSrc":"8312:6:21","nodeType":"YulTypedName","src":"8312:6:21","type":""},{"name":"value0","nativeSrc":"8320:6:21","nodeType":"YulTypedName","src":"8320:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8331:4:21","nodeType":"YulTypedName","src":"8331:4:21","type":""}],"src":"8105:502:21"},{"body":{"nativeSrc":"8741:119:21","nodeType":"YulBlock","src":"8741:119:21","statements":[{"nativeSrc":"8751:26:21","nodeType":"YulAssignment","src":"8751:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8763:9:21","nodeType":"YulIdentifier","src":"8763:9:21"},{"kind":"number","nativeSrc":"8774:2:21","nodeType":"YulLiteral","src":"8774:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8759:3:21","nodeType":"YulIdentifier","src":"8759:3:21"},"nativeSrc":"8759:18:21","nodeType":"YulFunctionCall","src":"8759:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8751:4:21","nodeType":"YulIdentifier","src":"8751:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8793:9:21","nodeType":"YulIdentifier","src":"8793:9:21"},{"name":"value0","nativeSrc":"8804:6:21","nodeType":"YulIdentifier","src":"8804:6:21"}],"functionName":{"name":"mstore","nativeSrc":"8786:6:21","nodeType":"YulIdentifier","src":"8786:6:21"},"nativeSrc":"8786:25:21","nodeType":"YulFunctionCall","src":"8786:25:21"},"nativeSrc":"8786:25:21","nodeType":"YulExpressionStatement","src":"8786:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8831:9:21","nodeType":"YulIdentifier","src":"8831:9:21"},{"kind":"number","nativeSrc":"8842:2:21","nodeType":"YulLiteral","src":"8842:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8827:3:21","nodeType":"YulIdentifier","src":"8827:3:21"},"nativeSrc":"8827:18:21","nodeType":"YulFunctionCall","src":"8827:18:21"},{"name":"value1","nativeSrc":"8847:6:21","nodeType":"YulIdentifier","src":"8847:6:21"}],"functionName":{"name":"mstore","nativeSrc":"8820:6:21","nodeType":"YulIdentifier","src":"8820:6:21"},"nativeSrc":"8820:34:21","nodeType":"YulFunctionCall","src":"8820:34:21"},"nativeSrc":"8820:34:21","nodeType":"YulExpressionStatement","src":"8820:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8612:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8702:9:21","nodeType":"YulTypedName","src":"8702:9:21","type":""},{"name":"value1","nativeSrc":"8713:6:21","nodeType":"YulTypedName","src":"8713:6:21","type":""},{"name":"value0","nativeSrc":"8721:6:21","nodeType":"YulTypedName","src":"8721:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8732:4:21","nodeType":"YulTypedName","src":"8732:4:21","type":""}],"src":"8612:248:21"},{"body":{"nativeSrc":"9022:218:21","nodeType":"YulBlock","src":"9022:218:21","statements":[{"nativeSrc":"9032:26:21","nodeType":"YulAssignment","src":"9032:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9044:9:21","nodeType":"YulIdentifier","src":"9044:9:21"},{"kind":"number","nativeSrc":"9055:2:21","nodeType":"YulLiteral","src":"9055:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9040:3:21","nodeType":"YulIdentifier","src":"9040:3:21"},"nativeSrc":"9040:18:21","nodeType":"YulFunctionCall","src":"9040:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9032:4:21","nodeType":"YulIdentifier","src":"9032:4:21"}]},{"nativeSrc":"9067:29:21","nodeType":"YulVariableDeclaration","src":"9067:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9085:3:21","nodeType":"YulLiteral","src":"9085:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"9090:1:21","nodeType":"YulLiteral","src":"9090:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9081:3:21","nodeType":"YulIdentifier","src":"9081:3:21"},"nativeSrc":"9081:11:21","nodeType":"YulFunctionCall","src":"9081:11:21"},{"kind":"number","nativeSrc":"9094:1:21","nodeType":"YulLiteral","src":"9094:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9077:3:21","nodeType":"YulIdentifier","src":"9077:3:21"},"nativeSrc":"9077:19:21","nodeType":"YulFunctionCall","src":"9077:19:21"},"variables":[{"name":"_1","nativeSrc":"9071:2:21","nodeType":"YulTypedName","src":"9071:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9112:9:21","nodeType":"YulIdentifier","src":"9112:9:21"},{"arguments":[{"name":"value0","nativeSrc":"9127:6:21","nodeType":"YulIdentifier","src":"9127:6:21"},{"name":"_1","nativeSrc":"9135:2:21","nodeType":"YulIdentifier","src":"9135:2:21"}],"functionName":{"name":"and","nativeSrc":"9123:3:21","nodeType":"YulIdentifier","src":"9123:3:21"},"nativeSrc":"9123:15:21","nodeType":"YulFunctionCall","src":"9123:15:21"}],"functionName":{"name":"mstore","nativeSrc":"9105:6:21","nodeType":"YulIdentifier","src":"9105:6:21"},"nativeSrc":"9105:34:21","nodeType":"YulFunctionCall","src":"9105:34:21"},"nativeSrc":"9105:34:21","nodeType":"YulExpressionStatement","src":"9105:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9159:9:21","nodeType":"YulIdentifier","src":"9159:9:21"},{"kind":"number","nativeSrc":"9170:2:21","nodeType":"YulLiteral","src":"9170:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9155:3:21","nodeType":"YulIdentifier","src":"9155:3:21"},"nativeSrc":"9155:18:21","nodeType":"YulFunctionCall","src":"9155:18:21"},{"arguments":[{"name":"value1","nativeSrc":"9179:6:21","nodeType":"YulIdentifier","src":"9179:6:21"},{"name":"_1","nativeSrc":"9187:2:21","nodeType":"YulIdentifier","src":"9187:2:21"}],"functionName":{"name":"and","nativeSrc":"9175:3:21","nodeType":"YulIdentifier","src":"9175:3:21"},"nativeSrc":"9175:15:21","nodeType":"YulFunctionCall","src":"9175:15:21"}],"functionName":{"name":"mstore","nativeSrc":"9148:6:21","nodeType":"YulIdentifier","src":"9148:6:21"},"nativeSrc":"9148:43:21","nodeType":"YulFunctionCall","src":"9148:43:21"},"nativeSrc":"9148:43:21","nodeType":"YulExpressionStatement","src":"9148:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9211:9:21","nodeType":"YulIdentifier","src":"9211:9:21"},{"kind":"number","nativeSrc":"9222:2:21","nodeType":"YulLiteral","src":"9222:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9207:3:21","nodeType":"YulIdentifier","src":"9207:3:21"},"nativeSrc":"9207:18:21","nodeType":"YulFunctionCall","src":"9207:18:21"},{"name":"value2","nativeSrc":"9227:6:21","nodeType":"YulIdentifier","src":"9227:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9200:6:21","nodeType":"YulIdentifier","src":"9200:6:21"},"nativeSrc":"9200:34:21","nodeType":"YulFunctionCall","src":"9200:34:21"},"nativeSrc":"9200:34:21","nodeType":"YulExpressionStatement","src":"9200:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"8865:375:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8975:9:21","nodeType":"YulTypedName","src":"8975:9:21","type":""},{"name":"value2","nativeSrc":"8986:6:21","nodeType":"YulTypedName","src":"8986:6:21","type":""},{"name":"value1","nativeSrc":"8994:6:21","nodeType":"YulTypedName","src":"8994:6:21","type":""},{"name":"value0","nativeSrc":"9002:6:21","nodeType":"YulTypedName","src":"9002:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9013:4:21","nodeType":"YulTypedName","src":"9013:4:21","type":""}],"src":"8865:375:21"},{"body":{"nativeSrc":"9323:199:21","nodeType":"YulBlock","src":"9323:199:21","statements":[{"body":{"nativeSrc":"9369:16:21","nodeType":"YulBlock","src":"9369:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9378:1:21","nodeType":"YulLiteral","src":"9378:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9381:1:21","nodeType":"YulLiteral","src":"9381:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9371:6:21","nodeType":"YulIdentifier","src":"9371:6:21"},"nativeSrc":"9371:12:21","nodeType":"YulFunctionCall","src":"9371:12:21"},"nativeSrc":"9371:12:21","nodeType":"YulExpressionStatement","src":"9371:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9344:7:21","nodeType":"YulIdentifier","src":"9344:7:21"},{"name":"headStart","nativeSrc":"9353:9:21","nodeType":"YulIdentifier","src":"9353:9:21"}],"functionName":{"name":"sub","nativeSrc":"9340:3:21","nodeType":"YulIdentifier","src":"9340:3:21"},"nativeSrc":"9340:23:21","nodeType":"YulFunctionCall","src":"9340:23:21"},{"kind":"number","nativeSrc":"9365:2:21","nodeType":"YulLiteral","src":"9365:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9336:3:21","nodeType":"YulIdentifier","src":"9336:3:21"},"nativeSrc":"9336:32:21","nodeType":"YulFunctionCall","src":"9336:32:21"},"nativeSrc":"9333:52:21","nodeType":"YulIf","src":"9333:52:21"},{"nativeSrc":"9394:29:21","nodeType":"YulVariableDeclaration","src":"9394:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9413:9:21","nodeType":"YulIdentifier","src":"9413:9:21"}],"functionName":{"name":"mload","nativeSrc":"9407:5:21","nodeType":"YulIdentifier","src":"9407:5:21"},"nativeSrc":"9407:16:21","nodeType":"YulFunctionCall","src":"9407:16:21"},"variables":[{"name":"value","nativeSrc":"9398:5:21","nodeType":"YulTypedName","src":"9398:5:21","type":""}]},{"body":{"nativeSrc":"9476:16:21","nodeType":"YulBlock","src":"9476:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9485:1:21","nodeType":"YulLiteral","src":"9485:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9488:1:21","nodeType":"YulLiteral","src":"9488:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9478:6:21","nodeType":"YulIdentifier","src":"9478:6:21"},"nativeSrc":"9478:12:21","nodeType":"YulFunctionCall","src":"9478:12:21"},"nativeSrc":"9478:12:21","nodeType":"YulExpressionStatement","src":"9478:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9445:5:21","nodeType":"YulIdentifier","src":"9445:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9466:5:21","nodeType":"YulIdentifier","src":"9466:5:21"}],"functionName":{"name":"iszero","nativeSrc":"9459:6:21","nodeType":"YulIdentifier","src":"9459:6:21"},"nativeSrc":"9459:13:21","nodeType":"YulFunctionCall","src":"9459:13:21"}],"functionName":{"name":"iszero","nativeSrc":"9452:6:21","nodeType":"YulIdentifier","src":"9452:6:21"},"nativeSrc":"9452:21:21","nodeType":"YulFunctionCall","src":"9452:21:21"}],"functionName":{"name":"eq","nativeSrc":"9442:2:21","nodeType":"YulIdentifier","src":"9442:2:21"},"nativeSrc":"9442:32:21","nodeType":"YulFunctionCall","src":"9442:32:21"}],"functionName":{"name":"iszero","nativeSrc":"9435:6:21","nodeType":"YulIdentifier","src":"9435:6:21"},"nativeSrc":"9435:40:21","nodeType":"YulFunctionCall","src":"9435:40:21"},"nativeSrc":"9432:60:21","nodeType":"YulIf","src":"9432:60:21"},{"nativeSrc":"9501:15:21","nodeType":"YulAssignment","src":"9501:15:21","value":{"name":"value","nativeSrc":"9511:5:21","nodeType":"YulIdentifier","src":"9511:5:21"},"variableNames":[{"name":"value0","nativeSrc":"9501:6:21","nodeType":"YulIdentifier","src":"9501:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9245:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9289:9:21","nodeType":"YulTypedName","src":"9289:9:21","type":""},{"name":"dataEnd","nativeSrc":"9300:7:21","nodeType":"YulTypedName","src":"9300:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9312:6:21","nodeType":"YulTypedName","src":"9312:6:21","type":""}],"src":"9245:277:21"},{"body":{"nativeSrc":"9701:170:21","nodeType":"YulBlock","src":"9701:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9718:9:21","nodeType":"YulIdentifier","src":"9718:9:21"},{"kind":"number","nativeSrc":"9729:2:21","nodeType":"YulLiteral","src":"9729:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9711:6:21","nodeType":"YulIdentifier","src":"9711:6:21"},"nativeSrc":"9711:21:21","nodeType":"YulFunctionCall","src":"9711:21:21"},"nativeSrc":"9711:21:21","nodeType":"YulExpressionStatement","src":"9711:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9752:9:21","nodeType":"YulIdentifier","src":"9752:9:21"},{"kind":"number","nativeSrc":"9763:2:21","nodeType":"YulLiteral","src":"9763:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9748:3:21","nodeType":"YulIdentifier","src":"9748:3:21"},"nativeSrc":"9748:18:21","nodeType":"YulFunctionCall","src":"9748:18:21"},{"kind":"number","nativeSrc":"9768:2:21","nodeType":"YulLiteral","src":"9768:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"9741:6:21","nodeType":"YulIdentifier","src":"9741:6:21"},"nativeSrc":"9741:30:21","nodeType":"YulFunctionCall","src":"9741:30:21"},"nativeSrc":"9741:30:21","nodeType":"YulExpressionStatement","src":"9741:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9791:9:21","nodeType":"YulIdentifier","src":"9791:9:21"},{"kind":"number","nativeSrc":"9802:2:21","nodeType":"YulLiteral","src":"9802:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9787:3:21","nodeType":"YulIdentifier","src":"9787:3:21"},"nativeSrc":"9787:18:21","nodeType":"YulFunctionCall","src":"9787:18:21"},{"hexValue":"5472616e736665722066726f6d206661696c6564","kind":"string","nativeSrc":"9807:22:21","nodeType":"YulLiteral","src":"9807:22:21","type":"","value":"Transfer from failed"}],"functionName":{"name":"mstore","nativeSrc":"9780:6:21","nodeType":"YulIdentifier","src":"9780:6:21"},"nativeSrc":"9780:50:21","nodeType":"YulFunctionCall","src":"9780:50:21"},"nativeSrc":"9780:50:21","nodeType":"YulExpressionStatement","src":"9780:50:21"},{"nativeSrc":"9839:26:21","nodeType":"YulAssignment","src":"9839:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9851:9:21","nodeType":"YulIdentifier","src":"9851:9:21"},{"kind":"number","nativeSrc":"9862:2:21","nodeType":"YulLiteral","src":"9862:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9847:3:21","nodeType":"YulIdentifier","src":"9847:3:21"},"nativeSrc":"9847:18:21","nodeType":"YulFunctionCall","src":"9847:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9839:4:21","nodeType":"YulIdentifier","src":"9839:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9527:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9678:9:21","nodeType":"YulTypedName","src":"9678:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9692:4:21","nodeType":"YulTypedName","src":"9692:4:21","type":""}],"src":"9527:344:21"},{"body":{"nativeSrc":"10005:145:21","nodeType":"YulBlock","src":"10005:145:21","statements":[{"nativeSrc":"10015:26:21","nodeType":"YulAssignment","src":"10015:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10027:9:21","nodeType":"YulIdentifier","src":"10027:9:21"},{"kind":"number","nativeSrc":"10038:2:21","nodeType":"YulLiteral","src":"10038:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10023:3:21","nodeType":"YulIdentifier","src":"10023:3:21"},"nativeSrc":"10023:18:21","nodeType":"YulFunctionCall","src":"10023:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10015:4:21","nodeType":"YulIdentifier","src":"10015:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10057:9:21","nodeType":"YulIdentifier","src":"10057:9:21"},{"arguments":[{"name":"value0","nativeSrc":"10072:6:21","nodeType":"YulIdentifier","src":"10072:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10088:3:21","nodeType":"YulLiteral","src":"10088:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"10093:1:21","nodeType":"YulLiteral","src":"10093:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10084:3:21","nodeType":"YulIdentifier","src":"10084:3:21"},"nativeSrc":"10084:11:21","nodeType":"YulFunctionCall","src":"10084:11:21"},{"kind":"number","nativeSrc":"10097:1:21","nodeType":"YulLiteral","src":"10097:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10080:3:21","nodeType":"YulIdentifier","src":"10080:3:21"},"nativeSrc":"10080:19:21","nodeType":"YulFunctionCall","src":"10080:19:21"}],"functionName":{"name":"and","nativeSrc":"10068:3:21","nodeType":"YulIdentifier","src":"10068:3:21"},"nativeSrc":"10068:32:21","nodeType":"YulFunctionCall","src":"10068:32:21"}],"functionName":{"name":"mstore","nativeSrc":"10050:6:21","nodeType":"YulIdentifier","src":"10050:6:21"},"nativeSrc":"10050:51:21","nodeType":"YulFunctionCall","src":"10050:51:21"},"nativeSrc":"10050:51:21","nodeType":"YulExpressionStatement","src":"10050:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10121:9:21","nodeType":"YulIdentifier","src":"10121:9:21"},{"kind":"number","nativeSrc":"10132:2:21","nodeType":"YulLiteral","src":"10132:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10117:3:21","nodeType":"YulIdentifier","src":"10117:3:21"},"nativeSrc":"10117:18:21","nodeType":"YulFunctionCall","src":"10117:18:21"},{"name":"value1","nativeSrc":"10137:6:21","nodeType":"YulIdentifier","src":"10137:6:21"}],"functionName":{"name":"mstore","nativeSrc":"10110:6:21","nodeType":"YulIdentifier","src":"10110:6:21"},"nativeSrc":"10110:34:21","nodeType":"YulFunctionCall","src":"10110:34:21"},"nativeSrc":"10110:34:21","nodeType":"YulExpressionStatement","src":"10110:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9876:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9966:9:21","nodeType":"YulTypedName","src":"9966:9:21","type":""},{"name":"value1","nativeSrc":"9977:6:21","nodeType":"YulTypedName","src":"9977:6:21","type":""},{"name":"value0","nativeSrc":"9985:6:21","nodeType":"YulTypedName","src":"9985:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9996:4:21","nodeType":"YulTypedName","src":"9996:4:21","type":""}],"src":"9876:274:21"},{"body":{"nativeSrc":"10418:311:21","nodeType":"YulBlock","src":"10418:311:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10435:9:21","nodeType":"YulIdentifier","src":"10435:9:21"},{"name":"value0","nativeSrc":"10446:6:21","nodeType":"YulIdentifier","src":"10446:6:21"}],"functionName":{"name":"mstore","nativeSrc":"10428:6:21","nodeType":"YulIdentifier","src":"10428:6:21"},"nativeSrc":"10428:25:21","nodeType":"YulFunctionCall","src":"10428:25:21"},"nativeSrc":"10428:25:21","nodeType":"YulExpressionStatement","src":"10428:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10473:9:21","nodeType":"YulIdentifier","src":"10473:9:21"},{"kind":"number","nativeSrc":"10484:2:21","nodeType":"YulLiteral","src":"10484:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10469:3:21","nodeType":"YulIdentifier","src":"10469:3:21"},"nativeSrc":"10469:18:21","nodeType":"YulFunctionCall","src":"10469:18:21"},{"name":"value1","nativeSrc":"10489:6:21","nodeType":"YulIdentifier","src":"10489:6:21"}],"functionName":{"name":"mstore","nativeSrc":"10462:6:21","nodeType":"YulIdentifier","src":"10462:6:21"},"nativeSrc":"10462:34:21","nodeType":"YulFunctionCall","src":"10462:34:21"},"nativeSrc":"10462:34:21","nodeType":"YulExpressionStatement","src":"10462:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10516:9:21","nodeType":"YulIdentifier","src":"10516:9:21"},{"kind":"number","nativeSrc":"10527:2:21","nodeType":"YulLiteral","src":"10527:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10512:3:21","nodeType":"YulIdentifier","src":"10512:3:21"},"nativeSrc":"10512:18:21","nodeType":"YulFunctionCall","src":"10512:18:21"},{"kind":"number","nativeSrc":"10532:3:21","nodeType":"YulLiteral","src":"10532:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"10505:6:21","nodeType":"YulIdentifier","src":"10505:6:21"},"nativeSrc":"10505:31:21","nodeType":"YulFunctionCall","src":"10505:31:21"},"nativeSrc":"10505:31:21","nodeType":"YulExpressionStatement","src":"10505:31:21"},{"nativeSrc":"10545:65:21","nodeType":"YulAssignment","src":"10545:65:21","value":{"arguments":[{"name":"value2","nativeSrc":"10582:6:21","nodeType":"YulIdentifier","src":"10582:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"10594:9:21","nodeType":"YulIdentifier","src":"10594:9:21"},{"kind":"number","nativeSrc":"10605:3:21","nodeType":"YulLiteral","src":"10605:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10590:3:21","nodeType":"YulIdentifier","src":"10590:3:21"},"nativeSrc":"10590:19:21","nodeType":"YulFunctionCall","src":"10590:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"10553:28:21","nodeType":"YulIdentifier","src":"10553:28:21"},"nativeSrc":"10553:57:21","nodeType":"YulFunctionCall","src":"10553:57:21"},"variableNames":[{"name":"tail","nativeSrc":"10545:4:21","nodeType":"YulIdentifier","src":"10545:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10630:9:21","nodeType":"YulIdentifier","src":"10630:9:21"},{"kind":"number","nativeSrc":"10641:2:21","nodeType":"YulLiteral","src":"10641:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10626:3:21","nodeType":"YulIdentifier","src":"10626:3:21"},"nativeSrc":"10626:18:21","nodeType":"YulFunctionCall","src":"10626:18:21"},{"arguments":[{"name":"value3","nativeSrc":"10650:6:21","nodeType":"YulIdentifier","src":"10650:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10666:3:21","nodeType":"YulLiteral","src":"10666:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"10671:1:21","nodeType":"YulLiteral","src":"10671:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10662:3:21","nodeType":"YulIdentifier","src":"10662:3:21"},"nativeSrc":"10662:11:21","nodeType":"YulFunctionCall","src":"10662:11:21"},{"kind":"number","nativeSrc":"10675:1:21","nodeType":"YulLiteral","src":"10675:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10658:3:21","nodeType":"YulIdentifier","src":"10658:3:21"},"nativeSrc":"10658:19:21","nodeType":"YulFunctionCall","src":"10658:19:21"}],"functionName":{"name":"and","nativeSrc":"10646:3:21","nodeType":"YulIdentifier","src":"10646:3:21"},"nativeSrc":"10646:32:21","nodeType":"YulFunctionCall","src":"10646:32:21"}],"functionName":{"name":"mstore","nativeSrc":"10619:6:21","nodeType":"YulIdentifier","src":"10619:6:21"},"nativeSrc":"10619:60:21","nodeType":"YulFunctionCall","src":"10619:60:21"},"nativeSrc":"10619:60:21","nodeType":"YulExpressionStatement","src":"10619:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10699:9:21","nodeType":"YulIdentifier","src":"10699:9:21"},{"kind":"number","nativeSrc":"10710:3:21","nodeType":"YulLiteral","src":"10710:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10695:3:21","nodeType":"YulIdentifier","src":"10695:3:21"},"nativeSrc":"10695:19:21","nodeType":"YulFunctionCall","src":"10695:19:21"},{"name":"value4","nativeSrc":"10716:6:21","nodeType":"YulIdentifier","src":"10716:6:21"}],"functionName":{"name":"mstore","nativeSrc":"10688:6:21","nodeType":"YulIdentifier","src":"10688:6:21"},"nativeSrc":"10688:35:21","nodeType":"YulFunctionCall","src":"10688:35:21"},"nativeSrc":"10688:35:21","nodeType":"YulExpressionStatement","src":"10688:35:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nativeSrc":"10155:574:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10355:9:21","nodeType":"YulTypedName","src":"10355:9:21","type":""},{"name":"value4","nativeSrc":"10366:6:21","nodeType":"YulTypedName","src":"10366:6:21","type":""},{"name":"value3","nativeSrc":"10374:6:21","nodeType":"YulTypedName","src":"10374:6:21","type":""},{"name":"value2","nativeSrc":"10382:6:21","nodeType":"YulTypedName","src":"10382:6:21","type":""},{"name":"value1","nativeSrc":"10390:6:21","nodeType":"YulTypedName","src":"10390:6:21","type":""},{"name":"value0","nativeSrc":"10398:6:21","nodeType":"YulTypedName","src":"10398:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10409:4:21","nodeType":"YulTypedName","src":"10409:4:21","type":""}],"src":"10155:574:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IBeanRouter_$2896__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid router address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid WMON address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Same tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid MON amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Transfer from failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100955760003560e01c80638da5cb5b116100595780638da5cb5b146101635780639b69c7c814610181578063ac29e1a1146101a1578063f2fde38b146101c1578063fe029156146101e157600080fd5b8063485cc955146100a15780634aa06652146100c3578063715018a6146100f65780637d86b8a51461010b578063858845d91461014357600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461119a565b6101f4565b005b3480156100cf57600080fd5b506100e36100de3660046111cd565b61033c565b6040519081526020015b60405180910390f35b34801561010257600080fd5b506100c161059c565b34801561011757600080fd5b5060665461012b906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b34801561014f57600080fd5b506100c161015e366004611209565b6105b0565b34801561016f57600080fd5b506033546001600160a01b031661012b565b34801561018d57600080fd5b506100c161019c366004611209565b610629565b3480156101ad57600080fd5b5060655461012b906001600160a01b031681565b3480156101cd57600080fd5b506100c16101dc366004611209565b6106a0565b6100e36101ef36600461122b565b610719565b600054610100900460ff16158080156102145750600054600160ff909116105b8061022e5750303b15801561022e575060005460ff166001145b6102965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156102b9576000805461ff0019166101001790555b6102c161083f565b606580546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558015610337576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b600060606001600160a01b03851661035d576066546001600160a01b031694505b6001600160a01b03841661037a576066546001600160a01b031693505b6066546001600160a01b03868116911614806103a357506066546001600160a01b038581169116145b1561043557604080516002808252606082018352909160208301908036833701905050905084816000815181106103dc576103dc611283565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061041057610410611283565b60200260200101906001600160a01b031690816001600160a01b0316815250506104f0565b604080516003808252608082019092529060208201606080368337019050509050848160008151811061046a5761046a611283565b6001600160a01b03928316602091820292909201015260665482519116908290600190811061049b5761049b611283565b60200260200101906001600160a01b031690816001600160a01b03168152505083816002815181106104cf576104cf611283565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60655460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f9061052390879086906004016112de565b600060405180830381865afa158015610540573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056891908101906112f7565b9050806001825161057991906113cb565b8151811061058957610589611283565b6020026020010151925050509392505050565b6105a461086e565b6105ae60006108c8565b565b6105b861086e565b6001600160a01b0381166106075760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420726f75746572206164647265737360501b604482015260640161028d565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b61063161086e565b6001600160a01b03811661067e5760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420574d4f4e206164647265737360601b604482015260640161028d565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6106a861086e565b6001600160a01b03811661070d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028d565b610716816108c8565b50565b600080831161075f5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161028d565b836001600160a01b0316856001600160a01b0316036107ae5760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b604482015260640161028d565b6001600160a01b038516610812578234146108005760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081353d388185b5bdd5b9d60721b604482015260640161028d565b61080b84848461091a565b9050610837565b6001600160a01b03841661082b5761080b858484610ac3565b61080b85858585610d7d565b949350505050565b600054610100900460ff166108665760405162461bcd60e51b815260040161028d906113e4565b6105ae61114e565b6033546001600160a01b031633146105ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051600280825260608201835260009283929190602083019080368337505060665482519293506001600160a01b03169183915060009061095f5761095f611283565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061099357610993611283565b6001600160a01b03928316602091820292909201015260655460009116637ff36ab5868685336109c5426104b061142f565b6040518663ffffffff1660e01b81526004016109e49493929190611442565b60006040518083038185885af1158015610a02573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610a2b91908101906112f7565b905060008160018351610a3e91906113cb565b81518110610a4e57610a4e611283565b60200260200101519050866001600160a01b031660006001600160a01b0316336001600160a01b03167fd36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d248985604051610ab1929190918252602082015260400190565b60405180910390a49695505050505050565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611477565b610b805760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b604482015260640161028d565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529085169063095ea7b3906044016020604051808303816000875af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf79190611477565b506040805160028082526060820183526000926020830190803683370190505090508481600081518110610c2d57610c2d611283565b6001600160a01b039283166020918202929092010152606654825191169082906001908110610c5e57610c5e611283565b6001600160a01b039283166020918202929092010152606554600091166318cbafe586868533610c90426104b061142f565b6040518663ffffffff1660e01b8152600401610cb0959493929190611499565b6000604051808303816000875af1158015610ccf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf791908101906112f7565b905060008160018351610d0a91906113cb565b81518110610d1a57610d1a611283565b6020026020010151905060006001600160a01b0316876001600160a01b0316336001600160a01b03167fd36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d248985604051610ab1929190918252602082015260400190565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038616906323b872dd906064016020604051808303816000875af1158015610dd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df79190611477565b610e3a5760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b604482015260640161028d565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af1158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb19190611477565b506066546060906001600160a01b0387811691161480610ede57506066546001600160a01b038681169116145b15610f705760408051600280825260608201835290916020830190803683370190505090508581600081518110610f1757610f17611283565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610f4b57610f4b611283565b60200260200101906001600160a01b031690816001600160a01b03168152505061102b565b6040805160038082526080820190925290602082016060803683370190505090508581600081518110610fa557610fa5611283565b6001600160a01b039283166020918202929092010152606654825191169082906001908110610fd657610fd6611283565b60200260200101906001600160a01b031690816001600160a01b031681525050848160028151811061100a5761100a611283565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6065546000906001600160a01b03166338ed17398686853361104f426104b061142f565b6040518663ffffffff1660e01b815260040161106f959493929190611499565b6000604051808303816000875af115801561108e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b691908101906112f7565b9050600081600183516110c991906113cb565b815181106110d9576110d9611283565b60200260200101519050866001600160a01b0316886001600160a01b0316336001600160a01b03167fd36cc53ba71bc76a3db3364981f5296dd4ca5eba0e8c89874f2170515bd20d24898560405161113b929190918252602082015260400190565b60405180910390a4979650505050505050565b600054610100900460ff166111755760405162461bcd60e51b815260040161028d906113e4565b6105ae336108c8565b80356001600160a01b038116811461119557600080fd5b919050565b600080604083850312156111ad57600080fd5b6111b68361117e565b91506111c46020840161117e565b90509250929050565b6000806000606084860312156111e257600080fd5b6111eb8461117e565b92506111f96020850161117e565b9150604084013590509250925092565b60006020828403121561121b57600080fd5b6112248261117e565b9392505050565b6000806000806080858703121561124157600080fd5b61124a8561117e565b93506112586020860161117e565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008151808452602080850194506020840160005b838110156112d35781516001600160a01b0316875295820195908201906001016112ae565b509495945050505050565b8281526040602082015260006108376040830184611299565b6000602080838503121561130a57600080fd5b825167ffffffffffffffff8082111561132257600080fd5b818501915085601f83011261133657600080fd5b8151818111156113485761134861126d565b8060051b604051601f19603f8301168101818110858211171561136d5761136d61126d565b60405291825284820192508381018501918883111561138b57600080fd5b938501935b828510156113a957845184529385019392850192611390565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156113de576113de6113b5565b92915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156113de576113de6113b5565b84815260806020820152600061145b6080830186611299565b6001600160a01b03949094166040830152506060015292915050565b60006020828403121561148957600080fd5b8151801515811461122457600080fd5b85815284602082015260a0604082015260006114b860a0830186611299565b6001600160a01b039490941660608301525060800152939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x9B69C7C8 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xAC29E1A1 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xFE029156 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x7D86B8A5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x858845D9 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x66 SLOAD PUSH2 0x12B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x12B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x214 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x22E JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2C1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x35D JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x37A JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x435 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3DC JUMPI PUSH2 0x3DC PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x49B JUMPI PUSH2 0x49B PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x523 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x568 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x589 JUMPI PUSH2 0x589 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x5AE PUSH1 0x0 PUSH2 0x8C8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420726F757465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x631 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420574D4F4E2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28D JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x8C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x812 JUMPI DUP3 CALLVALUE EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081353D388185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH2 0x80B DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST SWAP1 POP PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x82B JUMPI PUSH2 0x80B DUP6 DUP5 DUP5 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x80B DUP6 DUP6 DUP6 DUP6 PUSH2 0xD7D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x5AE PUSH2 0x114E JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x66 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x95F JUMPI PUSH2 0x95F PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x993 JUMPI PUSH2 0x993 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x7FF36AB5 DUP7 DUP7 DUP6 CALLER PUSH2 0x9C5 TIMESTAMP PUSH2 0x4B0 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA2B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA4E JUMPI PUSH2 0xA4E PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAB1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x18CBAFE5 DUP7 DUP7 DUP6 CALLER PUSH2 0xC90 TIMESTAMP PUSH2 0x4B0 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCF7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xD0A SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD1A JUMPI PUSH2 0xD1A PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAB1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST POP PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xEDE JUMPI POP PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF17 JUMPI PUSH2 0xF17 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF4B JUMPI PUSH2 0xF4B PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFA5 JUMPI PUSH2 0xFA5 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xFD6 JUMPI PUSH2 0xFD6 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x100A JUMPI PUSH2 0x100A PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP7 DUP7 DUP6 CALLER PUSH2 0x104F TIMESTAMP PUSH2 0x4B0 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x108E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10B6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD36CC53BA71BC76A3DB3364981F5296DD4CA5EBA0E8C89874F2170515BD20D24 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x113B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x5AE CALLER PUSH2 0x8C8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B6 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x11C4 PUSH1 0x20 DUP5 ADD PUSH2 0x117E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EB DUP5 PUSH2 0x117E JUMP JUMPDEST SWAP3 POP PUSH2 0x11F9 PUSH1 0x20 DUP6 ADD PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1224 DUP3 PUSH2 0x117E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x124A DUP6 PUSH2 0x117E JUMP JUMPDEST SWAP4 POP PUSH2 0x1258 PUSH1 0x20 DUP7 ADD PUSH2 0x117E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12D3 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12AE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x837 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1348 PUSH2 0x126D JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x136D JUMPI PUSH2 0x136D PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x13A9 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x1390 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x13DE JUMPI PUSH2 0x13DE PUSH2 0x13B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13DE JUMPI PUSH2 0x13DE PUSH2 0x13B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x145B PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x14B8 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1367:5702:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:177;;;;;;;;;;-1:-1:-1;1883:177:19;;;;;:::i;:::-;;:::i;:::-;;2116:807;;;;;;;;;;-1:-1:-1;2116:807:19;;;;;:::i;:::-;;:::i;:::-;;;936:25:21;;;924:2;909:18;2116:807:19;;;;;;;;2064:101:0;;;;;;;;;;;;;:::i;1695:19:19:-;;;;;;;;;;-1:-1:-1;1695:19:19;;;;-1:-1:-1;;;;;1695:19:19;;;;;;-1:-1:-1;;;;;1136:32:21;;;1118:51;;1106:2;1091:18;1695:19:19;972:203:21;6720:187:19;;;;;;;;;;-1:-1:-1;6720:187:19;;;;;:::i;:::-;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;6913:154:19;;;;;;;;;;-1:-1:-1;6913:154:19;;;;;:::i;:::-;;:::i;1660:29::-;;;;;;;;;;-1:-1:-1;1660:29:19;;;;-1:-1:-1;;;;;1660:29:19;;;2314:198:0;;;;;;;;;;-1:-1:-1;2314:198:0;;;;;:::i;:::-;;:::i;2955:676:19:-;;;;;;:::i;:::-;;:::i;1883:177::-;3279:19:1;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:1;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:1;1713:19:2;:23;;;3387:66:1;;-1:-1:-1;3436:12:1;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:1;;2203:2:21;3325:201:1;;;2185:21:21;2242:2;2222:18;;;2215:30;2281:34;2261:18;;;2254:62;-1:-1:-1;;;2332:18:21;;;2325:44;2386:19;;3325:201:1;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:1;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:1;;;;;3562:65;1968:16:19::1;:14;:16::i;:::-;1994:10;:37:::0;;-1:-1:-1;;;;;1994:37:19;;::::1;-1:-1:-1::0;;;;;;1994:37:19;;::::1;;::::0;;;2041:4:::1;:12:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3647:99:1;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:1;;;3721:14;;-1:-1:-1;2568:36:21;;3721:14:1;;2556:2:21;2541:18;3721:14:1;;;;;;;3647:99;3269:483;1883:177:19;;:::o;2116:807::-;2243:17;2272:21;-1:-1:-1;;;;;2337:19:19;;2333:41;;2370:4;;-1:-1:-1;;;;;2370:4:19;;-1:-1:-1;2333:41:19;-1:-1:-1;;;;;2388:17:19;;2384:37;;2417:4;;-1:-1:-1;;;;;2417:4:19;;-1:-1:-1;2384:37:19;2449:4;;-1:-1:-1;;;;;2436:17:19;;;2449:4;;2436:17;;:36;;-1:-1:-1;2468:4:19;;-1:-1:-1;;;;;2457:15:19;;;2468:4;;2457:15;2436:36;2432:363;;;2495:16;;;2509:1;2495:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2495:16:19;2488:23;;2535:9;2525:4;2530:1;2525:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;2525:19:19;;;-1:-1:-1;;;;;2525:19:19;;;;;2568:7;2558:4;2563:1;2558:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;2558:17:19;;;-1:-1:-1;;;;;2558:17:19;;;;;2432:363;;;2676:16;;;2690:1;2676:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2676:16:19;2669:23;;2716:9;2706:4;2711:1;2706:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2706:19:19;;;:7;;;;;;;;;:19;2749:4;;2739:7;;2749:4;;;2739;;2749;;2739:7;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;2739:14:19;;;-1:-1:-1;;;;;2739:14:19;;;;;2777:7;2767:4;2772:1;2767:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;2767:17:19;;;-1:-1:-1;;;;;2767:17:19;;;;;2432:363;2832:10;;:40;;-1:-1:-1;;;2832:40:19;;2805:24;;-1:-1:-1;;;;;2832:10:19;;:24;;:40;;2857:8;;2867:4;;2832:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2832:40:19;;;;;;;;;;;;:::i;:::-;2805:67;;2889:7;2914:1;2897:7;:14;:18;;;;:::i;:::-;2889:27;;;;;;;;:::i;:::-;;;;;;;2882:34;;;;2116:807;;;;;:::o;2064:101:0:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;6720:187:19:-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6803:24:19;::::1;6795:59;;;::::0;-1:-1:-1;;;6795:59:19;;5263:2:21;6795:59:19::1;::::0;::::1;5245:21:21::0;5302:2;5282:18;;;5275:30;-1:-1:-1;;;5321:18:21;;;5314:52;5383:18;;6795:59:19::1;5061:346:21::0;6795:59:19::1;6864:10;:36:::0;;-1:-1:-1;;;;;;6864:36:19::1;-1:-1:-1::0;;;;;6864:36:19;;;::::1;::::0;;;::::1;::::0;;6720:187::o;6913:154::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6988:22:19;::::1;6980:55;;;::::0;-1:-1:-1;;;6980:55:19;;5614:2:21;6980:55:19::1;::::0;::::1;5596:21:21::0;5653:2;5633:18;;;5626:30;-1:-1:-1;;;5672:18:21;;;5665:50;5732:18;;6980:55:19::1;5412:344:21::0;6980:55:19::1;7045:4;:15:::0;;-1:-1:-1;;;;;;7045:15:19::1;-1:-1:-1::0;;;;;7045:15:19;;;::::1;::::0;;;::::1;::::0;;6913:154::o;2314:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:0;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:0;;5963:2:21;2394:73:0::1;::::0;::::1;5945:21:21::0;6002:2;5982:18;;;5975:30;6041:34;6021:18;;;6014:62;-1:-1:-1;;;6092:18:21;;;6085:36;6138:19;;2394:73:0::1;5761:402:21::0;2394:73:0::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;2955:676:19:-;3109:17;3157:1;3146:8;:12;3138:43;;;;-1:-1:-1;;;3138:43:19;;6370:2:21;3138:43:19;;;6352:21:21;6409:2;6389:18;;;6382:30;-1:-1:-1;;;6428:18:21;;;6421:48;6486:18;;3138:43:19;6168:342:21;3138:43:19;3212:7;-1:-1:-1;;;;;3199:20:19;:9;-1:-1:-1;;;;;3199:20:19;;3191:44;;;;-1:-1:-1;;;3191:44:19;;6717:2:21;3191:44:19;;;6699:21:21;6756:2;6736:18;;;6729:30;-1:-1:-1;;;6775:18:21;;;6768:41;6826:18;;3191:44:19;6515:335:21;3191:44:19;-1:-1:-1;;;;;3250:19:19;;3246:379;;3306:8;3293:9;:21;3285:52;;;;-1:-1:-1;;;3285:52:19;;7057:2:21;3285:52:19;;;7039:21:21;7096:2;7076:18;;;7069:30;-1:-1:-1;;;7115:18:21;;;7108:48;7173:18;;3285:52:19;6855:342:21;3285:52:19;3358:50;3376:7;3385:8;3395:12;3358:17;:50::i;:::-;3351:57;;;;3246:379;-1:-1:-1;;;;;3429:17:19;;3425:200;;3469:52;3487:9;3498:8;3508:12;3469:17;:52::i;3425:200::-;3559:55;3571:9;3582:7;3591:8;3601:12;3559:11;:55::i;3425:200::-;2955:676;;;;;;:::o;1003:95:0:-;5374:13:1;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:3;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;7816:2:21;1654:68:0;;;7798:21:21;;;7835:18;;;7828:30;7894:34;7874:18;;;7867:62;7946:18;;1654:68:0;7614:356:21;2666:187:0;2758:6;;;-1:-1:-1;;;;;2774:17:0;;;-1:-1:-1;;;;;;2774:17:0;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;3686:662:19:-;3883:16;;;3897:1;3883:16;;;;;;;;3818:7;;;;3883:16;3897:1;3883:16;;;;;;;;-1:-1:-1;;3919:4:19;;3909:7;;;;-1:-1:-1;;;;;;3919:4:19;;3909:7;;-1:-1:-1;3919:4:19;;3909:7;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;3909:14:19;;;-1:-1:-1;;;;;3909:14:19;;;;;3943:7;3933:4;3938:1;3933:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3933:17:19;;;:7;;;;;;;;;:17;4017:10;;3990:24;;4017:10;:32;4057:8;4080:12;4106:4;4124:10;4148:22;:15;4166:4;4148:22;:::i;:::-;4017:163;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4017:163:19;;;;;;;;;;;;:::i;:::-;3990:190;;4191:17;4211:7;4236:1;4219:7;:14;:18;;;;:::i;:::-;4211:27;;;;;;;;:::i;:::-;;;;;;;4191:47;;4286:7;-1:-1:-1;;;;;4253:62:19;1762:1;-1:-1:-1;;;;;4253:62:19;4266:10;-1:-1:-1;;;;;4253:62:19;;4295:8;4305:9;4253:62;;;;;;8786:25:21;;;8842:2;8827:18;;8820:34;8774:2;8759:18;;8612:248;4253:62:19;;;;;;;;4332:9;3686:662;-1:-1:-1;;;;;;3686:662:19:o;4403:948::-;4614:67;;-1:-1:-1;;;4614:67:19;;4645:10;4614:67;;;9105:34:21;4665:4:19;9155:18:21;;;9148:43;9207:18;;;9200:34;;;4537:7:19;;-1:-1:-1;;;;;4614:30:19;;;;;9040:18:21;;4614:67:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4593:134;;;;-1:-1:-1;;;4593:134:19;;9729:2:21;4593:134:19;;;9711:21:21;9768:2;9748:18;;;9741:30;-1:-1:-1;;;9787:18:21;;;9780:50;9847:18;;4593:134:19;9527:344:21;4593:134:19;4798:10;;4764:56;;-1:-1:-1;;;4764:56:19;;-1:-1:-1;;;;;4798:10:19;;;4764:56;;;10050:51:21;10117:18;;;10110:34;;;4764:25:19;;;;;;10023:18:21;;4764:56:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4877:16:19;;;4891:1;4877:16;;;;;;;;4853:21;;4877:16;;;;;;;;;;-1:-1:-1;4877:16:19;4853:40;;4913:9;4903:4;4908:1;4903:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4903:19:19;;;:7;;;;;;;;;:19;4942:4;;4932:7;;4942:4;;;4932;;4942;;4932:7;;;;;;:::i;:::-;-1:-1:-1;;;;;4932:14:19;;;:7;;;;;;;;;:14;5013:10;;4986:24;;5013:10;:32;5059:8;5081:12;5107:4;5125:10;5149:22;:15;5167:4;5149:22;:::i;:::-;5013:168;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5013:168:19;;;;;;;;;;;;:::i;:::-;4986:195;;5192:17;5212:7;5237:1;5220:7;:14;:18;;;;:::i;:::-;5212:27;;;;;;;;:::i;:::-;;;;;;;5192:47;;1762:1;-1:-1:-1;;;;;5254:64:19;5279:9;-1:-1:-1;;;;;5254:64:19;5267:10;-1:-1:-1;;;;;5254:64:19;;5298:8;5308:9;5254:64;;;;;;8786:25:21;;;8842:2;8827:18;;8820:34;8774:2;8759:18;;8612:248;5405:1203:19;5635:67;;-1:-1:-1;;;5635:67:19;;5666:10;5635:67;;;9105:34:21;5686:4:19;9155:18:21;;;9148:43;9207:18;;;9200:34;;;5558:7:19;;-1:-1:-1;;;;;5635:30:19;;;;;9040:18:21;;5635:67:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5614:134;;;;-1:-1:-1;;;5614:134:19;;9729:2:21;5614:134:19;;;9711:21:21;9768:2;9748:18;;;9741:30;-1:-1:-1;;;9787:18:21;;;9780:50;9847:18;;5614:134:19;9527:344:21;5614:134:19;5819:10;;5785:56;;-1:-1:-1;;;5785:56:19;;-1:-1:-1;;;;;5819:10:19;;;5785:56;;;10050:51:21;10117:18;;;10110:34;;;5785:25:19;;;;;;10023:18:21;;5785:56:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5922:4:19;;5874:21;;-1:-1:-1;;;;;5909:17:19;;;5922:4;;5909:17;;:36;;-1:-1:-1;5941:4:19;;-1:-1:-1;;;;;5930:15:19;;;5941:4;;5930:15;5909:36;5905:300;;;5968:16;;;5982:1;5968:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5968:16:19;5961:23;;6008:9;5998:4;6003:1;5998:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;5998:19:19;;;-1:-1:-1;;;;;5998:19:19;;;;;6041:7;6031:4;6036:1;6031:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;6031:17:19;;;-1:-1:-1;;;;;6031:17:19;;;;;5905:300;;;6086:16;;;6100:1;6086:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6086:16:19;6079:23;;6126:9;6116:4;6121:1;6116:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6116:19:19;;;:7;;;;;;;;;:19;6159:4;;6149:7;;6159:4;;;6149;;6159;;6149:7;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;6149:14:19;;;-1:-1:-1;;;;;6149:14:19;;;;;6187:7;6177:4;6182:1;6177:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;6177:17:19;;;-1:-1:-1;;;;;6177:17:19;;;;;5905:300;6266:10;;6239:24;;-1:-1:-1;;;;;6266:10:19;:35;6315:8;6337:12;6363:4;6381:10;6405:22;:15;6423:4;6405:22;:::i;:::-;6266:171;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6266:171:19;;;;;;;;;;;;:::i;:::-;6239:198;;6448:17;6468:7;6493:1;6476:7;:14;:18;;;;:::i;:::-;6468:27;;;;;;;;:::i;:::-;;;;;;;6448:47;;6546:7;-1:-1:-1;;;;;6510:65:19;6535:9;-1:-1:-1;;;;;6510:65:19;6523:10;-1:-1:-1;;;;;6510:65:19;;6555:8;6565:9;6510:65;;;;;;8786:25:21;;;8842:2;8827:18;;8820:34;8774:2;8759:18;;8612:248;6510:65:19;;;;;;;;6592:9;5405:1203;-1:-1:-1;;;;;;;5405:1203:19:o;1104:111:0:-;5374:13:1;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:3::0;1176:18:0::1;:32::i;14:173:21:-:0;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:328::-;534:6;542;550;603:2;591:9;582:7;578:23;574:32;571:52;;;619:1;616;609:12;571:52;642:29;661:9;642:29;:::i;:::-;632:39;;690:38;724:2;713:9;709:18;690:38;:::i;:::-;680:48;;775:2;764:9;760:18;747:32;737:42;;457:328;;;;;:::o;1180:186::-;1239:6;1292:2;1280:9;1271:7;1267:23;1263:32;1260:52;;;1308:1;1305;1298:12;1260:52;1331:29;1350:9;1331:29;:::i;:::-;1321:39;1180:186;-1:-1:-1;;;1180:186:21:o;1599:397::-;1685:6;1693;1701;1709;1762:3;1750:9;1741:7;1737:23;1733:33;1730:53;;;1779:1;1776;1769:12;1730:53;1802:29;1821:9;1802:29;:::i;:::-;1792:39;;1850:38;1884:2;1873:9;1869:18;1850:38;:::i;:::-;1599:397;;1840:48;;-1:-1:-1;;;;1935:2:21;1920:18;;1907:32;;1986:2;1971:18;1958:32;;1599:397::o;2615:127::-;2676:10;2671:3;2667:20;2664:1;2657:31;2707:4;2704:1;2697:15;2731:4;2728:1;2721:15;2747:127;2808:10;2803:3;2799:20;2796:1;2789:31;2839:4;2836:1;2829:15;2863:4;2860:1;2853:15;2879:465;2932:3;2970:5;2964:12;2997:6;2992:3;2985:19;3023:4;3052;3047:3;3043:14;3036:21;;3091:4;3084:5;3080:16;3114:1;3124:195;3138:6;3135:1;3132:13;3124:195;;;3203:13;;-1:-1:-1;;;;;3199:39:21;3187:52;;3259:12;;;;3294:15;;;;3235:1;3153:9;3124:195;;;-1:-1:-1;3335:3:21;;2879:465;-1:-1:-1;;;;;2879:465:21:o;3349:332::-;3556:6;3545:9;3538:25;3599:2;3594;3583:9;3579:18;3572:30;3519:4;3619:56;3671:2;3660:9;3656:18;3648:6;3619:56;:::i;3686:1105::-;3781:6;3812:2;3855;3843:9;3834:7;3830:23;3826:32;3823:52;;;3871:1;3868;3861:12;3823:52;3904:9;3898:16;3933:18;3974:2;3966:6;3963:14;3960:34;;;3990:1;3987;3980:12;3960:34;4028:6;4017:9;4013:22;4003:32;;4073:7;4066:4;4062:2;4058:13;4054:27;4044:55;;4095:1;4092;4085:12;4044:55;4124:2;4118:9;4146:2;4142;4139:10;4136:36;;;4152:18;;:::i;:::-;4198:2;4195:1;4191:10;4230:2;4224:9;4293:2;4289:7;4284:2;4280;4276:11;4272:25;4264:6;4260:38;4348:6;4336:10;4333:22;4328:2;4316:10;4313:18;4310:46;4307:72;;;4359:18;;:::i;:::-;4395:2;4388:22;4445:18;;;4479:15;;;;-1:-1:-1;4521:11:21;;;4517:20;;;4549:19;;;4546:39;;;4581:1;4578;4571:12;4546:39;4605:11;;;;4625:135;4641:6;4636:3;4633:15;4625:135;;;4707:10;;4695:23;;4658:12;;;;4738;;;;4625:135;;;4779:6;3686:1105;-1:-1:-1;;;;;;;;3686:1105:21:o;4796:127::-;4857:10;4852:3;4848:20;4845:1;4838:31;4888:4;4885:1;4878:15;4912:4;4909:1;4902:15;4928:128;4995:9;;;5016:11;;;5013:37;;;5030:18;;:::i;:::-;4928:128;;;;:::o;7202:407::-;7404:2;7386:21;;;7443:2;7423:18;;;7416:30;7482:34;7477:2;7462:18;;7455:62;-1:-1:-1;;;7548:2:21;7533:18;;7526:41;7599:3;7584:19;;7202:407::o;7975:125::-;8040:9;;;8061:10;;;8058:36;;;8074:18;;:::i;8105:502::-;8368:6;8357:9;8350:25;8411:3;8406:2;8395:9;8391:18;8384:31;8331:4;8432:57;8484:3;8473:9;8469:19;8461:6;8432:57;:::i;:::-;-1:-1:-1;;;;;8525:32:21;;;;8520:2;8505:18;;8498:60;-1:-1:-1;8589:2:21;8574:18;8567:34;8424:65;8105:502;-1:-1:-1;;8105:502:21:o;9245:277::-;9312:6;9365:2;9353:9;9344:7;9340:23;9336:32;9333:52;;;9381:1;9378;9371:12;9333:52;9413:9;9407:16;9466:5;9459:13;9452:21;9445:5;9442:32;9432:60;;9488:1;9485;9478:12;10155:574;10446:6;10435:9;10428:25;10489:6;10484:2;10473:9;10469:18;10462:34;10532:3;10527:2;10516:9;10512:18;10505:31;10409:4;10553:57;10605:3;10594:9;10590:19;10582:6;10553:57;:::i;:::-;-1:-1:-1;;;;;10646:32:21;;;;10641:2;10626:18;;10619:60;-1:-1:-1;10710:3:21;10695:19;10688:35;10545:65;10155:574;-1:-1:-1;;;10155:574:21:o"},"methodIdentifiers":{"beanRouter()":"ac29e1a1","getAmountOut(address,address,uint256)":"4aa06652","initialize(address,address)":"485cc955","owner()":"8da5cb5b","renounceOwnership()":"715018a6","swap(address,address,uint256,uint256)":"fe029156","transferOwnership(address)":"f2fde38b","updateBeanRouter(address)":"858845d9","updateWMON(address)":"9b69c7c8","wmon()":"7d86b8a5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beanRouter\",\"outputs\":[{\"internalType\":\"contract IBeanRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beanRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wmon\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouter\",\"type\":\"address\"}],\"name\":\"updateBeanRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWMON\",\"type\":\"address\"}],\"name\":\"updateWMON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wmon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorV1.sol\":\"MonadSwapAggregatorV1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregatorV1 is Initializable, OwnableUpgradeable {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n\\n    // State variables\\n    IBeanRouter public beanRouter;\\n    address public wmon;\\n    address private constant NATIVE = address(0);\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _beanRouter, address _wmon) public initializer {\\n        __Ownable_init();\\n        beanRouter = IBeanRouter(_beanRouter);\\n        wmon = _wmon;\\n    }\\n\\n    // Function untuk mendapatkan estimasi output\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path;\\n\\n        // Handle native MON\\n        if (fromToken == NATIVE) fromToken = wmon;\\n        if (toToken == NATIVE) toToken = wmon;\\n\\n        if (fromToken == wmon || toToken == wmon) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            // Jika bukan WMON, gunakan WMON sebagai perantara\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n        }\\n\\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    // Main swap function\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            return _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            return _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            return _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = wmon;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, NATIVE, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = wmon;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, NATIVE, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path;\\n        if (fromToken == wmon || toToken == wmon) {\\n            path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n        } else {\\n            path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n        }\\n\\n        // Execute swap\\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut);\\n        return amountOut;\\n    }\\n\\n    // Function untuk menerima MON\\n    receive() external payable {}\\n\\n    // Fungsi upgrade (hanya owner)\\n    function updateBeanRouter(address _newRouter) external onlyOwner {\\n        require(_newRouter != address(0), \\\"Invalid router address\\\");\\n        beanRouter = IBeanRouter(_newRouter);\\n    }\\n\\n    function updateWMON(address _newWMON) external onlyOwner {\\n        require(_newWMON != address(0), \\\"Invalid WMON address\\\");\\n        wmon = _newWMON;\\n    }\\n}\",\"keccak256\":\"0x53feb8f96f0cc3f72c53b1ceeb8cf84b144d41b0116f005a67d6cb8d18711a67\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":141,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":671,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":2915,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"beanRouter","offset":0,"slot":"101","type":"t_contract(IBeanRouter)2896"},{"astId":2917,"contract":"contracts/MonadSwapAggregatorV1.sol:MonadSwapAggregatorV1","label":"wmon","offset":0,"slot":"102","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IBeanRouter)2896":{"encoding":"inplace","label":"contract IBeanRouter","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/MonadSwapAggregatorV2.sol":{"IBeanRouter":{"abi":[{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAmountsOut(uint256,address[])":"d06ca61f","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorV2.sol\":\"IBeanRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregatorV2 is Initializable, OwnableUpgradeable {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut,\\n        uint256 fee\\n    );\\n\\n    event FeeUpdated(uint256 newFee);\\n    event FeeCollectorUpdated(address newCollector);\\n\\n    // State variables\\n    IBeanRouter public beanRouter;\\n    address public wmon;\\n    address private constant NATIVE = address(0);\\n\\n    // New V2 variables\\n    uint256 public swapFee; // dalam basis points (1 = 0.01%)\\n    address public feeCollector;\\n    mapping(address => bool) public preferredPairs; // Pairs yang bisa di-swap langsung\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _beanRouter, address _wmon) public initializer {\\n        __Ownable_init();\\n        beanRouter = IBeanRouter(_beanRouter);\\n        wmon = _wmon;\\n        swapFee = 30; // 0.3% fee default\\n        feeCollector = msg.sender;\\n    }\\n\\n    // New V2 functions\\n    function setSwapFee(uint256 _newFee) external onlyOwner {\\n        require(_newFee <= 100, \\\"Fee too high\\\"); // Max 1%\\n        swapFee = _newFee;\\n        emit FeeUpdated(_newFee);\\n    }\\n\\n    function setFeeCollector(address _newCollector) external onlyOwner {\\n        require(_newCollector != address(0), \\\"Invalid address\\\");\\n        feeCollector = _newCollector;\\n        emit FeeCollectorUpdated(_newCollector);\\n    }\\n\\n    function setPreferredPair(address token0, address token1, bool status) external onlyOwner {\\n        bytes32 pairKey = _getPairKey(token0, token1);\\n        preferredPairs[address(uint160(uint256(pairKey)))] = status;\\n    }\\n\\n    function _getPairKey(address token0, address token1) internal pure returns (bytes32) {\\n        return token0 < token1\\n            ? keccak256(abi.encodePacked(token0, token1))\\n            : keccak256(abi.encodePacked(token1, token0));\\n    }\\n\\n    // Updated V2 functions\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path = _getOptimalPath(fromToken, toToken);\\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\\n        amountOut = amounts[amounts.length - 1];\\n\\n        // Apply fee\\n        amountOut = amountOut * (10000 - swapFee) / 10000;\\n    }\\n\\n    function _getOptimalPath(address fromToken, address toToken) internal view returns (address[] memory) {\\n        if (fromToken == NATIVE) fromToken = wmon;\\n        if (toToken == NATIVE) toToken = wmon;\\n\\n        // Check if direct swap is possible\\n        bytes32 pairKey = _getPairKey(fromToken, toToken);\\n        if (preferredPairs[address(uint160(uint256(pairKey)))]) {\\n            address[] memory directPath = new address[](2);\\n            directPath[0] = fromToken;\\n            directPath[1] = toToken;\\n            return directPath;\\n        }\\n\\n        // Default to WMON routing\\n        if (fromToken == wmon || toToken == wmon) {\\n            address[] memory path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n            return path;\\n        } else {\\n            address[] memory path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n            return path;\\n        }\\n    }\\n\\n    // Main swap function (updated with fee)\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            amountOut = _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            amountOut = _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            amountOut = _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n\\n        // Collect fee\\n        uint256 fee = amountOut * swapFee / 10000;\\n        if (fee > 0 && toToken != NATIVE) {\\n            IERC20(toToken).transfer(feeCollector, fee);\\n        }\\n\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut, fee);\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = wmon;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = wmon;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = _getOptimalPath(fromToken, toToken);\\n\\n        // Execute swap\\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    receive() external payable {}\\n\\n    // Admin functions\\n    function updateBeanRouter(address _newRouter) external onlyOwner {\\n        require(_newRouter != address(0), \\\"Invalid router address\\\");\\n        beanRouter = IBeanRouter(_newRouter);\\n    }\\n\\n    function updateWMON(address _newWMON) external onlyOwner {\\n        require(_newWMON != address(0), \\\"Invalid WMON address\\\");\\n        wmon = _newWMON;\\n    }\\n}\",\"keccak256\":\"0x9e5cf584487eeee3a3cdcafffcbaae85cbc186ac4fb6a2e048046711dbf9bc17\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorV2.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregatorV2 is Initializable, OwnableUpgradeable {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut,\\n        uint256 fee\\n    );\\n\\n    event FeeUpdated(uint256 newFee);\\n    event FeeCollectorUpdated(address newCollector);\\n\\n    // State variables\\n    IBeanRouter public beanRouter;\\n    address public wmon;\\n    address private constant NATIVE = address(0);\\n\\n    // New V2 variables\\n    uint256 public swapFee; // dalam basis points (1 = 0.01%)\\n    address public feeCollector;\\n    mapping(address => bool) public preferredPairs; // Pairs yang bisa di-swap langsung\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _beanRouter, address _wmon) public initializer {\\n        __Ownable_init();\\n        beanRouter = IBeanRouter(_beanRouter);\\n        wmon = _wmon;\\n        swapFee = 30; // 0.3% fee default\\n        feeCollector = msg.sender;\\n    }\\n\\n    // New V2 functions\\n    function setSwapFee(uint256 _newFee) external onlyOwner {\\n        require(_newFee <= 100, \\\"Fee too high\\\"); // Max 1%\\n        swapFee = _newFee;\\n        emit FeeUpdated(_newFee);\\n    }\\n\\n    function setFeeCollector(address _newCollector) external onlyOwner {\\n        require(_newCollector != address(0), \\\"Invalid address\\\");\\n        feeCollector = _newCollector;\\n        emit FeeCollectorUpdated(_newCollector);\\n    }\\n\\n    function setPreferredPair(address token0, address token1, bool status) external onlyOwner {\\n        bytes32 pairKey = _getPairKey(token0, token1);\\n        preferredPairs[address(uint160(uint256(pairKey)))] = status;\\n    }\\n\\n    function _getPairKey(address token0, address token1) internal pure returns (bytes32) {\\n        return token0 < token1\\n            ? keccak256(abi.encodePacked(token0, token1))\\n            : keccak256(abi.encodePacked(token1, token0));\\n    }\\n\\n    // Updated V2 functions\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path = _getOptimalPath(fromToken, toToken);\\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\\n        amountOut = amounts[amounts.length - 1];\\n\\n        // Apply fee\\n        amountOut = amountOut * (10000 - swapFee) / 10000;\\n    }\\n\\n    function _getOptimalPath(address fromToken, address toToken) internal view returns (address[] memory) {\\n        if (fromToken == NATIVE) fromToken = wmon;\\n        if (toToken == NATIVE) toToken = wmon;\\n\\n        // Check if direct swap is possible\\n        bytes32 pairKey = _getPairKey(fromToken, toToken);\\n        if (preferredPairs[address(uint160(uint256(pairKey)))]) {\\n            address[] memory directPath = new address[](2);\\n            directPath[0] = fromToken;\\n            directPath[1] = toToken;\\n            return directPath;\\n        }\\n\\n        // Default to WMON routing\\n        if (fromToken == wmon || toToken == wmon) {\\n            address[] memory path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n            return path;\\n        } else {\\n            address[] memory path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n            return path;\\n        }\\n    }\\n\\n    // Main swap function (updated with fee)\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            amountOut = _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            amountOut = _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            amountOut = _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n\\n        // Collect fee\\n        uint256 fee = amountOut * swapFee / 10000;\\n        if (fee > 0 && toToken != NATIVE) {\\n            IERC20(toToken).transfer(feeCollector, fee);\\n        }\\n\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut, fee);\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = wmon;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = wmon;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = _getOptimalPath(fromToken, toToken);\\n\\n        // Execute swap\\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    receive() external payable {}\\n\\n    // Admin functions\\n    function updateBeanRouter(address _newRouter) external onlyOwner {\\n        require(_newRouter != address(0), \\\"Invalid router address\\\");\\n        beanRouter = IBeanRouter(_newRouter);\\n    }\\n\\n    function updateWMON(address _newWMON) external onlyOwner {\\n        require(_newWMON != address(0), \\\"Invalid WMON address\\\");\\n        wmon = _newWMON;\\n    }\\n}\",\"keccak256\":\"0x9e5cf584487eeee3a3cdcafffcbaae85cbc186ac4fb6a2e048046711dbf9bc17\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"MonadSwapAggregatorV2":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newCollector","type":"address"}],"name":"FeeCollectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"TokenSwapped","type":"event"},{"inputs":[],"name":"beanRouter","outputs":[{"internalType":"contract IBeanRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeCollector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_beanRouter","type":"address"},{"internalType":"address","name":"_wmon","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"preferredPairs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newCollector","type":"address"}],"name":"setFeeCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setPreferredPair","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"setSwapFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"swapFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"updateBeanRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newWMON","type":"address"}],"name":"updateWMON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wmon","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_3649":{"entryPoint":null,"id":3649,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_281":{"entryPoint":30,"id":281,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:608:21","nodeType":"YulBlock","src":"0:608:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"188:229:21","nodeType":"YulBlock","src":"188:229:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"205:9:21","nodeType":"YulIdentifier","src":"205:9:21"},{"kind":"number","nativeSrc":"216:2:21","nodeType":"YulLiteral","src":"216:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"198:6:21","nodeType":"YulIdentifier","src":"198:6:21"},"nativeSrc":"198:21:21","nodeType":"YulFunctionCall","src":"198:21:21"},"nativeSrc":"198:21:21","nodeType":"YulExpressionStatement","src":"198:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"239:9:21","nodeType":"YulIdentifier","src":"239:9:21"},{"kind":"number","nativeSrc":"250:2:21","nodeType":"YulLiteral","src":"250:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"235:3:21","nodeType":"YulIdentifier","src":"235:3:21"},"nativeSrc":"235:18:21","nodeType":"YulFunctionCall","src":"235:18:21"},{"kind":"number","nativeSrc":"255:2:21","nodeType":"YulLiteral","src":"255:2:21","type":"","value":"39"}],"functionName":{"name":"mstore","nativeSrc":"228:6:21","nodeType":"YulIdentifier","src":"228:6:21"},"nativeSrc":"228:30:21","nodeType":"YulFunctionCall","src":"228:30:21"},"nativeSrc":"228:30:21","nodeType":"YulExpressionStatement","src":"228:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"278:9:21","nodeType":"YulIdentifier","src":"278:9:21"},{"kind":"number","nativeSrc":"289:2:21","nodeType":"YulLiteral","src":"289:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"274:3:21","nodeType":"YulIdentifier","src":"274:3:21"},"nativeSrc":"274:18:21","nodeType":"YulFunctionCall","src":"274:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nativeSrc":"294:34:21","nodeType":"YulLiteral","src":"294:34:21","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nativeSrc":"267:6:21","nodeType":"YulIdentifier","src":"267:6:21"},"nativeSrc":"267:62:21","nodeType":"YulFunctionCall","src":"267:62:21"},"nativeSrc":"267:62:21","nodeType":"YulExpressionStatement","src":"267:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"349:9:21","nodeType":"YulIdentifier","src":"349:9:21"},{"kind":"number","nativeSrc":"360:2:21","nodeType":"YulLiteral","src":"360:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"345:3:21","nodeType":"YulIdentifier","src":"345:3:21"},"nativeSrc":"345:18:21","nodeType":"YulFunctionCall","src":"345:18:21"},{"hexValue":"616c697a696e67","kind":"string","nativeSrc":"365:9:21","nodeType":"YulLiteral","src":"365:9:21","type":"","value":"alizing"}],"functionName":{"name":"mstore","nativeSrc":"338:6:21","nodeType":"YulIdentifier","src":"338:6:21"},"nativeSrc":"338:37:21","nodeType":"YulFunctionCall","src":"338:37:21"},"nativeSrc":"338:37:21","nodeType":"YulExpressionStatement","src":"338:37:21"},{"nativeSrc":"384:27:21","nodeType":"YulAssignment","src":"384:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"396:9:21","nodeType":"YulIdentifier","src":"396:9:21"},{"kind":"number","nativeSrc":"407:3:21","nodeType":"YulLiteral","src":"407:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"392:3:21","nodeType":"YulIdentifier","src":"392:3:21"},"nativeSrc":"392:19:21","nodeType":"YulFunctionCall","src":"392:19:21"},"variableNames":[{"name":"tail","nativeSrc":"384:4:21","nodeType":"YulIdentifier","src":"384:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:403:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"165:9:21","nodeType":"YulTypedName","src":"165:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"179:4:21","nodeType":"YulTypedName","src":"179:4:21","type":""}],"src":"14:403:21"},{"body":{"nativeSrc":"519:87:21","nodeType":"YulBlock","src":"519:87:21","statements":[{"nativeSrc":"529:26:21","nodeType":"YulAssignment","src":"529:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"541:9:21","nodeType":"YulIdentifier","src":"541:9:21"},{"kind":"number","nativeSrc":"552:2:21","nodeType":"YulLiteral","src":"552:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"537:3:21","nodeType":"YulIdentifier","src":"537:3:21"},"nativeSrc":"537:18:21","nodeType":"YulFunctionCall","src":"537:18:21"},"variableNames":[{"name":"tail","nativeSrc":"529:4:21","nodeType":"YulIdentifier","src":"529:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"571:9:21","nodeType":"YulIdentifier","src":"571:9:21"},{"arguments":[{"name":"value0","nativeSrc":"586:6:21","nodeType":"YulIdentifier","src":"586:6:21"},{"kind":"number","nativeSrc":"594:4:21","nodeType":"YulLiteral","src":"594:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"582:3:21","nodeType":"YulIdentifier","src":"582:3:21"},"nativeSrc":"582:17:21","nodeType":"YulFunctionCall","src":"582:17:21"}],"functionName":{"name":"mstore","nativeSrc":"564:6:21","nodeType":"YulIdentifier","src":"564:6:21"},"nativeSrc":"564:36:21","nodeType":"YulFunctionCall","src":"564:36:21"},"nativeSrc":"564:36:21","nodeType":"YulExpressionStatement","src":"564:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"422:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"488:9:21","nodeType":"YulTypedName","src":"488:9:21","type":""},{"name":"value0","nativeSrc":"499:6:21","nodeType":"YulTypedName","src":"499:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"510:4:21","nodeType":"YulTypedName","src":"510:4:21","type":""}],"src":"422:184:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611795806100ec6000396000f3fe6080604052600436106100f75760003560e01c80638da5cb5b1161008a578063af7be3d711610059578063af7be3d714610299578063c415b95c146102d9578063f2fde38b146102f9578063fe0291561461031957600080fd5b80638da5cb5b1461021b5780639b69c7c814610239578063a42dce8014610259578063ac29e1a11461027957600080fd5b8063715018a6116100c6578063715018a61461018e578063761de586146101a35780637d86b8a5146101c3578063858845d9146101fb57600080fd5b806334e1990714610103578063485cc955146101255780634aa066521461014557806354cf2aeb1461017857600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004611394565b61032c565b005b34801561013157600080fd5b506101236101403660046113c9565b6103b5565b34801561015157600080fd5b506101656101603660046113fc565b610508565b6040519081526020015b60405180910390f35b34801561018457600080fd5b5061016560675481565b34801561019a57600080fd5b506101236105ee565b3480156101af57600080fd5b506101236101be366004611446565b610602565b3480156101cf57600080fd5b506066546101e3906001600160a01b031681565b6040516001600160a01b03909116815260200161016f565b34801561020757600080fd5b5061012361021636600461148d565b610642565b34801561022757600080fd5b506033546001600160a01b03166101e3565b34801561024557600080fd5b5061012361025436600461148d565b6106bb565b34801561026557600080fd5b5061012361027436600461148d565b610732565b34801561028557600080fd5b506065546101e3906001600160a01b031681565b3480156102a557600080fd5b506102c96102b436600461148d565b60696020526000908152604090205460ff1681565b604051901515815260200161016f565b3480156102e557600080fd5b506068546101e3906001600160a01b031681565b34801561030557600080fd5b5061012361031436600461148d565b6107d0565b6101656103273660046114a8565b610849565b610334610a7b565b60648111156103795760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b60678190556040518181527f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76906020015b60405180910390a150565b600054610100900460ff16158080156103d55750600054600160ff909116105b806103ef5750303b1580156103ef575060005460ff166001145b6104525760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610370565b6000805460ff191660011790558015610475576000805461ff0019166101001790555b61047d610ad5565b606580546001600160a01b038086166001600160a01b0319928316179092556066805492851692821692909217909155601e60675560688054909116331790558015610503576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000806105158585610b04565b60655460405163d06ca61f60e01b81529192506000916001600160a01b039091169063d06ca61f9061054d908790869060040161152f565b600060405180830381865afa15801561056a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105929190810190611566565b905080600182516105a3919061163a565b815181106105b3576105b361164d565b602002602001015192506127106067546127106105d0919061163a565b6105da9085611663565b6105e4919061167a565b9695505050505050565b6105f6610a7b565b6106006000610ce3565b565b61060a610a7b565b60006106168484610d35565b6001600160a01b03166000908152606960205260409020805460ff191692151592909217909155505050565b61064a610a7b565b6001600160a01b0381166106995760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420726f75746572206164647265737360501b6044820152606401610370565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6106c3610a7b565b6001600160a01b0381166107105760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420574d4f4e206164647265737360601b6044820152606401610370565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61073a610a7b565b6001600160a01b0381166107825760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610370565b606880546001600160a01b0319166001600160a01b0383169081179091556040519081527fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f906020016103aa565b6107d8610a7b565b6001600160a01b03811661083d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610370565b61084681610ce3565b50565b600080831161088f5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610370565b836001600160a01b0316856001600160a01b0316036108de5760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b6044820152606401610370565b6001600160a01b038516610942578234146109305760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081353d388185b5bdd5b9d60721b6044820152606401610370565b61093b848484610ddb565b905061096a565b6001600160a01b03841661095b5761093b858484610f26565b6109678585858561115a565b90505b60006127106067548361097d9190611663565b610987919061167a565b90506000811180156109a157506001600160a01b03851615155b15610a1f5760685460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529086169063a9059cbb906044016020604051808303816000875af11580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d919061169c565b505b60408051858152602081018490529081018290526001600160a01b03808716919088169033907fe2bd3f957a9c89d5a58b7bf40f44d9249375545ef13817461d1c08e7f71e3a459060600160405180910390a450949350505050565b6033546001600160a01b031633146106005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610370565b600054610100900460ff16610afc5760405162461bcd60e51b8152600401610370906116b9565b610600611364565b60606001600160a01b038316610b23576066546001600160a01b031692505b6001600160a01b038216610b40576066546001600160a01b031691505b6000610b4c8484610d35565b6001600160a01b03811660009081526069602052604090205490915060ff1615610c0a57600060025b604051908082528060200260200182016040528015610b9e578160200160208202803683370190505b5090508481600081518110610bb557610bb561164d565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600181518110610be957610be961164d565b6001600160a01b03909216602092830291909101909101529150610cdd9050565b6066546001600160a01b0385811691161480610c3357506066546001600160a01b038481169116145b15610c415760006002610b75565b60408051600380825260808201909252600091602082016060803683370190505090508481600081518110610c7857610c7861164d565b6001600160a01b039283166020918202929092010152606654825191169082906001908110610ca957610ca961164d565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600281518110610be957610be961164d565b92915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000816001600160a01b0316836001600160a01b031610610d94576040516bffffffffffffffffffffffff19606084811b8216602084015285901b16603482015260480160405160208183030381529060405280519060200120610dd4565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b166034820152604801604051602081830303815290604052805190602001205b9392505050565b60408051600280825260608201835260009283929190602083019080368337505060665482519293506001600160a01b031691839150600090610e2057610e2061164d565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610e5457610e5461164d565b6001600160a01b03928316602091820292909201015260655460009116637ff36ab586868533610e86426104b0611704565b6040518663ffffffff1660e01b8152600401610ea59493929190611717565b60006040518083038185885af1158015610ec3573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610eec9190810190611566565b905060008160018351610eff919061163a565b81518110610f0f57610f0f61164d565b602002602001015190508093505050509392505050565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa0919061169c565b610fe35760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b6044820152606401610370565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529085169063095ea7b3906044016020604051808303816000875af1158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a919061169c565b5060408051600280825260608201835260009260208301908036833701905050905084816000815181106110905761109061164d565b6001600160a01b0392831660209182029290920101526066548251911690829060019081106110c1576110c161164d565b6001600160a01b039283166020918202929092010152606554600091166318cbafe5868685336110f3426104b0611704565b6040518663ffffffff1660e01b815260040161111395949392919061174c565b6000604051808303816000875af1158015611132573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eec9190810190611566565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038616906323b872dd906064016020604051808303816000875af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d4919061169c565b6112175760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b6044820152606401610370565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af115801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e919061169c565b50600061129b8686610b04565b6065549091506000906001600160a01b03166338ed1739868685336112c2426104b0611704565b6040518663ffffffff1660e01b81526004016112e295949392919061174c565b6000604051808303816000875af1158015611301573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113299190810190611566565b90506000816001835161133c919061163a565b8151811061134c5761134c61164d565b60200260200101519050809350505050949350505050565b600054610100900460ff1661138b5760405162461bcd60e51b8152600401610370906116b9565b61060033610ce3565b6000602082840312156113a657600080fd5b5035919050565b80356001600160a01b03811681146113c457600080fd5b919050565b600080604083850312156113dc57600080fd5b6113e5836113ad565b91506113f3602084016113ad565b90509250929050565b60008060006060848603121561141157600080fd5b61141a846113ad565b9250611428602085016113ad565b9150604084013590509250925092565b801515811461084657600080fd5b60008060006060848603121561145b57600080fd5b611464846113ad565b9250611472602085016113ad565b9150604084013561148281611438565b809150509250925092565b60006020828403121561149f57600080fd5b610dd4826113ad565b600080600080608085870312156114be57600080fd5b6114c7856113ad565b93506114d5602086016113ad565b93969395505050506040820135916060013590565b60008151808452602080850194506020840160005b838110156115245781516001600160a01b0316875295820195908201906001016114ff565b509495945050505050565b82815260406020820152600061154860408301846114ea565b949350505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561157957600080fd5b825167ffffffffffffffff8082111561159157600080fd5b818501915085601f8301126115a557600080fd5b8151818111156115b7576115b7611550565b8060051b604051601f19603f830116810181811085821117156115dc576115dc611550565b6040529182528482019250838101850191888311156115fa57600080fd5b938501935b82851015611618578451845293850193928501926115ff565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610cdd57610cdd611624565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610cdd57610cdd611624565b60008261169757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156116ae57600080fd5b8151610dd481611438565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80820180821115610cdd57610cdd611624565b84815260806020820152600061173060808301866114ea565b6001600160a01b03949094166040830152506060015292915050565b85815284602082015260a06040820152600061176b60a08301866114ea565b6001600160a01b039490941660608301525060800152939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19 PUSH2 0x1E JUMP JUMPDEST PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH2 0x1795 DUP1 PUSH2 0xEC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAF7BE3D7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAF7BE3D7 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xFE029156 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x9B69C7C8 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xAC29E1A1 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x761DE586 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x7D86B8A5 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x858845D9 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34E19907 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x54CF2AEB EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x5EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x66 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x68 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x334 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x67 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8C4D35E54A3F2EF1134138FD8EA3DAEE6A3C89E10D2665996BABDF70261E2C76 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3D5 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3EF JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x47D PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1E PUSH1 0x67 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x515 DUP6 DUP6 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x54D SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x152F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x592 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x5B3 JUMPI PUSH2 0x5B3 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x67 SLOAD PUSH2 0x2710 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x5DA SWAP1 DUP6 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x600 PUSH1 0x0 PUSH2 0xCE3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x60A PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 DUP5 DUP5 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x64A PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420726F757465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6C3 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420574D4F4E2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x73A PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x68 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F SWAP1 PUSH1 0x20 ADD PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x7D8 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x846 DUP2 PUSH2 0xCE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x942 JUMPI DUP3 CALLVALUE EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081353D388185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x93B DUP5 DUP5 DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP1 POP PUSH2 0x96A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x95B JUMPI PUSH2 0x93B DUP6 DUP5 DUP5 PUSH2 0xF26 JUMP JUMPDEST PUSH2 0x967 DUP6 DUP6 DUP6 DUP6 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x67 SLOAD DUP4 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x9A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xA1F JUMPI PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP2 SWAP1 DUP9 AND SWAP1 CALLER SWAP1 PUSH32 0xE2BD3F957A9C89D5A58B7BF40F44D9249375545EF13817461D1C08E7F71E3A45 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x600 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB40 JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0xB4C DUP5 DUP5 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB9E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBB5 JUMPI PUSH2 0xBB5 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP2 POP PUSH2 0xCDD SWAP1 POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xC33 JUMPI POP PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC78 JUMPI PUSH2 0xC78 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xCA9 JUMPI PUSH2 0xCA9 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0x164D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP6 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x66 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xE20 JUMPI PUSH2 0xE20 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE54 JUMPI PUSH2 0xE54 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x7FF36AB5 DUP7 DUP7 DUP6 CALLER PUSH2 0xE86 TIMESTAMP PUSH2 0x4B0 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEEC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xF0F JUMPI PUSH2 0xF0F PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1090 JUMPI PUSH2 0x1090 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x10C1 JUMPI PUSH2 0x10C1 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x18CBAFE5 DUP7 DUP7 DUP6 CALLER PUSH2 0x10F3 TIMESTAMP PUSH2 0x4B0 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEEC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x129B DUP7 DUP7 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x65 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP7 DUP7 DUP6 CALLER PUSH2 0x12C2 TIMESTAMP PUSH2 0x4B0 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1329 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x134C JUMPI PUSH2 0x134C PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x138B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x600 CALLER PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E5 DUP4 PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH2 0x13F3 PUSH1 0x20 DUP5 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141A DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP PUSH2 0x1428 PUSH1 0x20 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x145B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1464 DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP PUSH2 0x1472 PUSH1 0x20 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1482 DUP2 PUSH2 0x1438 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD4 DUP3 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C7 DUP6 PUSH2 0x13AD JUMP JUMPDEST SWAP4 POP PUSH2 0x14D5 PUSH1 0x20 DUP7 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1524 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14FF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1548 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B7 PUSH2 0x1550 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x15DC JUMPI PUSH2 0x15DC PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1618 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x15FF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0x1624 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1697 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDD4 DUP2 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0x1624 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1730 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x176B PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1367:7358:20:-:0;;;2145:53;;;;;;;;;-1:-1:-1;2169:22:20;:20;:22::i;:::-;1367:7358;;5939:280:1;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:1;;216:2:21;5998:66:1;;;198:21:21;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:21;;;338:37;392:19;;5998:66:1;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:1;6140:15;6125:30;;;;;;6174:28;;564:36:21;;;6174:28:1;;552:2:21;537:18;6174:28:1;;;;;;;6074:139;5939:280::o;422:184:21:-;1367:7358:20;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_4332":{"entryPoint":null,"id":4332,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_26":{"entryPoint":2773,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_37":{"entryPoint":4964,"id":37,"parameterSlots":0,"returnSlots":0},"@_checkOwner_68":{"entryPoint":2683,"id":68,"parameterSlots":0,"returnSlots":0},"@_getOptimalPath_3985":{"entryPoint":2820,"id":3985,"parameterSlots":2,"returnSlots":1},"@_getPairKey_3793":{"entryPoint":3381,"id":3793,"parameterSlots":2,"returnSlots":1},"@_msgSender_657":{"entryPoint":null,"id":657,"parameterSlots":0,"returnSlots":1},"@_swapMonForTokens_4157":{"entryPoint":3547,"id":4157,"parameterSlots":3,"returnSlots":1},"@_swapTokensForMon_4248":{"entryPoint":3878,"id":4248,"parameterSlots":3,"returnSlots":1},"@_swapTokens_4328":{"entryPoint":4442,"id":4328,"parameterSlots":4,"returnSlots":1},"@_transferOwnership_125":{"entryPoint":3299,"id":125,"parameterSlots":1,"returnSlots":0},"@beanRouter_3625":{"entryPoint":null,"id":3625,"parameterSlots":0,"returnSlots":0},"@feeCollector_3637":{"entryPoint":null,"id":3637,"parameterSlots":0,"returnSlots":0},"@getAmountOut_3846":{"entryPoint":1288,"id":3846,"parameterSlots":3,"returnSlots":1},"@initialize_3681":{"entryPoint":949,"id":3681,"parameterSlots":2,"returnSlots":0},"@isContract_318":{"entryPoint":null,"id":318,"parameterSlots":1,"returnSlots":1},"@owner_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":1},"@preferredPairs_3641":{"entryPoint":null,"id":3641,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_82":{"entryPoint":1518,"id":82,"parameterSlots":0,"returnSlots":0},"@setFeeCollector_3730":{"entryPoint":1842,"id":3730,"parameterSlots":1,"returnSlots":0},"@setPreferredPair_3764":{"entryPoint":1538,"id":3764,"parameterSlots":3,"returnSlots":0},"@setSwapFee_3704":{"entryPoint":812,"id":3704,"parameterSlots":1,"returnSlots":0},"@swapFee_3635":{"entryPoint":null,"id":3635,"parameterSlots":0,"returnSlots":0},"@swap_4092":{"entryPoint":2121,"id":4092,"parameterSlots":4,"returnSlots":1},"@transferOwnership_105":{"entryPoint":2000,"id":105,"parameterSlots":1,"returnSlots":0},"@updateBeanRouter_4356":{"entryPoint":1602,"id":4356,"parameterSlots":1,"returnSlots":0},"@updateWMON_4378":{"entryPoint":1723,"id":4378,"parameterSlots":1,"returnSlots":0},"@wmon_3627":{"entryPoint":null,"id":3627,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5065,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_bool":{"entryPoint":5190,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5116,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":5288,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":5478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":5354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBeanRouter_$3596__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5423,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":5911,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":5964,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5892,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5754,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5731,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5690,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5668,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5709,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5456,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":5176,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:13082:21","nodeType":"YulBlock","src":"0:13082:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"84:110:21","nodeType":"YulBlock","src":"84:110:21","statements":[{"body":{"nativeSrc":"130:16:21","nodeType":"YulBlock","src":"130:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"139:1:21","nodeType":"YulLiteral","src":"139:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"142:1:21","nodeType":"YulLiteral","src":"142:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"132:6:21","nodeType":"YulIdentifier","src":"132:6:21"},"nativeSrc":"132:12:21","nodeType":"YulFunctionCall","src":"132:12:21"},"nativeSrc":"132:12:21","nodeType":"YulExpressionStatement","src":"132:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"105:7:21","nodeType":"YulIdentifier","src":"105:7:21"},{"name":"headStart","nativeSrc":"114:9:21","nodeType":"YulIdentifier","src":"114:9:21"}],"functionName":{"name":"sub","nativeSrc":"101:3:21","nodeType":"YulIdentifier","src":"101:3:21"},"nativeSrc":"101:23:21","nodeType":"YulFunctionCall","src":"101:23:21"},{"kind":"number","nativeSrc":"126:2:21","nodeType":"YulLiteral","src":"126:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"97:3:21","nodeType":"YulIdentifier","src":"97:3:21"},"nativeSrc":"97:32:21","nodeType":"YulFunctionCall","src":"97:32:21"},"nativeSrc":"94:52:21","nodeType":"YulIf","src":"94:52:21"},{"nativeSrc":"155:33:21","nodeType":"YulAssignment","src":"155:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"178:9:21","nodeType":"YulIdentifier","src":"178:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"165:12:21","nodeType":"YulIdentifier","src":"165:12:21"},"nativeSrc":"165:23:21","nodeType":"YulFunctionCall","src":"165:23:21"},"variableNames":[{"name":"value0","nativeSrc":"155:6:21","nodeType":"YulIdentifier","src":"155:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"14:180:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50:9:21","nodeType":"YulTypedName","src":"50:9:21","type":""},{"name":"dataEnd","nativeSrc":"61:7:21","nodeType":"YulTypedName","src":"61:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"73:6:21","nodeType":"YulTypedName","src":"73:6:21","type":""}],"src":"14:180:21"},{"body":{"nativeSrc":"248:124:21","nodeType":"YulBlock","src":"248:124:21","statements":[{"nativeSrc":"258:29:21","nodeType":"YulAssignment","src":"258:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"280:6:21","nodeType":"YulIdentifier","src":"280:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"267:12:21","nodeType":"YulIdentifier","src":"267:12:21"},"nativeSrc":"267:20:21","nodeType":"YulFunctionCall","src":"267:20:21"},"variableNames":[{"name":"value","nativeSrc":"258:5:21","nodeType":"YulIdentifier","src":"258:5:21"}]},{"body":{"nativeSrc":"350:16:21","nodeType":"YulBlock","src":"350:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"359:1:21","nodeType":"YulLiteral","src":"359:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"362:1:21","nodeType":"YulLiteral","src":"362:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"352:6:21","nodeType":"YulIdentifier","src":"352:6:21"},"nativeSrc":"352:12:21","nodeType":"YulFunctionCall","src":"352:12:21"},"nativeSrc":"352:12:21","nodeType":"YulExpressionStatement","src":"352:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"309:5:21","nodeType":"YulIdentifier","src":"309:5:21"},{"arguments":[{"name":"value","nativeSrc":"320:5:21","nodeType":"YulIdentifier","src":"320:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"335:3:21","nodeType":"YulLiteral","src":"335:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"340:1:21","nodeType":"YulLiteral","src":"340:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"331:3:21","nodeType":"YulIdentifier","src":"331:3:21"},"nativeSrc":"331:11:21","nodeType":"YulFunctionCall","src":"331:11:21"},{"kind":"number","nativeSrc":"344:1:21","nodeType":"YulLiteral","src":"344:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"327:3:21","nodeType":"YulIdentifier","src":"327:3:21"},"nativeSrc":"327:19:21","nodeType":"YulFunctionCall","src":"327:19:21"}],"functionName":{"name":"and","nativeSrc":"316:3:21","nodeType":"YulIdentifier","src":"316:3:21"},"nativeSrc":"316:31:21","nodeType":"YulFunctionCall","src":"316:31:21"}],"functionName":{"name":"eq","nativeSrc":"306:2:21","nodeType":"YulIdentifier","src":"306:2:21"},"nativeSrc":"306:42:21","nodeType":"YulFunctionCall","src":"306:42:21"}],"functionName":{"name":"iszero","nativeSrc":"299:6:21","nodeType":"YulIdentifier","src":"299:6:21"},"nativeSrc":"299:50:21","nodeType":"YulFunctionCall","src":"299:50:21"},"nativeSrc":"296:70:21","nodeType":"YulIf","src":"296:70:21"}]},"name":"abi_decode_address","nativeSrc":"199:173:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"227:6:21","nodeType":"YulTypedName","src":"227:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"238:5:21","nodeType":"YulTypedName","src":"238:5:21","type":""}],"src":"199:173:21"},{"body":{"nativeSrc":"464:173:21","nodeType":"YulBlock","src":"464:173:21","statements":[{"body":{"nativeSrc":"510:16:21","nodeType":"YulBlock","src":"510:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"519:1:21","nodeType":"YulLiteral","src":"519:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"522:1:21","nodeType":"YulLiteral","src":"522:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"512:6:21","nodeType":"YulIdentifier","src":"512:6:21"},"nativeSrc":"512:12:21","nodeType":"YulFunctionCall","src":"512:12:21"},"nativeSrc":"512:12:21","nodeType":"YulExpressionStatement","src":"512:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"485:7:21","nodeType":"YulIdentifier","src":"485:7:21"},{"name":"headStart","nativeSrc":"494:9:21","nodeType":"YulIdentifier","src":"494:9:21"}],"functionName":{"name":"sub","nativeSrc":"481:3:21","nodeType":"YulIdentifier","src":"481:3:21"},"nativeSrc":"481:23:21","nodeType":"YulFunctionCall","src":"481:23:21"},{"kind":"number","nativeSrc":"506:2:21","nodeType":"YulLiteral","src":"506:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"477:3:21","nodeType":"YulIdentifier","src":"477:3:21"},"nativeSrc":"477:32:21","nodeType":"YulFunctionCall","src":"477:32:21"},"nativeSrc":"474:52:21","nodeType":"YulIf","src":"474:52:21"},{"nativeSrc":"535:39:21","nodeType":"YulAssignment","src":"535:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"564:9:21","nodeType":"YulIdentifier","src":"564:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"545:18:21","nodeType":"YulIdentifier","src":"545:18:21"},"nativeSrc":"545:29:21","nodeType":"YulFunctionCall","src":"545:29:21"},"variableNames":[{"name":"value0","nativeSrc":"535:6:21","nodeType":"YulIdentifier","src":"535:6:21"}]},{"nativeSrc":"583:48:21","nodeType":"YulAssignment","src":"583:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"616:9:21","nodeType":"YulIdentifier","src":"616:9:21"},{"kind":"number","nativeSrc":"627:2:21","nodeType":"YulLiteral","src":"627:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"612:3:21","nodeType":"YulIdentifier","src":"612:3:21"},"nativeSrc":"612:18:21","nodeType":"YulFunctionCall","src":"612:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"593:18:21","nodeType":"YulIdentifier","src":"593:18:21"},"nativeSrc":"593:38:21","nodeType":"YulFunctionCall","src":"593:38:21"},"variableNames":[{"name":"value1","nativeSrc":"583:6:21","nodeType":"YulIdentifier","src":"583:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"377:260:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"422:9:21","nodeType":"YulTypedName","src":"422:9:21","type":""},{"name":"dataEnd","nativeSrc":"433:7:21","nodeType":"YulTypedName","src":"433:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"445:6:21","nodeType":"YulTypedName","src":"445:6:21","type":""},{"name":"value1","nativeSrc":"453:6:21","nodeType":"YulTypedName","src":"453:6:21","type":""}],"src":"377:260:21"},{"body":{"nativeSrc":"746:224:21","nodeType":"YulBlock","src":"746:224:21","statements":[{"body":{"nativeSrc":"792:16:21","nodeType":"YulBlock","src":"792:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"801:1:21","nodeType":"YulLiteral","src":"801:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"804:1:21","nodeType":"YulLiteral","src":"804:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"794:6:21","nodeType":"YulIdentifier","src":"794:6:21"},"nativeSrc":"794:12:21","nodeType":"YulFunctionCall","src":"794:12:21"},"nativeSrc":"794:12:21","nodeType":"YulExpressionStatement","src":"794:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"767:7:21","nodeType":"YulIdentifier","src":"767:7:21"},{"name":"headStart","nativeSrc":"776:9:21","nodeType":"YulIdentifier","src":"776:9:21"}],"functionName":{"name":"sub","nativeSrc":"763:3:21","nodeType":"YulIdentifier","src":"763:3:21"},"nativeSrc":"763:23:21","nodeType":"YulFunctionCall","src":"763:23:21"},{"kind":"number","nativeSrc":"788:2:21","nodeType":"YulLiteral","src":"788:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"759:3:21","nodeType":"YulIdentifier","src":"759:3:21"},"nativeSrc":"759:32:21","nodeType":"YulFunctionCall","src":"759:32:21"},"nativeSrc":"756:52:21","nodeType":"YulIf","src":"756:52:21"},{"nativeSrc":"817:39:21","nodeType":"YulAssignment","src":"817:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"846:9:21","nodeType":"YulIdentifier","src":"846:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"827:18:21","nodeType":"YulIdentifier","src":"827:18:21"},"nativeSrc":"827:29:21","nodeType":"YulFunctionCall","src":"827:29:21"},"variableNames":[{"name":"value0","nativeSrc":"817:6:21","nodeType":"YulIdentifier","src":"817:6:21"}]},{"nativeSrc":"865:48:21","nodeType":"YulAssignment","src":"865:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"898:9:21","nodeType":"YulIdentifier","src":"898:9:21"},{"kind":"number","nativeSrc":"909:2:21","nodeType":"YulLiteral","src":"909:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"894:3:21","nodeType":"YulIdentifier","src":"894:3:21"},"nativeSrc":"894:18:21","nodeType":"YulFunctionCall","src":"894:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"875:18:21","nodeType":"YulIdentifier","src":"875:18:21"},"nativeSrc":"875:38:21","nodeType":"YulFunctionCall","src":"875:38:21"},"variableNames":[{"name":"value1","nativeSrc":"865:6:21","nodeType":"YulIdentifier","src":"865:6:21"}]},{"nativeSrc":"922:42:21","nodeType":"YulAssignment","src":"922:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"949:9:21","nodeType":"YulIdentifier","src":"949:9:21"},{"kind":"number","nativeSrc":"960:2:21","nodeType":"YulLiteral","src":"960:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"945:3:21","nodeType":"YulIdentifier","src":"945:3:21"},"nativeSrc":"945:18:21","nodeType":"YulFunctionCall","src":"945:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"932:12:21","nodeType":"YulIdentifier","src":"932:12:21"},"nativeSrc":"932:32:21","nodeType":"YulFunctionCall","src":"932:32:21"},"variableNames":[{"name":"value2","nativeSrc":"922:6:21","nodeType":"YulIdentifier","src":"922:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"642:328:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"696:9:21","nodeType":"YulTypedName","src":"696:9:21","type":""},{"name":"dataEnd","nativeSrc":"707:7:21","nodeType":"YulTypedName","src":"707:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"719:6:21","nodeType":"YulTypedName","src":"719:6:21","type":""},{"name":"value1","nativeSrc":"727:6:21","nodeType":"YulTypedName","src":"727:6:21","type":""},{"name":"value2","nativeSrc":"735:6:21","nodeType":"YulTypedName","src":"735:6:21","type":""}],"src":"642:328:21"},{"body":{"nativeSrc":"1076:76:21","nodeType":"YulBlock","src":"1076:76:21","statements":[{"nativeSrc":"1086:26:21","nodeType":"YulAssignment","src":"1086:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1098:9:21","nodeType":"YulIdentifier","src":"1098:9:21"},{"kind":"number","nativeSrc":"1109:2:21","nodeType":"YulLiteral","src":"1109:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1094:3:21","nodeType":"YulIdentifier","src":"1094:3:21"},"nativeSrc":"1094:18:21","nodeType":"YulFunctionCall","src":"1094:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1086:4:21","nodeType":"YulIdentifier","src":"1086:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1128:9:21","nodeType":"YulIdentifier","src":"1128:9:21"},{"name":"value0","nativeSrc":"1139:6:21","nodeType":"YulIdentifier","src":"1139:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1121:6:21","nodeType":"YulIdentifier","src":"1121:6:21"},"nativeSrc":"1121:25:21","nodeType":"YulFunctionCall","src":"1121:25:21"},"nativeSrc":"1121:25:21","nodeType":"YulExpressionStatement","src":"1121:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"975:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1045:9:21","nodeType":"YulTypedName","src":"1045:9:21","type":""},{"name":"value0","nativeSrc":"1056:6:21","nodeType":"YulTypedName","src":"1056:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1067:4:21","nodeType":"YulTypedName","src":"1067:4:21","type":""}],"src":"975:177:21"},{"body":{"nativeSrc":"1199:76:21","nodeType":"YulBlock","src":"1199:76:21","statements":[{"body":{"nativeSrc":"1253:16:21","nodeType":"YulBlock","src":"1253:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1262:1:21","nodeType":"YulLiteral","src":"1262:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1265:1:21","nodeType":"YulLiteral","src":"1265:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1255:6:21","nodeType":"YulIdentifier","src":"1255:6:21"},"nativeSrc":"1255:12:21","nodeType":"YulFunctionCall","src":"1255:12:21"},"nativeSrc":"1255:12:21","nodeType":"YulExpressionStatement","src":"1255:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1222:5:21","nodeType":"YulIdentifier","src":"1222:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1243:5:21","nodeType":"YulIdentifier","src":"1243:5:21"}],"functionName":{"name":"iszero","nativeSrc":"1236:6:21","nodeType":"YulIdentifier","src":"1236:6:21"},"nativeSrc":"1236:13:21","nodeType":"YulFunctionCall","src":"1236:13:21"}],"functionName":{"name":"iszero","nativeSrc":"1229:6:21","nodeType":"YulIdentifier","src":"1229:6:21"},"nativeSrc":"1229:21:21","nodeType":"YulFunctionCall","src":"1229:21:21"}],"functionName":{"name":"eq","nativeSrc":"1219:2:21","nodeType":"YulIdentifier","src":"1219:2:21"},"nativeSrc":"1219:32:21","nodeType":"YulFunctionCall","src":"1219:32:21"}],"functionName":{"name":"iszero","nativeSrc":"1212:6:21","nodeType":"YulIdentifier","src":"1212:6:21"},"nativeSrc":"1212:40:21","nodeType":"YulFunctionCall","src":"1212:40:21"},"nativeSrc":"1209:60:21","nodeType":"YulIf","src":"1209:60:21"}]},"name":"validator_revert_bool","nativeSrc":"1157:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1188:5:21","nodeType":"YulTypedName","src":"1188:5:21","type":""}],"src":"1157:118:21"},{"body":{"nativeSrc":"1381:288:21","nodeType":"YulBlock","src":"1381:288:21","statements":[{"body":{"nativeSrc":"1427:16:21","nodeType":"YulBlock","src":"1427:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1436:1:21","nodeType":"YulLiteral","src":"1436:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1439:1:21","nodeType":"YulLiteral","src":"1439:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1429:6:21","nodeType":"YulIdentifier","src":"1429:6:21"},"nativeSrc":"1429:12:21","nodeType":"YulFunctionCall","src":"1429:12:21"},"nativeSrc":"1429:12:21","nodeType":"YulExpressionStatement","src":"1429:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1402:7:21","nodeType":"YulIdentifier","src":"1402:7:21"},{"name":"headStart","nativeSrc":"1411:9:21","nodeType":"YulIdentifier","src":"1411:9:21"}],"functionName":{"name":"sub","nativeSrc":"1398:3:21","nodeType":"YulIdentifier","src":"1398:3:21"},"nativeSrc":"1398:23:21","nodeType":"YulFunctionCall","src":"1398:23:21"},{"kind":"number","nativeSrc":"1423:2:21","nodeType":"YulLiteral","src":"1423:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1394:3:21","nodeType":"YulIdentifier","src":"1394:3:21"},"nativeSrc":"1394:32:21","nodeType":"YulFunctionCall","src":"1394:32:21"},"nativeSrc":"1391:52:21","nodeType":"YulIf","src":"1391:52:21"},{"nativeSrc":"1452:39:21","nodeType":"YulAssignment","src":"1452:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1481:9:21","nodeType":"YulIdentifier","src":"1481:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1462:18:21","nodeType":"YulIdentifier","src":"1462:18:21"},"nativeSrc":"1462:29:21","nodeType":"YulFunctionCall","src":"1462:29:21"},"variableNames":[{"name":"value0","nativeSrc":"1452:6:21","nodeType":"YulIdentifier","src":"1452:6:21"}]},{"nativeSrc":"1500:48:21","nodeType":"YulAssignment","src":"1500:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1533:9:21","nodeType":"YulIdentifier","src":"1533:9:21"},{"kind":"number","nativeSrc":"1544:2:21","nodeType":"YulLiteral","src":"1544:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1529:3:21","nodeType":"YulIdentifier","src":"1529:3:21"},"nativeSrc":"1529:18:21","nodeType":"YulFunctionCall","src":"1529:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1510:18:21","nodeType":"YulIdentifier","src":"1510:18:21"},"nativeSrc":"1510:38:21","nodeType":"YulFunctionCall","src":"1510:38:21"},"variableNames":[{"name":"value1","nativeSrc":"1500:6:21","nodeType":"YulIdentifier","src":"1500:6:21"}]},{"nativeSrc":"1557:45:21","nodeType":"YulVariableDeclaration","src":"1557:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1587:9:21","nodeType":"YulIdentifier","src":"1587:9:21"},{"kind":"number","nativeSrc":"1598:2:21","nodeType":"YulLiteral","src":"1598:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1583:3:21","nodeType":"YulIdentifier","src":"1583:3:21"},"nativeSrc":"1583:18:21","nodeType":"YulFunctionCall","src":"1583:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1570:12:21","nodeType":"YulIdentifier","src":"1570:12:21"},"nativeSrc":"1570:32:21","nodeType":"YulFunctionCall","src":"1570:32:21"},"variables":[{"name":"value","nativeSrc":"1561:5:21","nodeType":"YulTypedName","src":"1561:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1633:5:21","nodeType":"YulIdentifier","src":"1633:5:21"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"1611:21:21","nodeType":"YulIdentifier","src":"1611:21:21"},"nativeSrc":"1611:28:21","nodeType":"YulFunctionCall","src":"1611:28:21"},"nativeSrc":"1611:28:21","nodeType":"YulExpressionStatement","src":"1611:28:21"},{"nativeSrc":"1648:15:21","nodeType":"YulAssignment","src":"1648:15:21","value":{"name":"value","nativeSrc":"1658:5:21","nodeType":"YulIdentifier","src":"1658:5:21"},"variableNames":[{"name":"value2","nativeSrc":"1648:6:21","nodeType":"YulIdentifier","src":"1648:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bool","nativeSrc":"1280:389:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1331:9:21","nodeType":"YulTypedName","src":"1331:9:21","type":""},{"name":"dataEnd","nativeSrc":"1342:7:21","nodeType":"YulTypedName","src":"1342:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1354:6:21","nodeType":"YulTypedName","src":"1354:6:21","type":""},{"name":"value1","nativeSrc":"1362:6:21","nodeType":"YulTypedName","src":"1362:6:21","type":""},{"name":"value2","nativeSrc":"1370:6:21","nodeType":"YulTypedName","src":"1370:6:21","type":""}],"src":"1280:389:21"},{"body":{"nativeSrc":"1775:102:21","nodeType":"YulBlock","src":"1775:102:21","statements":[{"nativeSrc":"1785:26:21","nodeType":"YulAssignment","src":"1785:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1797:9:21","nodeType":"YulIdentifier","src":"1797:9:21"},{"kind":"number","nativeSrc":"1808:2:21","nodeType":"YulLiteral","src":"1808:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1793:3:21","nodeType":"YulIdentifier","src":"1793:3:21"},"nativeSrc":"1793:18:21","nodeType":"YulFunctionCall","src":"1793:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1785:4:21","nodeType":"YulIdentifier","src":"1785:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1827:9:21","nodeType":"YulIdentifier","src":"1827:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1842:6:21","nodeType":"YulIdentifier","src":"1842:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1858:3:21","nodeType":"YulLiteral","src":"1858:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1863:1:21","nodeType":"YulLiteral","src":"1863:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1854:3:21","nodeType":"YulIdentifier","src":"1854:3:21"},"nativeSrc":"1854:11:21","nodeType":"YulFunctionCall","src":"1854:11:21"},{"kind":"number","nativeSrc":"1867:1:21","nodeType":"YulLiteral","src":"1867:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1850:3:21","nodeType":"YulIdentifier","src":"1850:3:21"},"nativeSrc":"1850:19:21","nodeType":"YulFunctionCall","src":"1850:19:21"}],"functionName":{"name":"and","nativeSrc":"1838:3:21","nodeType":"YulIdentifier","src":"1838:3:21"},"nativeSrc":"1838:32:21","nodeType":"YulFunctionCall","src":"1838:32:21"}],"functionName":{"name":"mstore","nativeSrc":"1820:6:21","nodeType":"YulIdentifier","src":"1820:6:21"},"nativeSrc":"1820:51:21","nodeType":"YulFunctionCall","src":"1820:51:21"},"nativeSrc":"1820:51:21","nodeType":"YulExpressionStatement","src":"1820:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1674:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1744:9:21","nodeType":"YulTypedName","src":"1744:9:21","type":""},{"name":"value0","nativeSrc":"1755:6:21","nodeType":"YulTypedName","src":"1755:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1766:4:21","nodeType":"YulTypedName","src":"1766:4:21","type":""}],"src":"1674:203:21"},{"body":{"nativeSrc":"1952:116:21","nodeType":"YulBlock","src":"1952:116:21","statements":[{"body":{"nativeSrc":"1998:16:21","nodeType":"YulBlock","src":"1998:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2007:1:21","nodeType":"YulLiteral","src":"2007:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2010:1:21","nodeType":"YulLiteral","src":"2010:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2000:6:21","nodeType":"YulIdentifier","src":"2000:6:21"},"nativeSrc":"2000:12:21","nodeType":"YulFunctionCall","src":"2000:12:21"},"nativeSrc":"2000:12:21","nodeType":"YulExpressionStatement","src":"2000:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1973:7:21","nodeType":"YulIdentifier","src":"1973:7:21"},{"name":"headStart","nativeSrc":"1982:9:21","nodeType":"YulIdentifier","src":"1982:9:21"}],"functionName":{"name":"sub","nativeSrc":"1969:3:21","nodeType":"YulIdentifier","src":"1969:3:21"},"nativeSrc":"1969:23:21","nodeType":"YulFunctionCall","src":"1969:23:21"},{"kind":"number","nativeSrc":"1994:2:21","nodeType":"YulLiteral","src":"1994:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1965:3:21","nodeType":"YulIdentifier","src":"1965:3:21"},"nativeSrc":"1965:32:21","nodeType":"YulFunctionCall","src":"1965:32:21"},"nativeSrc":"1962:52:21","nodeType":"YulIf","src":"1962:52:21"},{"nativeSrc":"2023:39:21","nodeType":"YulAssignment","src":"2023:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2052:9:21","nodeType":"YulIdentifier","src":"2052:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2033:18:21","nodeType":"YulIdentifier","src":"2033:18:21"},"nativeSrc":"2033:29:21","nodeType":"YulFunctionCall","src":"2033:29:21"},"variableNames":[{"name":"value0","nativeSrc":"2023:6:21","nodeType":"YulIdentifier","src":"2023:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1882:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1918:9:21","nodeType":"YulTypedName","src":"1918:9:21","type":""},{"name":"dataEnd","nativeSrc":"1929:7:21","nodeType":"YulTypedName","src":"1929:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1941:6:21","nodeType":"YulTypedName","src":"1941:6:21","type":""}],"src":"1882:186:21"},{"body":{"nativeSrc":"2194:102:21","nodeType":"YulBlock","src":"2194:102:21","statements":[{"nativeSrc":"2204:26:21","nodeType":"YulAssignment","src":"2204:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2216:9:21","nodeType":"YulIdentifier","src":"2216:9:21"},{"kind":"number","nativeSrc":"2227:2:21","nodeType":"YulLiteral","src":"2227:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2212:3:21","nodeType":"YulIdentifier","src":"2212:3:21"},"nativeSrc":"2212:18:21","nodeType":"YulFunctionCall","src":"2212:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2204:4:21","nodeType":"YulIdentifier","src":"2204:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2246:9:21","nodeType":"YulIdentifier","src":"2246:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2261:6:21","nodeType":"YulIdentifier","src":"2261:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2277:3:21","nodeType":"YulLiteral","src":"2277:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"2282:1:21","nodeType":"YulLiteral","src":"2282:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2273:3:21","nodeType":"YulIdentifier","src":"2273:3:21"},"nativeSrc":"2273:11:21","nodeType":"YulFunctionCall","src":"2273:11:21"},{"kind":"number","nativeSrc":"2286:1:21","nodeType":"YulLiteral","src":"2286:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2269:3:21","nodeType":"YulIdentifier","src":"2269:3:21"},"nativeSrc":"2269:19:21","nodeType":"YulFunctionCall","src":"2269:19:21"}],"functionName":{"name":"and","nativeSrc":"2257:3:21","nodeType":"YulIdentifier","src":"2257:3:21"},"nativeSrc":"2257:32:21","nodeType":"YulFunctionCall","src":"2257:32:21"}],"functionName":{"name":"mstore","nativeSrc":"2239:6:21","nodeType":"YulIdentifier","src":"2239:6:21"},"nativeSrc":"2239:51:21","nodeType":"YulFunctionCall","src":"2239:51:21"},"nativeSrc":"2239:51:21","nodeType":"YulExpressionStatement","src":"2239:51:21"}]},"name":"abi_encode_tuple_t_contract$_IBeanRouter_$3596__to_t_address__fromStack_reversed","nativeSrc":"2073:223:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2163:9:21","nodeType":"YulTypedName","src":"2163:9:21","type":""},{"name":"value0","nativeSrc":"2174:6:21","nodeType":"YulTypedName","src":"2174:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2185:4:21","nodeType":"YulTypedName","src":"2185:4:21","type":""}],"src":"2073:223:21"},{"body":{"nativeSrc":"2396:92:21","nodeType":"YulBlock","src":"2396:92:21","statements":[{"nativeSrc":"2406:26:21","nodeType":"YulAssignment","src":"2406:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2418:9:21","nodeType":"YulIdentifier","src":"2418:9:21"},{"kind":"number","nativeSrc":"2429:2:21","nodeType":"YulLiteral","src":"2429:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2414:3:21","nodeType":"YulIdentifier","src":"2414:3:21"},"nativeSrc":"2414:18:21","nodeType":"YulFunctionCall","src":"2414:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2406:4:21","nodeType":"YulIdentifier","src":"2406:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2448:9:21","nodeType":"YulIdentifier","src":"2448:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2473:6:21","nodeType":"YulIdentifier","src":"2473:6:21"}],"functionName":{"name":"iszero","nativeSrc":"2466:6:21","nodeType":"YulIdentifier","src":"2466:6:21"},"nativeSrc":"2466:14:21","nodeType":"YulFunctionCall","src":"2466:14:21"}],"functionName":{"name":"iszero","nativeSrc":"2459:6:21","nodeType":"YulIdentifier","src":"2459:6:21"},"nativeSrc":"2459:22:21","nodeType":"YulFunctionCall","src":"2459:22:21"}],"functionName":{"name":"mstore","nativeSrc":"2441:6:21","nodeType":"YulIdentifier","src":"2441:6:21"},"nativeSrc":"2441:41:21","nodeType":"YulFunctionCall","src":"2441:41:21"},"nativeSrc":"2441:41:21","nodeType":"YulExpressionStatement","src":"2441:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"2301:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2365:9:21","nodeType":"YulTypedName","src":"2365:9:21","type":""},{"name":"value0","nativeSrc":"2376:6:21","nodeType":"YulTypedName","src":"2376:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2387:4:21","nodeType":"YulTypedName","src":"2387:4:21","type":""}],"src":"2301:187:21"},{"body":{"nativeSrc":"2614:276:21","nodeType":"YulBlock","src":"2614:276:21","statements":[{"body":{"nativeSrc":"2661:16:21","nodeType":"YulBlock","src":"2661:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2670:1:21","nodeType":"YulLiteral","src":"2670:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2673:1:21","nodeType":"YulLiteral","src":"2673:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2663:6:21","nodeType":"YulIdentifier","src":"2663:6:21"},"nativeSrc":"2663:12:21","nodeType":"YulFunctionCall","src":"2663:12:21"},"nativeSrc":"2663:12:21","nodeType":"YulExpressionStatement","src":"2663:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2635:7:21","nodeType":"YulIdentifier","src":"2635:7:21"},{"name":"headStart","nativeSrc":"2644:9:21","nodeType":"YulIdentifier","src":"2644:9:21"}],"functionName":{"name":"sub","nativeSrc":"2631:3:21","nodeType":"YulIdentifier","src":"2631:3:21"},"nativeSrc":"2631:23:21","nodeType":"YulFunctionCall","src":"2631:23:21"},{"kind":"number","nativeSrc":"2656:3:21","nodeType":"YulLiteral","src":"2656:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2627:3:21","nodeType":"YulIdentifier","src":"2627:3:21"},"nativeSrc":"2627:33:21","nodeType":"YulFunctionCall","src":"2627:33:21"},"nativeSrc":"2624:53:21","nodeType":"YulIf","src":"2624:53:21"},{"nativeSrc":"2686:39:21","nodeType":"YulAssignment","src":"2686:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2715:9:21","nodeType":"YulIdentifier","src":"2715:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2696:18:21","nodeType":"YulIdentifier","src":"2696:18:21"},"nativeSrc":"2696:29:21","nodeType":"YulFunctionCall","src":"2696:29:21"},"variableNames":[{"name":"value0","nativeSrc":"2686:6:21","nodeType":"YulIdentifier","src":"2686:6:21"}]},{"nativeSrc":"2734:48:21","nodeType":"YulAssignment","src":"2734:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2767:9:21","nodeType":"YulIdentifier","src":"2767:9:21"},{"kind":"number","nativeSrc":"2778:2:21","nodeType":"YulLiteral","src":"2778:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2763:3:21","nodeType":"YulIdentifier","src":"2763:3:21"},"nativeSrc":"2763:18:21","nodeType":"YulFunctionCall","src":"2763:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2744:18:21","nodeType":"YulIdentifier","src":"2744:18:21"},"nativeSrc":"2744:38:21","nodeType":"YulFunctionCall","src":"2744:38:21"},"variableNames":[{"name":"value1","nativeSrc":"2734:6:21","nodeType":"YulIdentifier","src":"2734:6:21"}]},{"nativeSrc":"2791:42:21","nodeType":"YulAssignment","src":"2791:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2818:9:21","nodeType":"YulIdentifier","src":"2818:9:21"},{"kind":"number","nativeSrc":"2829:2:21","nodeType":"YulLiteral","src":"2829:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2814:3:21","nodeType":"YulIdentifier","src":"2814:3:21"},"nativeSrc":"2814:18:21","nodeType":"YulFunctionCall","src":"2814:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2801:12:21","nodeType":"YulIdentifier","src":"2801:12:21"},"nativeSrc":"2801:32:21","nodeType":"YulFunctionCall","src":"2801:32:21"},"variableNames":[{"name":"value2","nativeSrc":"2791:6:21","nodeType":"YulIdentifier","src":"2791:6:21"}]},{"nativeSrc":"2842:42:21","nodeType":"YulAssignment","src":"2842:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2869:9:21","nodeType":"YulIdentifier","src":"2869:9:21"},{"kind":"number","nativeSrc":"2880:2:21","nodeType":"YulLiteral","src":"2880:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2865:3:21","nodeType":"YulIdentifier","src":"2865:3:21"},"nativeSrc":"2865:18:21","nodeType":"YulFunctionCall","src":"2865:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2852:12:21","nodeType":"YulIdentifier","src":"2852:12:21"},"nativeSrc":"2852:32:21","nodeType":"YulFunctionCall","src":"2852:32:21"},"variableNames":[{"name":"value3","nativeSrc":"2842:6:21","nodeType":"YulIdentifier","src":"2842:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nativeSrc":"2493:397:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2556:9:21","nodeType":"YulTypedName","src":"2556:9:21","type":""},{"name":"dataEnd","nativeSrc":"2567:7:21","nodeType":"YulTypedName","src":"2567:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2579:6:21","nodeType":"YulTypedName","src":"2579:6:21","type":""},{"name":"value1","nativeSrc":"2587:6:21","nodeType":"YulTypedName","src":"2587:6:21","type":""},{"name":"value2","nativeSrc":"2595:6:21","nodeType":"YulTypedName","src":"2595:6:21","type":""},{"name":"value3","nativeSrc":"2603:6:21","nodeType":"YulTypedName","src":"2603:6:21","type":""}],"src":"2493:397:21"},{"body":{"nativeSrc":"3069:162:21","nodeType":"YulBlock","src":"3069:162:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3086:9:21","nodeType":"YulIdentifier","src":"3086:9:21"},{"kind":"number","nativeSrc":"3097:2:21","nodeType":"YulLiteral","src":"3097:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3079:6:21","nodeType":"YulIdentifier","src":"3079:6:21"},"nativeSrc":"3079:21:21","nodeType":"YulFunctionCall","src":"3079:21:21"},"nativeSrc":"3079:21:21","nodeType":"YulExpressionStatement","src":"3079:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3120:9:21","nodeType":"YulIdentifier","src":"3120:9:21"},{"kind":"number","nativeSrc":"3131:2:21","nodeType":"YulLiteral","src":"3131:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3116:3:21","nodeType":"YulIdentifier","src":"3116:3:21"},"nativeSrc":"3116:18:21","nodeType":"YulFunctionCall","src":"3116:18:21"},{"kind":"number","nativeSrc":"3136:2:21","nodeType":"YulLiteral","src":"3136:2:21","type":"","value":"12"}],"functionName":{"name":"mstore","nativeSrc":"3109:6:21","nodeType":"YulIdentifier","src":"3109:6:21"},"nativeSrc":"3109:30:21","nodeType":"YulFunctionCall","src":"3109:30:21"},"nativeSrc":"3109:30:21","nodeType":"YulExpressionStatement","src":"3109:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3159:9:21","nodeType":"YulIdentifier","src":"3159:9:21"},{"kind":"number","nativeSrc":"3170:2:21","nodeType":"YulLiteral","src":"3170:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3155:3:21","nodeType":"YulIdentifier","src":"3155:3:21"},"nativeSrc":"3155:18:21","nodeType":"YulFunctionCall","src":"3155:18:21"},{"hexValue":"46656520746f6f2068696768","kind":"string","nativeSrc":"3175:14:21","nodeType":"YulLiteral","src":"3175:14:21","type":"","value":"Fee too high"}],"functionName":{"name":"mstore","nativeSrc":"3148:6:21","nodeType":"YulIdentifier","src":"3148:6:21"},"nativeSrc":"3148:42:21","nodeType":"YulFunctionCall","src":"3148:42:21"},"nativeSrc":"3148:42:21","nodeType":"YulExpressionStatement","src":"3148:42:21"},{"nativeSrc":"3199:26:21","nodeType":"YulAssignment","src":"3199:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3211:9:21","nodeType":"YulIdentifier","src":"3211:9:21"},{"kind":"number","nativeSrc":"3222:2:21","nodeType":"YulLiteral","src":"3222:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3207:3:21","nodeType":"YulIdentifier","src":"3207:3:21"},"nativeSrc":"3207:18:21","nodeType":"YulFunctionCall","src":"3207:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3199:4:21","nodeType":"YulIdentifier","src":"3199:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2895:336:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3046:9:21","nodeType":"YulTypedName","src":"3046:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3060:4:21","nodeType":"YulTypedName","src":"3060:4:21","type":""}],"src":"2895:336:21"},{"body":{"nativeSrc":"3410:236:21","nodeType":"YulBlock","src":"3410:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3427:9:21","nodeType":"YulIdentifier","src":"3427:9:21"},{"kind":"number","nativeSrc":"3438:2:21","nodeType":"YulLiteral","src":"3438:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3420:6:21","nodeType":"YulIdentifier","src":"3420:6:21"},"nativeSrc":"3420:21:21","nodeType":"YulFunctionCall","src":"3420:21:21"},"nativeSrc":"3420:21:21","nodeType":"YulExpressionStatement","src":"3420:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3461:9:21","nodeType":"YulIdentifier","src":"3461:9:21"},{"kind":"number","nativeSrc":"3472:2:21","nodeType":"YulLiteral","src":"3472:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3457:3:21","nodeType":"YulIdentifier","src":"3457:3:21"},"nativeSrc":"3457:18:21","nodeType":"YulFunctionCall","src":"3457:18:21"},{"kind":"number","nativeSrc":"3477:2:21","nodeType":"YulLiteral","src":"3477:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"3450:6:21","nodeType":"YulIdentifier","src":"3450:6:21"},"nativeSrc":"3450:30:21","nodeType":"YulFunctionCall","src":"3450:30:21"},"nativeSrc":"3450:30:21","nodeType":"YulExpressionStatement","src":"3450:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3500:9:21","nodeType":"YulIdentifier","src":"3500:9:21"},{"kind":"number","nativeSrc":"3511:2:21","nodeType":"YulLiteral","src":"3511:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3496:3:21","nodeType":"YulIdentifier","src":"3496:3:21"},"nativeSrc":"3496:18:21","nodeType":"YulFunctionCall","src":"3496:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nativeSrc":"3516:34:21","nodeType":"YulLiteral","src":"3516:34:21","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nativeSrc":"3489:6:21","nodeType":"YulIdentifier","src":"3489:6:21"},"nativeSrc":"3489:62:21","nodeType":"YulFunctionCall","src":"3489:62:21"},"nativeSrc":"3489:62:21","nodeType":"YulExpressionStatement","src":"3489:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3571:9:21","nodeType":"YulIdentifier","src":"3571:9:21"},{"kind":"number","nativeSrc":"3582:2:21","nodeType":"YulLiteral","src":"3582:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3567:3:21","nodeType":"YulIdentifier","src":"3567:3:21"},"nativeSrc":"3567:18:21","nodeType":"YulFunctionCall","src":"3567:18:21"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nativeSrc":"3587:16:21","nodeType":"YulLiteral","src":"3587:16:21","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nativeSrc":"3560:6:21","nodeType":"YulIdentifier","src":"3560:6:21"},"nativeSrc":"3560:44:21","nodeType":"YulFunctionCall","src":"3560:44:21"},"nativeSrc":"3560:44:21","nodeType":"YulExpressionStatement","src":"3560:44:21"},{"nativeSrc":"3613:27:21","nodeType":"YulAssignment","src":"3613:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3625:9:21","nodeType":"YulIdentifier","src":"3625:9:21"},{"kind":"number","nativeSrc":"3636:3:21","nodeType":"YulLiteral","src":"3636:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3621:3:21","nodeType":"YulIdentifier","src":"3621:3:21"},"nativeSrc":"3621:19:21","nodeType":"YulFunctionCall","src":"3621:19:21"},"variableNames":[{"name":"tail","nativeSrc":"3613:4:21","nodeType":"YulIdentifier","src":"3613:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3236:410:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3387:9:21","nodeType":"YulTypedName","src":"3387:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3401:4:21","nodeType":"YulTypedName","src":"3401:4:21","type":""}],"src":"3236:410:21"},{"body":{"nativeSrc":"3758:87:21","nodeType":"YulBlock","src":"3758:87:21","statements":[{"nativeSrc":"3768:26:21","nodeType":"YulAssignment","src":"3768:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3780:9:21","nodeType":"YulIdentifier","src":"3780:9:21"},{"kind":"number","nativeSrc":"3791:2:21","nodeType":"YulLiteral","src":"3791:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3776:3:21","nodeType":"YulIdentifier","src":"3776:3:21"},"nativeSrc":"3776:18:21","nodeType":"YulFunctionCall","src":"3776:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3768:4:21","nodeType":"YulIdentifier","src":"3768:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3810:9:21","nodeType":"YulIdentifier","src":"3810:9:21"},{"arguments":[{"name":"value0","nativeSrc":"3825:6:21","nodeType":"YulIdentifier","src":"3825:6:21"},{"kind":"number","nativeSrc":"3833:4:21","nodeType":"YulLiteral","src":"3833:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3821:3:21","nodeType":"YulIdentifier","src":"3821:3:21"},"nativeSrc":"3821:17:21","nodeType":"YulFunctionCall","src":"3821:17:21"}],"functionName":{"name":"mstore","nativeSrc":"3803:6:21","nodeType":"YulIdentifier","src":"3803:6:21"},"nativeSrc":"3803:36:21","nodeType":"YulFunctionCall","src":"3803:36:21"},"nativeSrc":"3803:36:21","nodeType":"YulExpressionStatement","src":"3803:36:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nativeSrc":"3651:194:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3727:9:21","nodeType":"YulTypedName","src":"3727:9:21","type":""},{"name":"value0","nativeSrc":"3738:6:21","nodeType":"YulTypedName","src":"3738:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3749:4:21","nodeType":"YulTypedName","src":"3749:4:21","type":""}],"src":"3651:194:21"},{"body":{"nativeSrc":"3911:404:21","nodeType":"YulBlock","src":"3911:404:21","statements":[{"nativeSrc":"3921:26:21","nodeType":"YulVariableDeclaration","src":"3921:26:21","value":{"arguments":[{"name":"value","nativeSrc":"3941:5:21","nodeType":"YulIdentifier","src":"3941:5:21"}],"functionName":{"name":"mload","nativeSrc":"3935:5:21","nodeType":"YulIdentifier","src":"3935:5:21"},"nativeSrc":"3935:12:21","nodeType":"YulFunctionCall","src":"3935:12:21"},"variables":[{"name":"length","nativeSrc":"3925:6:21","nodeType":"YulTypedName","src":"3925:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3963:3:21","nodeType":"YulIdentifier","src":"3963:3:21"},{"name":"length","nativeSrc":"3968:6:21","nodeType":"YulIdentifier","src":"3968:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3956:6:21","nodeType":"YulIdentifier","src":"3956:6:21"},"nativeSrc":"3956:19:21","nodeType":"YulFunctionCall","src":"3956:19:21"},"nativeSrc":"3956:19:21","nodeType":"YulExpressionStatement","src":"3956:19:21"},{"nativeSrc":"3984:14:21","nodeType":"YulVariableDeclaration","src":"3984:14:21","value":{"kind":"number","nativeSrc":"3994:4:21","nodeType":"YulLiteral","src":"3994:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"3988:2:21","nodeType":"YulTypedName","src":"3988:2:21","type":""}]},{"nativeSrc":"4007:21:21","nodeType":"YulAssignment","src":"4007:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"4018:3:21","nodeType":"YulIdentifier","src":"4018:3:21"},{"kind":"number","nativeSrc":"4023:4:21","nodeType":"YulLiteral","src":"4023:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4014:3:21","nodeType":"YulIdentifier","src":"4014:3:21"},"nativeSrc":"4014:14:21","nodeType":"YulFunctionCall","src":"4014:14:21"},"variableNames":[{"name":"pos","nativeSrc":"4007:3:21","nodeType":"YulIdentifier","src":"4007:3:21"}]},{"nativeSrc":"4037:30:21","nodeType":"YulVariableDeclaration","src":"4037:30:21","value":{"arguments":[{"name":"value","nativeSrc":"4055:5:21","nodeType":"YulIdentifier","src":"4055:5:21"},{"kind":"number","nativeSrc":"4062:4:21","nodeType":"YulLiteral","src":"4062:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4051:3:21","nodeType":"YulIdentifier","src":"4051:3:21"},"nativeSrc":"4051:16:21","nodeType":"YulFunctionCall","src":"4051:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"4041:6:21","nodeType":"YulTypedName","src":"4041:6:21","type":""}]},{"nativeSrc":"4076:10:21","nodeType":"YulVariableDeclaration","src":"4076:10:21","value":{"kind":"number","nativeSrc":"4085:1:21","nodeType":"YulLiteral","src":"4085:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4080:1:21","nodeType":"YulTypedName","src":"4080:1:21","type":""}]},{"body":{"nativeSrc":"4144:146:21","nodeType":"YulBlock","src":"4144:146:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4165:3:21","nodeType":"YulIdentifier","src":"4165:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"4180:6:21","nodeType":"YulIdentifier","src":"4180:6:21"}],"functionName":{"name":"mload","nativeSrc":"4174:5:21","nodeType":"YulIdentifier","src":"4174:5:21"},"nativeSrc":"4174:13:21","nodeType":"YulFunctionCall","src":"4174:13:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4197:3:21","nodeType":"YulLiteral","src":"4197:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"4202:1:21","nodeType":"YulLiteral","src":"4202:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4193:3:21","nodeType":"YulIdentifier","src":"4193:3:21"},"nativeSrc":"4193:11:21","nodeType":"YulFunctionCall","src":"4193:11:21"},{"kind":"number","nativeSrc":"4206:1:21","nodeType":"YulLiteral","src":"4206:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4189:3:21","nodeType":"YulIdentifier","src":"4189:3:21"},"nativeSrc":"4189:19:21","nodeType":"YulFunctionCall","src":"4189:19:21"}],"functionName":{"name":"and","nativeSrc":"4170:3:21","nodeType":"YulIdentifier","src":"4170:3:21"},"nativeSrc":"4170:39:21","nodeType":"YulFunctionCall","src":"4170:39:21"}],"functionName":{"name":"mstore","nativeSrc":"4158:6:21","nodeType":"YulIdentifier","src":"4158:6:21"},"nativeSrc":"4158:52:21","nodeType":"YulFunctionCall","src":"4158:52:21"},"nativeSrc":"4158:52:21","nodeType":"YulExpressionStatement","src":"4158:52:21"},{"nativeSrc":"4223:19:21","nodeType":"YulAssignment","src":"4223:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"4234:3:21","nodeType":"YulIdentifier","src":"4234:3:21"},{"name":"_1","nativeSrc":"4239:2:21","nodeType":"YulIdentifier","src":"4239:2:21"}],"functionName":{"name":"add","nativeSrc":"4230:3:21","nodeType":"YulIdentifier","src":"4230:3:21"},"nativeSrc":"4230:12:21","nodeType":"YulFunctionCall","src":"4230:12:21"},"variableNames":[{"name":"pos","nativeSrc":"4223:3:21","nodeType":"YulIdentifier","src":"4223:3:21"}]},{"nativeSrc":"4255:25:21","nodeType":"YulAssignment","src":"4255:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4269:6:21","nodeType":"YulIdentifier","src":"4269:6:21"},{"name":"_1","nativeSrc":"4277:2:21","nodeType":"YulIdentifier","src":"4277:2:21"}],"functionName":{"name":"add","nativeSrc":"4265:3:21","nodeType":"YulIdentifier","src":"4265:3:21"},"nativeSrc":"4265:15:21","nodeType":"YulFunctionCall","src":"4265:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"4255:6:21","nodeType":"YulIdentifier","src":"4255:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4106:1:21","nodeType":"YulIdentifier","src":"4106:1:21"},{"name":"length","nativeSrc":"4109:6:21","nodeType":"YulIdentifier","src":"4109:6:21"}],"functionName":{"name":"lt","nativeSrc":"4103:2:21","nodeType":"YulIdentifier","src":"4103:2:21"},"nativeSrc":"4103:13:21","nodeType":"YulFunctionCall","src":"4103:13:21"},"nativeSrc":"4095:195:21","nodeType":"YulForLoop","post":{"nativeSrc":"4117:18:21","nodeType":"YulBlock","src":"4117:18:21","statements":[{"nativeSrc":"4119:14:21","nodeType":"YulAssignment","src":"4119:14:21","value":{"arguments":[{"name":"i","nativeSrc":"4128:1:21","nodeType":"YulIdentifier","src":"4128:1:21"},{"kind":"number","nativeSrc":"4131:1:21","nodeType":"YulLiteral","src":"4131:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4124:3:21","nodeType":"YulIdentifier","src":"4124:3:21"},"nativeSrc":"4124:9:21","nodeType":"YulFunctionCall","src":"4124:9:21"},"variableNames":[{"name":"i","nativeSrc":"4119:1:21","nodeType":"YulIdentifier","src":"4119:1:21"}]}]},"pre":{"nativeSrc":"4099:3:21","nodeType":"YulBlock","src":"4099:3:21","statements":[]},"src":"4095:195:21"},{"nativeSrc":"4299:10:21","nodeType":"YulAssignment","src":"4299:10:21","value":{"name":"pos","nativeSrc":"4306:3:21","nodeType":"YulIdentifier","src":"4306:3:21"},"variableNames":[{"name":"end","nativeSrc":"4299:3:21","nodeType":"YulIdentifier","src":"4299:3:21"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"3850:465:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3888:5:21","nodeType":"YulTypedName","src":"3888:5:21","type":""},{"name":"pos","nativeSrc":"3895:3:21","nodeType":"YulTypedName","src":"3895:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3903:3:21","nodeType":"YulTypedName","src":"3903:3:21","type":""}],"src":"3850:465:21"},{"body":{"nativeSrc":"4499:153:21","nodeType":"YulBlock","src":"4499:153:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4516:9:21","nodeType":"YulIdentifier","src":"4516:9:21"},{"name":"value0","nativeSrc":"4527:6:21","nodeType":"YulIdentifier","src":"4527:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4509:6:21","nodeType":"YulIdentifier","src":"4509:6:21"},"nativeSrc":"4509:25:21","nodeType":"YulFunctionCall","src":"4509:25:21"},"nativeSrc":"4509:25:21","nodeType":"YulExpressionStatement","src":"4509:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4554:9:21","nodeType":"YulIdentifier","src":"4554:9:21"},{"kind":"number","nativeSrc":"4565:2:21","nodeType":"YulLiteral","src":"4565:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4550:3:21","nodeType":"YulIdentifier","src":"4550:3:21"},"nativeSrc":"4550:18:21","nodeType":"YulFunctionCall","src":"4550:18:21"},{"kind":"number","nativeSrc":"4570:2:21","nodeType":"YulLiteral","src":"4570:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"4543:6:21","nodeType":"YulIdentifier","src":"4543:6:21"},"nativeSrc":"4543:30:21","nodeType":"YulFunctionCall","src":"4543:30:21"},"nativeSrc":"4543:30:21","nodeType":"YulExpressionStatement","src":"4543:30:21"},{"nativeSrc":"4582:64:21","nodeType":"YulAssignment","src":"4582:64:21","value":{"arguments":[{"name":"value1","nativeSrc":"4619:6:21","nodeType":"YulIdentifier","src":"4619:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"4631:9:21","nodeType":"YulIdentifier","src":"4631:9:21"},{"kind":"number","nativeSrc":"4642:2:21","nodeType":"YulLiteral","src":"4642:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4627:3:21","nodeType":"YulIdentifier","src":"4627:3:21"},"nativeSrc":"4627:18:21","nodeType":"YulFunctionCall","src":"4627:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"4590:28:21","nodeType":"YulIdentifier","src":"4590:28:21"},"nativeSrc":"4590:56:21","nodeType":"YulFunctionCall","src":"4590:56:21"},"variableNames":[{"name":"tail","nativeSrc":"4582:4:21","nodeType":"YulIdentifier","src":"4582:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4320:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4460:9:21","nodeType":"YulTypedName","src":"4460:9:21","type":""},{"name":"value1","nativeSrc":"4471:6:21","nodeType":"YulTypedName","src":"4471:6:21","type":""},{"name":"value0","nativeSrc":"4479:6:21","nodeType":"YulTypedName","src":"4479:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4490:4:21","nodeType":"YulTypedName","src":"4490:4:21","type":""}],"src":"4320:332:21"},{"body":{"nativeSrc":"4689:95:21","nodeType":"YulBlock","src":"4689:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4706:1:21","nodeType":"YulLiteral","src":"4706:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4713:3:21","nodeType":"YulLiteral","src":"4713:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"4718:10:21","nodeType":"YulLiteral","src":"4718:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4709:3:21","nodeType":"YulIdentifier","src":"4709:3:21"},"nativeSrc":"4709:20:21","nodeType":"YulFunctionCall","src":"4709:20:21"}],"functionName":{"name":"mstore","nativeSrc":"4699:6:21","nodeType":"YulIdentifier","src":"4699:6:21"},"nativeSrc":"4699:31:21","nodeType":"YulFunctionCall","src":"4699:31:21"},"nativeSrc":"4699:31:21","nodeType":"YulExpressionStatement","src":"4699:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4746:1:21","nodeType":"YulLiteral","src":"4746:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"4749:4:21","nodeType":"YulLiteral","src":"4749:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"4739:6:21","nodeType":"YulIdentifier","src":"4739:6:21"},"nativeSrc":"4739:15:21","nodeType":"YulFunctionCall","src":"4739:15:21"},"nativeSrc":"4739:15:21","nodeType":"YulExpressionStatement","src":"4739:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4770:1:21","nodeType":"YulLiteral","src":"4770:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4773:4:21","nodeType":"YulLiteral","src":"4773:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4763:6:21","nodeType":"YulIdentifier","src":"4763:6:21"},"nativeSrc":"4763:15:21","nodeType":"YulFunctionCall","src":"4763:15:21"},"nativeSrc":"4763:15:21","nodeType":"YulExpressionStatement","src":"4763:15:21"}]},"name":"panic_error_0x41","nativeSrc":"4657:127:21","nodeType":"YulFunctionDefinition","src":"4657:127:21"},{"body":{"nativeSrc":"4895:999:21","nodeType":"YulBlock","src":"4895:999:21","statements":[{"nativeSrc":"4905:12:21","nodeType":"YulVariableDeclaration","src":"4905:12:21","value":{"kind":"number","nativeSrc":"4915:2:21","nodeType":"YulLiteral","src":"4915:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"4909:2:21","nodeType":"YulTypedName","src":"4909:2:21","type":""}]},{"body":{"nativeSrc":"4962:16:21","nodeType":"YulBlock","src":"4962:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4971:1:21","nodeType":"YulLiteral","src":"4971:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4974:1:21","nodeType":"YulLiteral","src":"4974:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4964:6:21","nodeType":"YulIdentifier","src":"4964:6:21"},"nativeSrc":"4964:12:21","nodeType":"YulFunctionCall","src":"4964:12:21"},"nativeSrc":"4964:12:21","nodeType":"YulExpressionStatement","src":"4964:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4937:7:21","nodeType":"YulIdentifier","src":"4937:7:21"},{"name":"headStart","nativeSrc":"4946:9:21","nodeType":"YulIdentifier","src":"4946:9:21"}],"functionName":{"name":"sub","nativeSrc":"4933:3:21","nodeType":"YulIdentifier","src":"4933:3:21"},"nativeSrc":"4933:23:21","nodeType":"YulFunctionCall","src":"4933:23:21"},{"name":"_1","nativeSrc":"4958:2:21","nodeType":"YulIdentifier","src":"4958:2:21"}],"functionName":{"name":"slt","nativeSrc":"4929:3:21","nodeType":"YulIdentifier","src":"4929:3:21"},"nativeSrc":"4929:32:21","nodeType":"YulFunctionCall","src":"4929:32:21"},"nativeSrc":"4926:52:21","nodeType":"YulIf","src":"4926:52:21"},{"nativeSrc":"4987:30:21","nodeType":"YulVariableDeclaration","src":"4987:30:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5007:9:21","nodeType":"YulIdentifier","src":"5007:9:21"}],"functionName":{"name":"mload","nativeSrc":"5001:5:21","nodeType":"YulIdentifier","src":"5001:5:21"},"nativeSrc":"5001:16:21","nodeType":"YulFunctionCall","src":"5001:16:21"},"variables":[{"name":"offset","nativeSrc":"4991:6:21","nodeType":"YulTypedName","src":"4991:6:21","type":""}]},{"nativeSrc":"5026:28:21","nodeType":"YulVariableDeclaration","src":"5026:28:21","value":{"kind":"number","nativeSrc":"5036:18:21","nodeType":"YulLiteral","src":"5036:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"5030:2:21","nodeType":"YulTypedName","src":"5030:2:21","type":""}]},{"body":{"nativeSrc":"5081:16:21","nodeType":"YulBlock","src":"5081:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5090:1:21","nodeType":"YulLiteral","src":"5090:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5093:1:21","nodeType":"YulLiteral","src":"5093:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5083:6:21","nodeType":"YulIdentifier","src":"5083:6:21"},"nativeSrc":"5083:12:21","nodeType":"YulFunctionCall","src":"5083:12:21"},"nativeSrc":"5083:12:21","nodeType":"YulExpressionStatement","src":"5083:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5069:6:21","nodeType":"YulIdentifier","src":"5069:6:21"},{"name":"_2","nativeSrc":"5077:2:21","nodeType":"YulIdentifier","src":"5077:2:21"}],"functionName":{"name":"gt","nativeSrc":"5066:2:21","nodeType":"YulIdentifier","src":"5066:2:21"},"nativeSrc":"5066:14:21","nodeType":"YulFunctionCall","src":"5066:14:21"},"nativeSrc":"5063:34:21","nodeType":"YulIf","src":"5063:34:21"},{"nativeSrc":"5106:32:21","nodeType":"YulVariableDeclaration","src":"5106:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5120:9:21","nodeType":"YulIdentifier","src":"5120:9:21"},{"name":"offset","nativeSrc":"5131:6:21","nodeType":"YulIdentifier","src":"5131:6:21"}],"functionName":{"name":"add","nativeSrc":"5116:3:21","nodeType":"YulIdentifier","src":"5116:3:21"},"nativeSrc":"5116:22:21","nodeType":"YulFunctionCall","src":"5116:22:21"},"variables":[{"name":"_3","nativeSrc":"5110:2:21","nodeType":"YulTypedName","src":"5110:2:21","type":""}]},{"body":{"nativeSrc":"5186:16:21","nodeType":"YulBlock","src":"5186:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5195:1:21","nodeType":"YulLiteral","src":"5195:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5198:1:21","nodeType":"YulLiteral","src":"5198:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5188:6:21","nodeType":"YulIdentifier","src":"5188:6:21"},"nativeSrc":"5188:12:21","nodeType":"YulFunctionCall","src":"5188:12:21"},"nativeSrc":"5188:12:21","nodeType":"YulExpressionStatement","src":"5188:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5165:2:21","nodeType":"YulIdentifier","src":"5165:2:21"},{"kind":"number","nativeSrc":"5169:4:21","nodeType":"YulLiteral","src":"5169:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5161:3:21","nodeType":"YulIdentifier","src":"5161:3:21"},"nativeSrc":"5161:13:21","nodeType":"YulFunctionCall","src":"5161:13:21"},{"name":"dataEnd","nativeSrc":"5176:7:21","nodeType":"YulIdentifier","src":"5176:7:21"}],"functionName":{"name":"slt","nativeSrc":"5157:3:21","nodeType":"YulIdentifier","src":"5157:3:21"},"nativeSrc":"5157:27:21","nodeType":"YulFunctionCall","src":"5157:27:21"}],"functionName":{"name":"iszero","nativeSrc":"5150:6:21","nodeType":"YulIdentifier","src":"5150:6:21"},"nativeSrc":"5150:35:21","nodeType":"YulFunctionCall","src":"5150:35:21"},"nativeSrc":"5147:55:21","nodeType":"YulIf","src":"5147:55:21"},{"nativeSrc":"5211:19:21","nodeType":"YulVariableDeclaration","src":"5211:19:21","value":{"arguments":[{"name":"_3","nativeSrc":"5227:2:21","nodeType":"YulIdentifier","src":"5227:2:21"}],"functionName":{"name":"mload","nativeSrc":"5221:5:21","nodeType":"YulIdentifier","src":"5221:5:21"},"nativeSrc":"5221:9:21","nodeType":"YulFunctionCall","src":"5221:9:21"},"variables":[{"name":"_4","nativeSrc":"5215:2:21","nodeType":"YulTypedName","src":"5215:2:21","type":""}]},{"body":{"nativeSrc":"5253:22:21","nodeType":"YulBlock","src":"5253:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5255:16:21","nodeType":"YulIdentifier","src":"5255:16:21"},"nativeSrc":"5255:18:21","nodeType":"YulFunctionCall","src":"5255:18:21"},"nativeSrc":"5255:18:21","nodeType":"YulExpressionStatement","src":"5255:18:21"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"5245:2:21","nodeType":"YulIdentifier","src":"5245:2:21"},{"name":"_2","nativeSrc":"5249:2:21","nodeType":"YulIdentifier","src":"5249:2:21"}],"functionName":{"name":"gt","nativeSrc":"5242:2:21","nodeType":"YulIdentifier","src":"5242:2:21"},"nativeSrc":"5242:10:21","nodeType":"YulFunctionCall","src":"5242:10:21"},"nativeSrc":"5239:36:21","nodeType":"YulIf","src":"5239:36:21"},{"nativeSrc":"5284:20:21","nodeType":"YulVariableDeclaration","src":"5284:20:21","value":{"arguments":[{"kind":"number","nativeSrc":"5298:1:21","nodeType":"YulLiteral","src":"5298:1:21","type":"","value":"5"},{"name":"_4","nativeSrc":"5301:2:21","nodeType":"YulIdentifier","src":"5301:2:21"}],"functionName":{"name":"shl","nativeSrc":"5294:3:21","nodeType":"YulIdentifier","src":"5294:3:21"},"nativeSrc":"5294:10:21","nodeType":"YulFunctionCall","src":"5294:10:21"},"variables":[{"name":"_5","nativeSrc":"5288:2:21","nodeType":"YulTypedName","src":"5288:2:21","type":""}]},{"nativeSrc":"5313:23:21","nodeType":"YulVariableDeclaration","src":"5313:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"5333:2:21","nodeType":"YulLiteral","src":"5333:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"5327:5:21","nodeType":"YulIdentifier","src":"5327:5:21"},"nativeSrc":"5327:9:21","nodeType":"YulFunctionCall","src":"5327:9:21"},"variables":[{"name":"memPtr","nativeSrc":"5317:6:21","nodeType":"YulTypedName","src":"5317:6:21","type":""}]},{"nativeSrc":"5345:56:21","nodeType":"YulVariableDeclaration","src":"5345:56:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"5367:6:21","nodeType":"YulIdentifier","src":"5367:6:21"},{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"5383:2:21","nodeType":"YulIdentifier","src":"5383:2:21"},{"kind":"number","nativeSrc":"5387:2:21","nodeType":"YulLiteral","src":"5387:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"5379:3:21","nodeType":"YulIdentifier","src":"5379:3:21"},"nativeSrc":"5379:11:21","nodeType":"YulFunctionCall","src":"5379:11:21"},{"arguments":[{"kind":"number","nativeSrc":"5396:2:21","nodeType":"YulLiteral","src":"5396:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5392:3:21","nodeType":"YulIdentifier","src":"5392:3:21"},"nativeSrc":"5392:7:21","nodeType":"YulFunctionCall","src":"5392:7:21"}],"functionName":{"name":"and","nativeSrc":"5375:3:21","nodeType":"YulIdentifier","src":"5375:3:21"},"nativeSrc":"5375:25:21","nodeType":"YulFunctionCall","src":"5375:25:21"}],"functionName":{"name":"add","nativeSrc":"5363:3:21","nodeType":"YulIdentifier","src":"5363:3:21"},"nativeSrc":"5363:38:21","nodeType":"YulFunctionCall","src":"5363:38:21"},"variables":[{"name":"newFreePtr","nativeSrc":"5349:10:21","nodeType":"YulTypedName","src":"5349:10:21","type":""}]},{"body":{"nativeSrc":"5460:22:21","nodeType":"YulBlock","src":"5460:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5462:16:21","nodeType":"YulIdentifier","src":"5462:16:21"},"nativeSrc":"5462:18:21","nodeType":"YulFunctionCall","src":"5462:18:21"},"nativeSrc":"5462:18:21","nodeType":"YulExpressionStatement","src":"5462:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"5419:10:21","nodeType":"YulIdentifier","src":"5419:10:21"},{"name":"_2","nativeSrc":"5431:2:21","nodeType":"YulIdentifier","src":"5431:2:21"}],"functionName":{"name":"gt","nativeSrc":"5416:2:21","nodeType":"YulIdentifier","src":"5416:2:21"},"nativeSrc":"5416:18:21","nodeType":"YulFunctionCall","src":"5416:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"5439:10:21","nodeType":"YulIdentifier","src":"5439:10:21"},{"name":"memPtr","nativeSrc":"5451:6:21","nodeType":"YulIdentifier","src":"5451:6:21"}],"functionName":{"name":"lt","nativeSrc":"5436:2:21","nodeType":"YulIdentifier","src":"5436:2:21"},"nativeSrc":"5436:22:21","nodeType":"YulFunctionCall","src":"5436:22:21"}],"functionName":{"name":"or","nativeSrc":"5413:2:21","nodeType":"YulIdentifier","src":"5413:2:21"},"nativeSrc":"5413:46:21","nodeType":"YulFunctionCall","src":"5413:46:21"},"nativeSrc":"5410:72:21","nodeType":"YulIf","src":"5410:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5498:2:21","nodeType":"YulLiteral","src":"5498:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"5502:10:21","nodeType":"YulIdentifier","src":"5502:10:21"}],"functionName":{"name":"mstore","nativeSrc":"5491:6:21","nodeType":"YulIdentifier","src":"5491:6:21"},"nativeSrc":"5491:22:21","nodeType":"YulFunctionCall","src":"5491:22:21"},"nativeSrc":"5491:22:21","nodeType":"YulExpressionStatement","src":"5491:22:21"},{"nativeSrc":"5522:17:21","nodeType":"YulVariableDeclaration","src":"5522:17:21","value":{"name":"memPtr","nativeSrc":"5533:6:21","nodeType":"YulIdentifier","src":"5533:6:21"},"variables":[{"name":"dst","nativeSrc":"5526:3:21","nodeType":"YulTypedName","src":"5526:3:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"5555:6:21","nodeType":"YulIdentifier","src":"5555:6:21"},{"name":"_4","nativeSrc":"5563:2:21","nodeType":"YulIdentifier","src":"5563:2:21"}],"functionName":{"name":"mstore","nativeSrc":"5548:6:21","nodeType":"YulIdentifier","src":"5548:6:21"},"nativeSrc":"5548:18:21","nodeType":"YulFunctionCall","src":"5548:18:21"},"nativeSrc":"5548:18:21","nodeType":"YulExpressionStatement","src":"5548:18:21"},{"nativeSrc":"5575:22:21","nodeType":"YulAssignment","src":"5575:22:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"5586:6:21","nodeType":"YulIdentifier","src":"5586:6:21"},{"name":"_1","nativeSrc":"5594:2:21","nodeType":"YulIdentifier","src":"5594:2:21"}],"functionName":{"name":"add","nativeSrc":"5582:3:21","nodeType":"YulIdentifier","src":"5582:3:21"},"nativeSrc":"5582:15:21","nodeType":"YulFunctionCall","src":"5582:15:21"},"variableNames":[{"name":"dst","nativeSrc":"5575:3:21","nodeType":"YulIdentifier","src":"5575:3:21"}]},{"nativeSrc":"5606:34:21","nodeType":"YulVariableDeclaration","src":"5606:34:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5628:2:21","nodeType":"YulIdentifier","src":"5628:2:21"},{"name":"_5","nativeSrc":"5632:2:21","nodeType":"YulIdentifier","src":"5632:2:21"}],"functionName":{"name":"add","nativeSrc":"5624:3:21","nodeType":"YulIdentifier","src":"5624:3:21"},"nativeSrc":"5624:11:21","nodeType":"YulFunctionCall","src":"5624:11:21"},{"name":"_1","nativeSrc":"5637:2:21","nodeType":"YulIdentifier","src":"5637:2:21"}],"functionName":{"name":"add","nativeSrc":"5620:3:21","nodeType":"YulIdentifier","src":"5620:3:21"},"nativeSrc":"5620:20:21","nodeType":"YulFunctionCall","src":"5620:20:21"},"variables":[{"name":"srcEnd","nativeSrc":"5610:6:21","nodeType":"YulTypedName","src":"5610:6:21","type":""}]},{"body":{"nativeSrc":"5672:16:21","nodeType":"YulBlock","src":"5672:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5681:1:21","nodeType":"YulLiteral","src":"5681:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5684:1:21","nodeType":"YulLiteral","src":"5684:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5674:6:21","nodeType":"YulIdentifier","src":"5674:6:21"},"nativeSrc":"5674:12:21","nodeType":"YulFunctionCall","src":"5674:12:21"},"nativeSrc":"5674:12:21","nodeType":"YulExpressionStatement","src":"5674:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"5655:6:21","nodeType":"YulIdentifier","src":"5655:6:21"},{"name":"dataEnd","nativeSrc":"5663:7:21","nodeType":"YulIdentifier","src":"5663:7:21"}],"functionName":{"name":"gt","nativeSrc":"5652:2:21","nodeType":"YulIdentifier","src":"5652:2:21"},"nativeSrc":"5652:19:21","nodeType":"YulFunctionCall","src":"5652:19:21"},"nativeSrc":"5649:39:21","nodeType":"YulIf","src":"5649:39:21"},{"nativeSrc":"5697:22:21","nodeType":"YulVariableDeclaration","src":"5697:22:21","value":{"arguments":[{"name":"_3","nativeSrc":"5712:2:21","nodeType":"YulIdentifier","src":"5712:2:21"},{"name":"_1","nativeSrc":"5716:2:21","nodeType":"YulIdentifier","src":"5716:2:21"}],"functionName":{"name":"add","nativeSrc":"5708:3:21","nodeType":"YulIdentifier","src":"5708:3:21"},"nativeSrc":"5708:11:21","nodeType":"YulFunctionCall","src":"5708:11:21"},"variables":[{"name":"src","nativeSrc":"5701:3:21","nodeType":"YulTypedName","src":"5701:3:21","type":""}]},{"body":{"nativeSrc":"5784:79:21","nodeType":"YulBlock","src":"5784:79:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"5805:3:21","nodeType":"YulIdentifier","src":"5805:3:21"},{"arguments":[{"name":"src","nativeSrc":"5816:3:21","nodeType":"YulIdentifier","src":"5816:3:21"}],"functionName":{"name":"mload","nativeSrc":"5810:5:21","nodeType":"YulIdentifier","src":"5810:5:21"},"nativeSrc":"5810:10:21","nodeType":"YulFunctionCall","src":"5810:10:21"}],"functionName":{"name":"mstore","nativeSrc":"5798:6:21","nodeType":"YulIdentifier","src":"5798:6:21"},"nativeSrc":"5798:23:21","nodeType":"YulFunctionCall","src":"5798:23:21"},"nativeSrc":"5798:23:21","nodeType":"YulExpressionStatement","src":"5798:23:21"},{"nativeSrc":"5834:19:21","nodeType":"YulAssignment","src":"5834:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"5845:3:21","nodeType":"YulIdentifier","src":"5845:3:21"},{"name":"_1","nativeSrc":"5850:2:21","nodeType":"YulIdentifier","src":"5850:2:21"}],"functionName":{"name":"add","nativeSrc":"5841:3:21","nodeType":"YulIdentifier","src":"5841:3:21"},"nativeSrc":"5841:12:21","nodeType":"YulFunctionCall","src":"5841:12:21"},"variableNames":[{"name":"dst","nativeSrc":"5834:3:21","nodeType":"YulIdentifier","src":"5834:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"5739:3:21","nodeType":"YulIdentifier","src":"5739:3:21"},{"name":"srcEnd","nativeSrc":"5744:6:21","nodeType":"YulIdentifier","src":"5744:6:21"}],"functionName":{"name":"lt","nativeSrc":"5736:2:21","nodeType":"YulIdentifier","src":"5736:2:21"},"nativeSrc":"5736:15:21","nodeType":"YulFunctionCall","src":"5736:15:21"},"nativeSrc":"5728:135:21","nodeType":"YulForLoop","post":{"nativeSrc":"5752:23:21","nodeType":"YulBlock","src":"5752:23:21","statements":[{"nativeSrc":"5754:19:21","nodeType":"YulAssignment","src":"5754:19:21","value":{"arguments":[{"name":"src","nativeSrc":"5765:3:21","nodeType":"YulIdentifier","src":"5765:3:21"},{"name":"_1","nativeSrc":"5770:2:21","nodeType":"YulIdentifier","src":"5770:2:21"}],"functionName":{"name":"add","nativeSrc":"5761:3:21","nodeType":"YulIdentifier","src":"5761:3:21"},"nativeSrc":"5761:12:21","nodeType":"YulFunctionCall","src":"5761:12:21"},"variableNames":[{"name":"src","nativeSrc":"5754:3:21","nodeType":"YulIdentifier","src":"5754:3:21"}]}]},"pre":{"nativeSrc":"5732:3:21","nodeType":"YulBlock","src":"5732:3:21","statements":[]},"src":"5728:135:21"},{"nativeSrc":"5872:16:21","nodeType":"YulAssignment","src":"5872:16:21","value":{"name":"memPtr","nativeSrc":"5882:6:21","nodeType":"YulIdentifier","src":"5882:6:21"},"variableNames":[{"name":"value0","nativeSrc":"5872:6:21","nodeType":"YulIdentifier","src":"5872:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"4789:1105:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4861:9:21","nodeType":"YulTypedName","src":"4861:9:21","type":""},{"name":"dataEnd","nativeSrc":"4872:7:21","nodeType":"YulTypedName","src":"4872:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4884:6:21","nodeType":"YulTypedName","src":"4884:6:21","type":""}],"src":"4789:1105:21"},{"body":{"nativeSrc":"5931:95:21","nodeType":"YulBlock","src":"5931:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5948:1:21","nodeType":"YulLiteral","src":"5948:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5955:3:21","nodeType":"YulLiteral","src":"5955:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"5960:10:21","nodeType":"YulLiteral","src":"5960:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5951:3:21","nodeType":"YulIdentifier","src":"5951:3:21"},"nativeSrc":"5951:20:21","nodeType":"YulFunctionCall","src":"5951:20:21"}],"functionName":{"name":"mstore","nativeSrc":"5941:6:21","nodeType":"YulIdentifier","src":"5941:6:21"},"nativeSrc":"5941:31:21","nodeType":"YulFunctionCall","src":"5941:31:21"},"nativeSrc":"5941:31:21","nodeType":"YulExpressionStatement","src":"5941:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5988:1:21","nodeType":"YulLiteral","src":"5988:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"5991:4:21","nodeType":"YulLiteral","src":"5991:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5981:6:21","nodeType":"YulIdentifier","src":"5981:6:21"},"nativeSrc":"5981:15:21","nodeType":"YulFunctionCall","src":"5981:15:21"},"nativeSrc":"5981:15:21","nodeType":"YulExpressionStatement","src":"5981:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6012:1:21","nodeType":"YulLiteral","src":"6012:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6015:4:21","nodeType":"YulLiteral","src":"6015:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6005:6:21","nodeType":"YulIdentifier","src":"6005:6:21"},"nativeSrc":"6005:15:21","nodeType":"YulFunctionCall","src":"6005:15:21"},"nativeSrc":"6005:15:21","nodeType":"YulExpressionStatement","src":"6005:15:21"}]},"name":"panic_error_0x11","nativeSrc":"5899:127:21","nodeType":"YulFunctionDefinition","src":"5899:127:21"},{"body":{"nativeSrc":"6080:79:21","nodeType":"YulBlock","src":"6080:79:21","statements":[{"nativeSrc":"6090:17:21","nodeType":"YulAssignment","src":"6090:17:21","value":{"arguments":[{"name":"x","nativeSrc":"6102:1:21","nodeType":"YulIdentifier","src":"6102:1:21"},{"name":"y","nativeSrc":"6105:1:21","nodeType":"YulIdentifier","src":"6105:1:21"}],"functionName":{"name":"sub","nativeSrc":"6098:3:21","nodeType":"YulIdentifier","src":"6098:3:21"},"nativeSrc":"6098:9:21","nodeType":"YulFunctionCall","src":"6098:9:21"},"variableNames":[{"name":"diff","nativeSrc":"6090:4:21","nodeType":"YulIdentifier","src":"6090:4:21"}]},{"body":{"nativeSrc":"6131:22:21","nodeType":"YulBlock","src":"6131:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6133:16:21","nodeType":"YulIdentifier","src":"6133:16:21"},"nativeSrc":"6133:18:21","nodeType":"YulFunctionCall","src":"6133:18:21"},"nativeSrc":"6133:18:21","nodeType":"YulExpressionStatement","src":"6133:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"6122:4:21","nodeType":"YulIdentifier","src":"6122:4:21"},{"name":"x","nativeSrc":"6128:1:21","nodeType":"YulIdentifier","src":"6128:1:21"}],"functionName":{"name":"gt","nativeSrc":"6119:2:21","nodeType":"YulIdentifier","src":"6119:2:21"},"nativeSrc":"6119:11:21","nodeType":"YulFunctionCall","src":"6119:11:21"},"nativeSrc":"6116:37:21","nodeType":"YulIf","src":"6116:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"6031:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6062:1:21","nodeType":"YulTypedName","src":"6062:1:21","type":""},{"name":"y","nativeSrc":"6065:1:21","nodeType":"YulTypedName","src":"6065:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6071:4:21","nodeType":"YulTypedName","src":"6071:4:21","type":""}],"src":"6031:128:21"},{"body":{"nativeSrc":"6196:95:21","nodeType":"YulBlock","src":"6196:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6213:1:21","nodeType":"YulLiteral","src":"6213:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6220:3:21","nodeType":"YulLiteral","src":"6220:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"6225:10:21","nodeType":"YulLiteral","src":"6225:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6216:3:21","nodeType":"YulIdentifier","src":"6216:3:21"},"nativeSrc":"6216:20:21","nodeType":"YulFunctionCall","src":"6216:20:21"}],"functionName":{"name":"mstore","nativeSrc":"6206:6:21","nodeType":"YulIdentifier","src":"6206:6:21"},"nativeSrc":"6206:31:21","nodeType":"YulFunctionCall","src":"6206:31:21"},"nativeSrc":"6206:31:21","nodeType":"YulExpressionStatement","src":"6206:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6253:1:21","nodeType":"YulLiteral","src":"6253:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"6256:4:21","nodeType":"YulLiteral","src":"6256:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6246:6:21","nodeType":"YulIdentifier","src":"6246:6:21"},"nativeSrc":"6246:15:21","nodeType":"YulFunctionCall","src":"6246:15:21"},"nativeSrc":"6246:15:21","nodeType":"YulExpressionStatement","src":"6246:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6277:1:21","nodeType":"YulLiteral","src":"6277:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6280:4:21","nodeType":"YulLiteral","src":"6280:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6270:6:21","nodeType":"YulIdentifier","src":"6270:6:21"},"nativeSrc":"6270:15:21","nodeType":"YulFunctionCall","src":"6270:15:21"},"nativeSrc":"6270:15:21","nodeType":"YulExpressionStatement","src":"6270:15:21"}]},"name":"panic_error_0x32","nativeSrc":"6164:127:21","nodeType":"YulFunctionDefinition","src":"6164:127:21"},{"body":{"nativeSrc":"6348:116:21","nodeType":"YulBlock","src":"6348:116:21","statements":[{"nativeSrc":"6358:20:21","nodeType":"YulAssignment","src":"6358:20:21","value":{"arguments":[{"name":"x","nativeSrc":"6373:1:21","nodeType":"YulIdentifier","src":"6373:1:21"},{"name":"y","nativeSrc":"6376:1:21","nodeType":"YulIdentifier","src":"6376:1:21"}],"functionName":{"name":"mul","nativeSrc":"6369:3:21","nodeType":"YulIdentifier","src":"6369:3:21"},"nativeSrc":"6369:9:21","nodeType":"YulFunctionCall","src":"6369:9:21"},"variableNames":[{"name":"product","nativeSrc":"6358:7:21","nodeType":"YulIdentifier","src":"6358:7:21"}]},{"body":{"nativeSrc":"6436:22:21","nodeType":"YulBlock","src":"6436:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6438:16:21","nodeType":"YulIdentifier","src":"6438:16:21"},"nativeSrc":"6438:18:21","nodeType":"YulFunctionCall","src":"6438:18:21"},"nativeSrc":"6438:18:21","nodeType":"YulExpressionStatement","src":"6438:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6407:1:21","nodeType":"YulIdentifier","src":"6407:1:21"}],"functionName":{"name":"iszero","nativeSrc":"6400:6:21","nodeType":"YulIdentifier","src":"6400:6:21"},"nativeSrc":"6400:9:21","nodeType":"YulFunctionCall","src":"6400:9:21"},{"arguments":[{"name":"y","nativeSrc":"6414:1:21","nodeType":"YulIdentifier","src":"6414:1:21"},{"arguments":[{"name":"product","nativeSrc":"6421:7:21","nodeType":"YulIdentifier","src":"6421:7:21"},{"name":"x","nativeSrc":"6430:1:21","nodeType":"YulIdentifier","src":"6430:1:21"}],"functionName":{"name":"div","nativeSrc":"6417:3:21","nodeType":"YulIdentifier","src":"6417:3:21"},"nativeSrc":"6417:15:21","nodeType":"YulFunctionCall","src":"6417:15:21"}],"functionName":{"name":"eq","nativeSrc":"6411:2:21","nodeType":"YulIdentifier","src":"6411:2:21"},"nativeSrc":"6411:22:21","nodeType":"YulFunctionCall","src":"6411:22:21"}],"functionName":{"name":"or","nativeSrc":"6397:2:21","nodeType":"YulIdentifier","src":"6397:2:21"},"nativeSrc":"6397:37:21","nodeType":"YulFunctionCall","src":"6397:37:21"}],"functionName":{"name":"iszero","nativeSrc":"6390:6:21","nodeType":"YulIdentifier","src":"6390:6:21"},"nativeSrc":"6390:45:21","nodeType":"YulFunctionCall","src":"6390:45:21"},"nativeSrc":"6387:71:21","nodeType":"YulIf","src":"6387:71:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"6296:168:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6327:1:21","nodeType":"YulTypedName","src":"6327:1:21","type":""},{"name":"y","nativeSrc":"6330:1:21","nodeType":"YulTypedName","src":"6330:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6336:7:21","nodeType":"YulTypedName","src":"6336:7:21","type":""}],"src":"6296:168:21"},{"body":{"nativeSrc":"6515:171:21","nodeType":"YulBlock","src":"6515:171:21","statements":[{"body":{"nativeSrc":"6546:111:21","nodeType":"YulBlock","src":"6546:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6567:1:21","nodeType":"YulLiteral","src":"6567:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6574:3:21","nodeType":"YulLiteral","src":"6574:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"6579:10:21","nodeType":"YulLiteral","src":"6579:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6570:3:21","nodeType":"YulIdentifier","src":"6570:3:21"},"nativeSrc":"6570:20:21","nodeType":"YulFunctionCall","src":"6570:20:21"}],"functionName":{"name":"mstore","nativeSrc":"6560:6:21","nodeType":"YulIdentifier","src":"6560:6:21"},"nativeSrc":"6560:31:21","nodeType":"YulFunctionCall","src":"6560:31:21"},"nativeSrc":"6560:31:21","nodeType":"YulExpressionStatement","src":"6560:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6611:1:21","nodeType":"YulLiteral","src":"6611:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"6614:4:21","nodeType":"YulLiteral","src":"6614:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"6604:6:21","nodeType":"YulIdentifier","src":"6604:6:21"},"nativeSrc":"6604:15:21","nodeType":"YulFunctionCall","src":"6604:15:21"},"nativeSrc":"6604:15:21","nodeType":"YulExpressionStatement","src":"6604:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6639:1:21","nodeType":"YulLiteral","src":"6639:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6642:4:21","nodeType":"YulLiteral","src":"6642:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6632:6:21","nodeType":"YulIdentifier","src":"6632:6:21"},"nativeSrc":"6632:15:21","nodeType":"YulFunctionCall","src":"6632:15:21"},"nativeSrc":"6632:15:21","nodeType":"YulExpressionStatement","src":"6632:15:21"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6535:1:21","nodeType":"YulIdentifier","src":"6535:1:21"}],"functionName":{"name":"iszero","nativeSrc":"6528:6:21","nodeType":"YulIdentifier","src":"6528:6:21"},"nativeSrc":"6528:9:21","nodeType":"YulFunctionCall","src":"6528:9:21"},"nativeSrc":"6525:132:21","nodeType":"YulIf","src":"6525:132:21"},{"nativeSrc":"6666:14:21","nodeType":"YulAssignment","src":"6666:14:21","value":{"arguments":[{"name":"x","nativeSrc":"6675:1:21","nodeType":"YulIdentifier","src":"6675:1:21"},{"name":"y","nativeSrc":"6678:1:21","nodeType":"YulIdentifier","src":"6678:1:21"}],"functionName":{"name":"div","nativeSrc":"6671:3:21","nodeType":"YulIdentifier","src":"6671:3:21"},"nativeSrc":"6671:9:21","nodeType":"YulFunctionCall","src":"6671:9:21"},"variableNames":[{"name":"r","nativeSrc":"6666:1:21","nodeType":"YulIdentifier","src":"6666:1:21"}]}]},"name":"checked_div_t_uint256","nativeSrc":"6469:217:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6500:1:21","nodeType":"YulTypedName","src":"6500:1:21","type":""},{"name":"y","nativeSrc":"6503:1:21","nodeType":"YulTypedName","src":"6503:1:21","type":""}],"returnVariables":[{"name":"r","nativeSrc":"6509:1:21","nodeType":"YulTypedName","src":"6509:1:21","type":""}],"src":"6469:217:21"},{"body":{"nativeSrc":"6865:172:21","nodeType":"YulBlock","src":"6865:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6882:9:21","nodeType":"YulIdentifier","src":"6882:9:21"},{"kind":"number","nativeSrc":"6893:2:21","nodeType":"YulLiteral","src":"6893:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6875:6:21","nodeType":"YulIdentifier","src":"6875:6:21"},"nativeSrc":"6875:21:21","nodeType":"YulFunctionCall","src":"6875:21:21"},"nativeSrc":"6875:21:21","nodeType":"YulExpressionStatement","src":"6875:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6916:9:21","nodeType":"YulIdentifier","src":"6916:9:21"},{"kind":"number","nativeSrc":"6927:2:21","nodeType":"YulLiteral","src":"6927:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6912:3:21","nodeType":"YulIdentifier","src":"6912:3:21"},"nativeSrc":"6912:18:21","nodeType":"YulFunctionCall","src":"6912:18:21"},{"kind":"number","nativeSrc":"6932:2:21","nodeType":"YulLiteral","src":"6932:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"6905:6:21","nodeType":"YulIdentifier","src":"6905:6:21"},"nativeSrc":"6905:30:21","nodeType":"YulFunctionCall","src":"6905:30:21"},"nativeSrc":"6905:30:21","nodeType":"YulExpressionStatement","src":"6905:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6955:9:21","nodeType":"YulIdentifier","src":"6955:9:21"},{"kind":"number","nativeSrc":"6966:2:21","nodeType":"YulLiteral","src":"6966:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6951:3:21","nodeType":"YulIdentifier","src":"6951:3:21"},"nativeSrc":"6951:18:21","nodeType":"YulFunctionCall","src":"6951:18:21"},{"hexValue":"496e76616c696420726f757465722061646472657373","kind":"string","nativeSrc":"6971:24:21","nodeType":"YulLiteral","src":"6971:24:21","type":"","value":"Invalid router address"}],"functionName":{"name":"mstore","nativeSrc":"6944:6:21","nodeType":"YulIdentifier","src":"6944:6:21"},"nativeSrc":"6944:52:21","nodeType":"YulFunctionCall","src":"6944:52:21"},"nativeSrc":"6944:52:21","nodeType":"YulExpressionStatement","src":"6944:52:21"},{"nativeSrc":"7005:26:21","nodeType":"YulAssignment","src":"7005:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7017:9:21","nodeType":"YulIdentifier","src":"7017:9:21"},{"kind":"number","nativeSrc":"7028:2:21","nodeType":"YulLiteral","src":"7028:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7013:3:21","nodeType":"YulIdentifier","src":"7013:3:21"},"nativeSrc":"7013:18:21","nodeType":"YulFunctionCall","src":"7013:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7005:4:21","nodeType":"YulIdentifier","src":"7005:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6691:346:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6842:9:21","nodeType":"YulTypedName","src":"6842:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6856:4:21","nodeType":"YulTypedName","src":"6856:4:21","type":""}],"src":"6691:346:21"},{"body":{"nativeSrc":"7216:170:21","nodeType":"YulBlock","src":"7216:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7233:9:21","nodeType":"YulIdentifier","src":"7233:9:21"},{"kind":"number","nativeSrc":"7244:2:21","nodeType":"YulLiteral","src":"7244:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7226:6:21","nodeType":"YulIdentifier","src":"7226:6:21"},"nativeSrc":"7226:21:21","nodeType":"YulFunctionCall","src":"7226:21:21"},"nativeSrc":"7226:21:21","nodeType":"YulExpressionStatement","src":"7226:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7267:9:21","nodeType":"YulIdentifier","src":"7267:9:21"},{"kind":"number","nativeSrc":"7278:2:21","nodeType":"YulLiteral","src":"7278:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7263:3:21","nodeType":"YulIdentifier","src":"7263:3:21"},"nativeSrc":"7263:18:21","nodeType":"YulFunctionCall","src":"7263:18:21"},{"kind":"number","nativeSrc":"7283:2:21","nodeType":"YulLiteral","src":"7283:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"7256:6:21","nodeType":"YulIdentifier","src":"7256:6:21"},"nativeSrc":"7256:30:21","nodeType":"YulFunctionCall","src":"7256:30:21"},"nativeSrc":"7256:30:21","nodeType":"YulExpressionStatement","src":"7256:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7306:9:21","nodeType":"YulIdentifier","src":"7306:9:21"},{"kind":"number","nativeSrc":"7317:2:21","nodeType":"YulLiteral","src":"7317:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7302:3:21","nodeType":"YulIdentifier","src":"7302:3:21"},"nativeSrc":"7302:18:21","nodeType":"YulFunctionCall","src":"7302:18:21"},{"hexValue":"496e76616c696420574d4f4e2061646472657373","kind":"string","nativeSrc":"7322:22:21","nodeType":"YulLiteral","src":"7322:22:21","type":"","value":"Invalid WMON address"}],"functionName":{"name":"mstore","nativeSrc":"7295:6:21","nodeType":"YulIdentifier","src":"7295:6:21"},"nativeSrc":"7295:50:21","nodeType":"YulFunctionCall","src":"7295:50:21"},"nativeSrc":"7295:50:21","nodeType":"YulExpressionStatement","src":"7295:50:21"},{"nativeSrc":"7354:26:21","nodeType":"YulAssignment","src":"7354:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7366:9:21","nodeType":"YulIdentifier","src":"7366:9:21"},{"kind":"number","nativeSrc":"7377:2:21","nodeType":"YulLiteral","src":"7377:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7362:3:21","nodeType":"YulIdentifier","src":"7362:3:21"},"nativeSrc":"7362:18:21","nodeType":"YulFunctionCall","src":"7362:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7354:4:21","nodeType":"YulIdentifier","src":"7354:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7042:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7193:9:21","nodeType":"YulTypedName","src":"7193:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7207:4:21","nodeType":"YulTypedName","src":"7207:4:21","type":""}],"src":"7042:344:21"},{"body":{"nativeSrc":"7565:165:21","nodeType":"YulBlock","src":"7565:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7582:9:21","nodeType":"YulIdentifier","src":"7582:9:21"},{"kind":"number","nativeSrc":"7593:2:21","nodeType":"YulLiteral","src":"7593:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7575:6:21","nodeType":"YulIdentifier","src":"7575:6:21"},"nativeSrc":"7575:21:21","nodeType":"YulFunctionCall","src":"7575:21:21"},"nativeSrc":"7575:21:21","nodeType":"YulExpressionStatement","src":"7575:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7616:9:21","nodeType":"YulIdentifier","src":"7616:9:21"},{"kind":"number","nativeSrc":"7627:2:21","nodeType":"YulLiteral","src":"7627:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7612:3:21","nodeType":"YulIdentifier","src":"7612:3:21"},"nativeSrc":"7612:18:21","nodeType":"YulFunctionCall","src":"7612:18:21"},{"kind":"number","nativeSrc":"7632:2:21","nodeType":"YulLiteral","src":"7632:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"7605:6:21","nodeType":"YulIdentifier","src":"7605:6:21"},"nativeSrc":"7605:30:21","nodeType":"YulFunctionCall","src":"7605:30:21"},"nativeSrc":"7605:30:21","nodeType":"YulExpressionStatement","src":"7605:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7655:9:21","nodeType":"YulIdentifier","src":"7655:9:21"},{"kind":"number","nativeSrc":"7666:2:21","nodeType":"YulLiteral","src":"7666:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7651:3:21","nodeType":"YulIdentifier","src":"7651:3:21"},"nativeSrc":"7651:18:21","nodeType":"YulFunctionCall","src":"7651:18:21"},{"hexValue":"496e76616c69642061646472657373","kind":"string","nativeSrc":"7671:17:21","nodeType":"YulLiteral","src":"7671:17:21","type":"","value":"Invalid address"}],"functionName":{"name":"mstore","nativeSrc":"7644:6:21","nodeType":"YulIdentifier","src":"7644:6:21"},"nativeSrc":"7644:45:21","nodeType":"YulFunctionCall","src":"7644:45:21"},"nativeSrc":"7644:45:21","nodeType":"YulExpressionStatement","src":"7644:45:21"},{"nativeSrc":"7698:26:21","nodeType":"YulAssignment","src":"7698:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7710:9:21","nodeType":"YulIdentifier","src":"7710:9:21"},{"kind":"number","nativeSrc":"7721:2:21","nodeType":"YulLiteral","src":"7721:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7706:3:21","nodeType":"YulIdentifier","src":"7706:3:21"},"nativeSrc":"7706:18:21","nodeType":"YulFunctionCall","src":"7706:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7698:4:21","nodeType":"YulIdentifier","src":"7698:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7391:339:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7542:9:21","nodeType":"YulTypedName","src":"7542:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7556:4:21","nodeType":"YulTypedName","src":"7556:4:21","type":""}],"src":"7391:339:21"},{"body":{"nativeSrc":"7909:228:21","nodeType":"YulBlock","src":"7909:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7926:9:21","nodeType":"YulIdentifier","src":"7926:9:21"},{"kind":"number","nativeSrc":"7937:2:21","nodeType":"YulLiteral","src":"7937:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7919:6:21","nodeType":"YulIdentifier","src":"7919:6:21"},"nativeSrc":"7919:21:21","nodeType":"YulFunctionCall","src":"7919:21:21"},"nativeSrc":"7919:21:21","nodeType":"YulExpressionStatement","src":"7919:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7960:9:21","nodeType":"YulIdentifier","src":"7960:9:21"},{"kind":"number","nativeSrc":"7971:2:21","nodeType":"YulLiteral","src":"7971:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7956:3:21","nodeType":"YulIdentifier","src":"7956:3:21"},"nativeSrc":"7956:18:21","nodeType":"YulFunctionCall","src":"7956:18:21"},{"kind":"number","nativeSrc":"7976:2:21","nodeType":"YulLiteral","src":"7976:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"7949:6:21","nodeType":"YulIdentifier","src":"7949:6:21"},"nativeSrc":"7949:30:21","nodeType":"YulFunctionCall","src":"7949:30:21"},"nativeSrc":"7949:30:21","nodeType":"YulExpressionStatement","src":"7949:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7999:9:21","nodeType":"YulIdentifier","src":"7999:9:21"},{"kind":"number","nativeSrc":"8010:2:21","nodeType":"YulLiteral","src":"8010:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7995:3:21","nodeType":"YulIdentifier","src":"7995:3:21"},"nativeSrc":"7995:18:21","nodeType":"YulFunctionCall","src":"7995:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"8015:34:21","nodeType":"YulLiteral","src":"8015:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"7988:6:21","nodeType":"YulIdentifier","src":"7988:6:21"},"nativeSrc":"7988:62:21","nodeType":"YulFunctionCall","src":"7988:62:21"},"nativeSrc":"7988:62:21","nodeType":"YulExpressionStatement","src":"7988:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8070:9:21","nodeType":"YulIdentifier","src":"8070:9:21"},{"kind":"number","nativeSrc":"8081:2:21","nodeType":"YulLiteral","src":"8081:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8066:3:21","nodeType":"YulIdentifier","src":"8066:3:21"},"nativeSrc":"8066:18:21","nodeType":"YulFunctionCall","src":"8066:18:21"},{"hexValue":"646472657373","kind":"string","nativeSrc":"8086:8:21","nodeType":"YulLiteral","src":"8086:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"8059:6:21","nodeType":"YulIdentifier","src":"8059:6:21"},"nativeSrc":"8059:36:21","nodeType":"YulFunctionCall","src":"8059:36:21"},"nativeSrc":"8059:36:21","nodeType":"YulExpressionStatement","src":"8059:36:21"},{"nativeSrc":"8104:27:21","nodeType":"YulAssignment","src":"8104:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8116:9:21","nodeType":"YulIdentifier","src":"8116:9:21"},{"kind":"number","nativeSrc":"8127:3:21","nodeType":"YulLiteral","src":"8127:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8112:3:21","nodeType":"YulIdentifier","src":"8112:3:21"},"nativeSrc":"8112:19:21","nodeType":"YulFunctionCall","src":"8112:19:21"},"variableNames":[{"name":"tail","nativeSrc":"8104:4:21","nodeType":"YulIdentifier","src":"8104:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7735:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7886:9:21","nodeType":"YulTypedName","src":"7886:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7900:4:21","nodeType":"YulTypedName","src":"7900:4:21","type":""}],"src":"7735:402:21"},{"body":{"nativeSrc":"8316:168:21","nodeType":"YulBlock","src":"8316:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8333:9:21","nodeType":"YulIdentifier","src":"8333:9:21"},{"kind":"number","nativeSrc":"8344:2:21","nodeType":"YulLiteral","src":"8344:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8326:6:21","nodeType":"YulIdentifier","src":"8326:6:21"},"nativeSrc":"8326:21:21","nodeType":"YulFunctionCall","src":"8326:21:21"},"nativeSrc":"8326:21:21","nodeType":"YulExpressionStatement","src":"8326:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8367:9:21","nodeType":"YulIdentifier","src":"8367:9:21"},{"kind":"number","nativeSrc":"8378:2:21","nodeType":"YulLiteral","src":"8378:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8363:3:21","nodeType":"YulIdentifier","src":"8363:3:21"},"nativeSrc":"8363:18:21","nodeType":"YulFunctionCall","src":"8363:18:21"},{"kind":"number","nativeSrc":"8383:2:21","nodeType":"YulLiteral","src":"8383:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"8356:6:21","nodeType":"YulIdentifier","src":"8356:6:21"},"nativeSrc":"8356:30:21","nodeType":"YulFunctionCall","src":"8356:30:21"},"nativeSrc":"8356:30:21","nodeType":"YulExpressionStatement","src":"8356:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8406:9:21","nodeType":"YulIdentifier","src":"8406:9:21"},{"kind":"number","nativeSrc":"8417:2:21","nodeType":"YulLiteral","src":"8417:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8402:3:21","nodeType":"YulIdentifier","src":"8402:3:21"},"nativeSrc":"8402:18:21","nodeType":"YulFunctionCall","src":"8402:18:21"},{"hexValue":"416d6f756e74206d757374206265203e2030","kind":"string","nativeSrc":"8422:20:21","nodeType":"YulLiteral","src":"8422:20:21","type":"","value":"Amount must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"8395:6:21","nodeType":"YulIdentifier","src":"8395:6:21"},"nativeSrc":"8395:48:21","nodeType":"YulFunctionCall","src":"8395:48:21"},"nativeSrc":"8395:48:21","nodeType":"YulExpressionStatement","src":"8395:48:21"},{"nativeSrc":"8452:26:21","nodeType":"YulAssignment","src":"8452:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8464:9:21","nodeType":"YulIdentifier","src":"8464:9:21"},{"kind":"number","nativeSrc":"8475:2:21","nodeType":"YulLiteral","src":"8475:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8460:3:21","nodeType":"YulIdentifier","src":"8460:3:21"},"nativeSrc":"8460:18:21","nodeType":"YulFunctionCall","src":"8460:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8452:4:21","nodeType":"YulIdentifier","src":"8452:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8142:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8293:9:21","nodeType":"YulTypedName","src":"8293:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8307:4:21","nodeType":"YulTypedName","src":"8307:4:21","type":""}],"src":"8142:342:21"},{"body":{"nativeSrc":"8663:161:21","nodeType":"YulBlock","src":"8663:161:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8680:9:21","nodeType":"YulIdentifier","src":"8680:9:21"},{"kind":"number","nativeSrc":"8691:2:21","nodeType":"YulLiteral","src":"8691:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8673:6:21","nodeType":"YulIdentifier","src":"8673:6:21"},"nativeSrc":"8673:21:21","nodeType":"YulFunctionCall","src":"8673:21:21"},"nativeSrc":"8673:21:21","nodeType":"YulExpressionStatement","src":"8673:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8714:9:21","nodeType":"YulIdentifier","src":"8714:9:21"},{"kind":"number","nativeSrc":"8725:2:21","nodeType":"YulLiteral","src":"8725:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8710:3:21","nodeType":"YulIdentifier","src":"8710:3:21"},"nativeSrc":"8710:18:21","nodeType":"YulFunctionCall","src":"8710:18:21"},{"kind":"number","nativeSrc":"8730:2:21","nodeType":"YulLiteral","src":"8730:2:21","type":"","value":"11"}],"functionName":{"name":"mstore","nativeSrc":"8703:6:21","nodeType":"YulIdentifier","src":"8703:6:21"},"nativeSrc":"8703:30:21","nodeType":"YulFunctionCall","src":"8703:30:21"},"nativeSrc":"8703:30:21","nodeType":"YulExpressionStatement","src":"8703:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8753:9:21","nodeType":"YulIdentifier","src":"8753:9:21"},{"kind":"number","nativeSrc":"8764:2:21","nodeType":"YulLiteral","src":"8764:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8749:3:21","nodeType":"YulIdentifier","src":"8749:3:21"},"nativeSrc":"8749:18:21","nodeType":"YulFunctionCall","src":"8749:18:21"},{"hexValue":"53616d6520746f6b656e73","kind":"string","nativeSrc":"8769:13:21","nodeType":"YulLiteral","src":"8769:13:21","type":"","value":"Same tokens"}],"functionName":{"name":"mstore","nativeSrc":"8742:6:21","nodeType":"YulIdentifier","src":"8742:6:21"},"nativeSrc":"8742:41:21","nodeType":"YulFunctionCall","src":"8742:41:21"},"nativeSrc":"8742:41:21","nodeType":"YulExpressionStatement","src":"8742:41:21"},{"nativeSrc":"8792:26:21","nodeType":"YulAssignment","src":"8792:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8804:9:21","nodeType":"YulIdentifier","src":"8804:9:21"},{"kind":"number","nativeSrc":"8815:2:21","nodeType":"YulLiteral","src":"8815:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8800:3:21","nodeType":"YulIdentifier","src":"8800:3:21"},"nativeSrc":"8800:18:21","nodeType":"YulFunctionCall","src":"8800:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8792:4:21","nodeType":"YulIdentifier","src":"8792:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8489:335:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8640:9:21","nodeType":"YulTypedName","src":"8640:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8654:4:21","nodeType":"YulTypedName","src":"8654:4:21","type":""}],"src":"8489:335:21"},{"body":{"nativeSrc":"9003:168:21","nodeType":"YulBlock","src":"9003:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9020:9:21","nodeType":"YulIdentifier","src":"9020:9:21"},{"kind":"number","nativeSrc":"9031:2:21","nodeType":"YulLiteral","src":"9031:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9013:6:21","nodeType":"YulIdentifier","src":"9013:6:21"},"nativeSrc":"9013:21:21","nodeType":"YulFunctionCall","src":"9013:21:21"},"nativeSrc":"9013:21:21","nodeType":"YulExpressionStatement","src":"9013:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9054:9:21","nodeType":"YulIdentifier","src":"9054:9:21"},{"kind":"number","nativeSrc":"9065:2:21","nodeType":"YulLiteral","src":"9065:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9050:3:21","nodeType":"YulIdentifier","src":"9050:3:21"},"nativeSrc":"9050:18:21","nodeType":"YulFunctionCall","src":"9050:18:21"},{"kind":"number","nativeSrc":"9070:2:21","nodeType":"YulLiteral","src":"9070:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"9043:6:21","nodeType":"YulIdentifier","src":"9043:6:21"},"nativeSrc":"9043:30:21","nodeType":"YulFunctionCall","src":"9043:30:21"},"nativeSrc":"9043:30:21","nodeType":"YulExpressionStatement","src":"9043:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9093:9:21","nodeType":"YulIdentifier","src":"9093:9:21"},{"kind":"number","nativeSrc":"9104:2:21","nodeType":"YulLiteral","src":"9104:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9089:3:21","nodeType":"YulIdentifier","src":"9089:3:21"},"nativeSrc":"9089:18:21","nodeType":"YulFunctionCall","src":"9089:18:21"},{"hexValue":"496e76616c6964204d4f4e20616d6f756e74","kind":"string","nativeSrc":"9109:20:21","nodeType":"YulLiteral","src":"9109:20:21","type":"","value":"Invalid MON amount"}],"functionName":{"name":"mstore","nativeSrc":"9082:6:21","nodeType":"YulIdentifier","src":"9082:6:21"},"nativeSrc":"9082:48:21","nodeType":"YulFunctionCall","src":"9082:48:21"},"nativeSrc":"9082:48:21","nodeType":"YulExpressionStatement","src":"9082:48:21"},{"nativeSrc":"9139:26:21","nodeType":"YulAssignment","src":"9139:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9151:9:21","nodeType":"YulIdentifier","src":"9151:9:21"},{"kind":"number","nativeSrc":"9162:2:21","nodeType":"YulLiteral","src":"9162:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9147:3:21","nodeType":"YulIdentifier","src":"9147:3:21"},"nativeSrc":"9147:18:21","nodeType":"YulFunctionCall","src":"9147:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9139:4:21","nodeType":"YulIdentifier","src":"9139:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8829:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8980:9:21","nodeType":"YulTypedName","src":"8980:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8994:4:21","nodeType":"YulTypedName","src":"8994:4:21","type":""}],"src":"8829:342:21"},{"body":{"nativeSrc":"9305:145:21","nodeType":"YulBlock","src":"9305:145:21","statements":[{"nativeSrc":"9315:26:21","nodeType":"YulAssignment","src":"9315:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9327:9:21","nodeType":"YulIdentifier","src":"9327:9:21"},{"kind":"number","nativeSrc":"9338:2:21","nodeType":"YulLiteral","src":"9338:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9323:3:21","nodeType":"YulIdentifier","src":"9323:3:21"},"nativeSrc":"9323:18:21","nodeType":"YulFunctionCall","src":"9323:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9315:4:21","nodeType":"YulIdentifier","src":"9315:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9357:9:21","nodeType":"YulIdentifier","src":"9357:9:21"},{"arguments":[{"name":"value0","nativeSrc":"9372:6:21","nodeType":"YulIdentifier","src":"9372:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9388:3:21","nodeType":"YulLiteral","src":"9388:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"9393:1:21","nodeType":"YulLiteral","src":"9393:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9384:3:21","nodeType":"YulIdentifier","src":"9384:3:21"},"nativeSrc":"9384:11:21","nodeType":"YulFunctionCall","src":"9384:11:21"},{"kind":"number","nativeSrc":"9397:1:21","nodeType":"YulLiteral","src":"9397:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9380:3:21","nodeType":"YulIdentifier","src":"9380:3:21"},"nativeSrc":"9380:19:21","nodeType":"YulFunctionCall","src":"9380:19:21"}],"functionName":{"name":"and","nativeSrc":"9368:3:21","nodeType":"YulIdentifier","src":"9368:3:21"},"nativeSrc":"9368:32:21","nodeType":"YulFunctionCall","src":"9368:32:21"}],"functionName":{"name":"mstore","nativeSrc":"9350:6:21","nodeType":"YulIdentifier","src":"9350:6:21"},"nativeSrc":"9350:51:21","nodeType":"YulFunctionCall","src":"9350:51:21"},"nativeSrc":"9350:51:21","nodeType":"YulExpressionStatement","src":"9350:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9421:9:21","nodeType":"YulIdentifier","src":"9421:9:21"},{"kind":"number","nativeSrc":"9432:2:21","nodeType":"YulLiteral","src":"9432:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9417:3:21","nodeType":"YulIdentifier","src":"9417:3:21"},"nativeSrc":"9417:18:21","nodeType":"YulFunctionCall","src":"9417:18:21"},{"name":"value1","nativeSrc":"9437:6:21","nodeType":"YulIdentifier","src":"9437:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9410:6:21","nodeType":"YulIdentifier","src":"9410:6:21"},"nativeSrc":"9410:34:21","nodeType":"YulFunctionCall","src":"9410:34:21"},"nativeSrc":"9410:34:21","nodeType":"YulExpressionStatement","src":"9410:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9176:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9266:9:21","nodeType":"YulTypedName","src":"9266:9:21","type":""},{"name":"value1","nativeSrc":"9277:6:21","nodeType":"YulTypedName","src":"9277:6:21","type":""},{"name":"value0","nativeSrc":"9285:6:21","nodeType":"YulTypedName","src":"9285:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9296:4:21","nodeType":"YulTypedName","src":"9296:4:21","type":""}],"src":"9176:274:21"},{"body":{"nativeSrc":"9533:167:21","nodeType":"YulBlock","src":"9533:167:21","statements":[{"body":{"nativeSrc":"9579:16:21","nodeType":"YulBlock","src":"9579:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9588:1:21","nodeType":"YulLiteral","src":"9588:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9591:1:21","nodeType":"YulLiteral","src":"9591:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9581:6:21","nodeType":"YulIdentifier","src":"9581:6:21"},"nativeSrc":"9581:12:21","nodeType":"YulFunctionCall","src":"9581:12:21"},"nativeSrc":"9581:12:21","nodeType":"YulExpressionStatement","src":"9581:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9554:7:21","nodeType":"YulIdentifier","src":"9554:7:21"},{"name":"headStart","nativeSrc":"9563:9:21","nodeType":"YulIdentifier","src":"9563:9:21"}],"functionName":{"name":"sub","nativeSrc":"9550:3:21","nodeType":"YulIdentifier","src":"9550:3:21"},"nativeSrc":"9550:23:21","nodeType":"YulFunctionCall","src":"9550:23:21"},{"kind":"number","nativeSrc":"9575:2:21","nodeType":"YulLiteral","src":"9575:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9546:3:21","nodeType":"YulIdentifier","src":"9546:3:21"},"nativeSrc":"9546:32:21","nodeType":"YulFunctionCall","src":"9546:32:21"},"nativeSrc":"9543:52:21","nodeType":"YulIf","src":"9543:52:21"},{"nativeSrc":"9604:29:21","nodeType":"YulVariableDeclaration","src":"9604:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9623:9:21","nodeType":"YulIdentifier","src":"9623:9:21"}],"functionName":{"name":"mload","nativeSrc":"9617:5:21","nodeType":"YulIdentifier","src":"9617:5:21"},"nativeSrc":"9617:16:21","nodeType":"YulFunctionCall","src":"9617:16:21"},"variables":[{"name":"value","nativeSrc":"9608:5:21","nodeType":"YulTypedName","src":"9608:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9664:5:21","nodeType":"YulIdentifier","src":"9664:5:21"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"9642:21:21","nodeType":"YulIdentifier","src":"9642:21:21"},"nativeSrc":"9642:28:21","nodeType":"YulFunctionCall","src":"9642:28:21"},"nativeSrc":"9642:28:21","nodeType":"YulExpressionStatement","src":"9642:28:21"},{"nativeSrc":"9679:15:21","nodeType":"YulAssignment","src":"9679:15:21","value":{"name":"value","nativeSrc":"9689:5:21","nodeType":"YulIdentifier","src":"9689:5:21"},"variableNames":[{"name":"value0","nativeSrc":"9679:6:21","nodeType":"YulIdentifier","src":"9679:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9455:245:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9499:9:21","nodeType":"YulTypedName","src":"9499:9:21","type":""},{"name":"dataEnd","nativeSrc":"9510:7:21","nodeType":"YulTypedName","src":"9510:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9522:6:21","nodeType":"YulTypedName","src":"9522:6:21","type":""}],"src":"9455:245:21"},{"body":{"nativeSrc":"9862:162:21","nodeType":"YulBlock","src":"9862:162:21","statements":[{"nativeSrc":"9872:26:21","nodeType":"YulAssignment","src":"9872:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9884:9:21","nodeType":"YulIdentifier","src":"9884:9:21"},{"kind":"number","nativeSrc":"9895:2:21","nodeType":"YulLiteral","src":"9895:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9880:3:21","nodeType":"YulIdentifier","src":"9880:3:21"},"nativeSrc":"9880:18:21","nodeType":"YulFunctionCall","src":"9880:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9872:4:21","nodeType":"YulIdentifier","src":"9872:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9914:9:21","nodeType":"YulIdentifier","src":"9914:9:21"},{"name":"value0","nativeSrc":"9925:6:21","nodeType":"YulIdentifier","src":"9925:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9907:6:21","nodeType":"YulIdentifier","src":"9907:6:21"},"nativeSrc":"9907:25:21","nodeType":"YulFunctionCall","src":"9907:25:21"},"nativeSrc":"9907:25:21","nodeType":"YulExpressionStatement","src":"9907:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9952:9:21","nodeType":"YulIdentifier","src":"9952:9:21"},{"kind":"number","nativeSrc":"9963:2:21","nodeType":"YulLiteral","src":"9963:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9948:3:21","nodeType":"YulIdentifier","src":"9948:3:21"},"nativeSrc":"9948:18:21","nodeType":"YulFunctionCall","src":"9948:18:21"},{"name":"value1","nativeSrc":"9968:6:21","nodeType":"YulIdentifier","src":"9968:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9941:6:21","nodeType":"YulIdentifier","src":"9941:6:21"},"nativeSrc":"9941:34:21","nodeType":"YulFunctionCall","src":"9941:34:21"},"nativeSrc":"9941:34:21","nodeType":"YulExpressionStatement","src":"9941:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9995:9:21","nodeType":"YulIdentifier","src":"9995:9:21"},{"kind":"number","nativeSrc":"10006:2:21","nodeType":"YulLiteral","src":"10006:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9991:3:21","nodeType":"YulIdentifier","src":"9991:3:21"},"nativeSrc":"9991:18:21","nodeType":"YulFunctionCall","src":"9991:18:21"},{"name":"value2","nativeSrc":"10011:6:21","nodeType":"YulIdentifier","src":"10011:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9984:6:21","nodeType":"YulIdentifier","src":"9984:6:21"},"nativeSrc":"9984:34:21","nodeType":"YulFunctionCall","src":"9984:34:21"},"nativeSrc":"9984:34:21","nodeType":"YulExpressionStatement","src":"9984:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9705:319:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9815:9:21","nodeType":"YulTypedName","src":"9815:9:21","type":""},{"name":"value2","nativeSrc":"9826:6:21","nodeType":"YulTypedName","src":"9826:6:21","type":""},{"name":"value1","nativeSrc":"9834:6:21","nodeType":"YulTypedName","src":"9834:6:21","type":""},{"name":"value0","nativeSrc":"9842:6:21","nodeType":"YulTypedName","src":"9842:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9853:4:21","nodeType":"YulTypedName","src":"9853:4:21","type":""}],"src":"9705:319:21"},{"body":{"nativeSrc":"10203:182:21","nodeType":"YulBlock","src":"10203:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10220:9:21","nodeType":"YulIdentifier","src":"10220:9:21"},{"kind":"number","nativeSrc":"10231:2:21","nodeType":"YulLiteral","src":"10231:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10213:6:21","nodeType":"YulIdentifier","src":"10213:6:21"},"nativeSrc":"10213:21:21","nodeType":"YulFunctionCall","src":"10213:21:21"},"nativeSrc":"10213:21:21","nodeType":"YulExpressionStatement","src":"10213:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10254:9:21","nodeType":"YulIdentifier","src":"10254:9:21"},{"kind":"number","nativeSrc":"10265:2:21","nodeType":"YulLiteral","src":"10265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10250:3:21","nodeType":"YulIdentifier","src":"10250:3:21"},"nativeSrc":"10250:18:21","nodeType":"YulFunctionCall","src":"10250:18:21"},{"kind":"number","nativeSrc":"10270:2:21","nodeType":"YulLiteral","src":"10270:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10243:6:21","nodeType":"YulIdentifier","src":"10243:6:21"},"nativeSrc":"10243:30:21","nodeType":"YulFunctionCall","src":"10243:30:21"},"nativeSrc":"10243:30:21","nodeType":"YulExpressionStatement","src":"10243:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10293:9:21","nodeType":"YulIdentifier","src":"10293:9:21"},{"kind":"number","nativeSrc":"10304:2:21","nodeType":"YulLiteral","src":"10304:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10289:3:21","nodeType":"YulIdentifier","src":"10289:3:21"},"nativeSrc":"10289:18:21","nodeType":"YulFunctionCall","src":"10289:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"10309:34:21","nodeType":"YulLiteral","src":"10309:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"10282:6:21","nodeType":"YulIdentifier","src":"10282:6:21"},"nativeSrc":"10282:62:21","nodeType":"YulFunctionCall","src":"10282:62:21"},"nativeSrc":"10282:62:21","nodeType":"YulExpressionStatement","src":"10282:62:21"},{"nativeSrc":"10353:26:21","nodeType":"YulAssignment","src":"10353:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10365:9:21","nodeType":"YulIdentifier","src":"10365:9:21"},{"kind":"number","nativeSrc":"10376:2:21","nodeType":"YulLiteral","src":"10376:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10361:3:21","nodeType":"YulIdentifier","src":"10361:3:21"},"nativeSrc":"10361:18:21","nodeType":"YulFunctionCall","src":"10361:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10353:4:21","nodeType":"YulIdentifier","src":"10353:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10029:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10180:9:21","nodeType":"YulTypedName","src":"10180:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10194:4:21","nodeType":"YulTypedName","src":"10194:4:21","type":""}],"src":"10029:356:21"},{"body":{"nativeSrc":"10564:233:21","nodeType":"YulBlock","src":"10564:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10581:9:21","nodeType":"YulIdentifier","src":"10581:9:21"},{"kind":"number","nativeSrc":"10592:2:21","nodeType":"YulLiteral","src":"10592:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10574:6:21","nodeType":"YulIdentifier","src":"10574:6:21"},"nativeSrc":"10574:21:21","nodeType":"YulFunctionCall","src":"10574:21:21"},"nativeSrc":"10574:21:21","nodeType":"YulExpressionStatement","src":"10574:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10615:9:21","nodeType":"YulIdentifier","src":"10615:9:21"},{"kind":"number","nativeSrc":"10626:2:21","nodeType":"YulLiteral","src":"10626:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10611:3:21","nodeType":"YulIdentifier","src":"10611:3:21"},"nativeSrc":"10611:18:21","nodeType":"YulFunctionCall","src":"10611:18:21"},{"kind":"number","nativeSrc":"10631:2:21","nodeType":"YulLiteral","src":"10631:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"10604:6:21","nodeType":"YulIdentifier","src":"10604:6:21"},"nativeSrc":"10604:30:21","nodeType":"YulFunctionCall","src":"10604:30:21"},"nativeSrc":"10604:30:21","nodeType":"YulExpressionStatement","src":"10604:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10654:9:21","nodeType":"YulIdentifier","src":"10654:9:21"},{"kind":"number","nativeSrc":"10665:2:21","nodeType":"YulLiteral","src":"10665:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10650:3:21","nodeType":"YulIdentifier","src":"10650:3:21"},"nativeSrc":"10650:18:21","nodeType":"YulFunctionCall","src":"10650:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nativeSrc":"10670:34:21","nodeType":"YulLiteral","src":"10670:34:21","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nativeSrc":"10643:6:21","nodeType":"YulIdentifier","src":"10643:6:21"},"nativeSrc":"10643:62:21","nodeType":"YulFunctionCall","src":"10643:62:21"},"nativeSrc":"10643:62:21","nodeType":"YulExpressionStatement","src":"10643:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10725:9:21","nodeType":"YulIdentifier","src":"10725:9:21"},{"kind":"number","nativeSrc":"10736:2:21","nodeType":"YulLiteral","src":"10736:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10721:3:21","nodeType":"YulIdentifier","src":"10721:3:21"},"nativeSrc":"10721:18:21","nodeType":"YulFunctionCall","src":"10721:18:21"},{"hexValue":"6e697469616c697a696e67","kind":"string","nativeSrc":"10741:13:21","nodeType":"YulLiteral","src":"10741:13:21","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nativeSrc":"10714:6:21","nodeType":"YulIdentifier","src":"10714:6:21"},"nativeSrc":"10714:41:21","nodeType":"YulFunctionCall","src":"10714:41:21"},"nativeSrc":"10714:41:21","nodeType":"YulExpressionStatement","src":"10714:41:21"},{"nativeSrc":"10764:27:21","nodeType":"YulAssignment","src":"10764:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10776:9:21","nodeType":"YulIdentifier","src":"10776:9:21"},{"kind":"number","nativeSrc":"10787:3:21","nodeType":"YulLiteral","src":"10787:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10772:3:21","nodeType":"YulIdentifier","src":"10772:3:21"},"nativeSrc":"10772:19:21","nodeType":"YulFunctionCall","src":"10772:19:21"},"variableNames":[{"name":"tail","nativeSrc":"10764:4:21","nodeType":"YulIdentifier","src":"10764:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10390:407:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10541:9:21","nodeType":"YulTypedName","src":"10541:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10555:4:21","nodeType":"YulTypedName","src":"10555:4:21","type":""}],"src":"10390:407:21"},{"body":{"nativeSrc":"10949:186:21","nodeType":"YulBlock","src":"10949:186:21","statements":[{"nativeSrc":"10959:41:21","nodeType":"YulVariableDeclaration","src":"10959:41:21","value":{"arguments":[{"kind":"number","nativeSrc":"10973:26:21","nodeType":"YulLiteral","src":"10973:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"10969:3:21","nodeType":"YulIdentifier","src":"10969:3:21"},"nativeSrc":"10969:31:21","nodeType":"YulFunctionCall","src":"10969:31:21"},"variables":[{"name":"_1","nativeSrc":"10963:2:21","nodeType":"YulTypedName","src":"10963:2:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11016:3:21","nodeType":"YulIdentifier","src":"11016:3:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11029:2:21","nodeType":"YulLiteral","src":"11029:2:21","type":"","value":"96"},{"name":"value0","nativeSrc":"11033:6:21","nodeType":"YulIdentifier","src":"11033:6:21"}],"functionName":{"name":"shl","nativeSrc":"11025:3:21","nodeType":"YulIdentifier","src":"11025:3:21"},"nativeSrc":"11025:15:21","nodeType":"YulFunctionCall","src":"11025:15:21"},{"name":"_1","nativeSrc":"11042:2:21","nodeType":"YulIdentifier","src":"11042:2:21"}],"functionName":{"name":"and","nativeSrc":"11021:3:21","nodeType":"YulIdentifier","src":"11021:3:21"},"nativeSrc":"11021:24:21","nodeType":"YulFunctionCall","src":"11021:24:21"}],"functionName":{"name":"mstore","nativeSrc":"11009:6:21","nodeType":"YulIdentifier","src":"11009:6:21"},"nativeSrc":"11009:37:21","nodeType":"YulFunctionCall","src":"11009:37:21"},"nativeSrc":"11009:37:21","nodeType":"YulExpressionStatement","src":"11009:37:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"11066:3:21","nodeType":"YulIdentifier","src":"11066:3:21"},{"kind":"number","nativeSrc":"11071:2:21","nodeType":"YulLiteral","src":"11071:2:21","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"11062:3:21","nodeType":"YulIdentifier","src":"11062:3:21"},"nativeSrc":"11062:12:21","nodeType":"YulFunctionCall","src":"11062:12:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11084:2:21","nodeType":"YulLiteral","src":"11084:2:21","type":"","value":"96"},{"name":"value1","nativeSrc":"11088:6:21","nodeType":"YulIdentifier","src":"11088:6:21"}],"functionName":{"name":"shl","nativeSrc":"11080:3:21","nodeType":"YulIdentifier","src":"11080:3:21"},"nativeSrc":"11080:15:21","nodeType":"YulFunctionCall","src":"11080:15:21"},{"name":"_1","nativeSrc":"11097:2:21","nodeType":"YulIdentifier","src":"11097:2:21"}],"functionName":{"name":"and","nativeSrc":"11076:3:21","nodeType":"YulIdentifier","src":"11076:3:21"},"nativeSrc":"11076:24:21","nodeType":"YulFunctionCall","src":"11076:24:21"}],"functionName":{"name":"mstore","nativeSrc":"11055:6:21","nodeType":"YulIdentifier","src":"11055:6:21"},"nativeSrc":"11055:46:21","nodeType":"YulFunctionCall","src":"11055:46:21"},"nativeSrc":"11055:46:21","nodeType":"YulExpressionStatement","src":"11055:46:21"},{"nativeSrc":"11110:19:21","nodeType":"YulAssignment","src":"11110:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"11121:3:21","nodeType":"YulIdentifier","src":"11121:3:21"},{"kind":"number","nativeSrc":"11126:2:21","nodeType":"YulLiteral","src":"11126:2:21","type":"","value":"40"}],"functionName":{"name":"add","nativeSrc":"11117:3:21","nodeType":"YulIdentifier","src":"11117:3:21"},"nativeSrc":"11117:12:21","nodeType":"YulFunctionCall","src":"11117:12:21"},"variableNames":[{"name":"end","nativeSrc":"11110:3:21","nodeType":"YulIdentifier","src":"11110:3:21"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"10802:333:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10917:3:21","nodeType":"YulTypedName","src":"10917:3:21","type":""},{"name":"value1","nativeSrc":"10922:6:21","nodeType":"YulTypedName","src":"10922:6:21","type":""},{"name":"value0","nativeSrc":"10930:6:21","nodeType":"YulTypedName","src":"10930:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10941:3:21","nodeType":"YulTypedName","src":"10941:3:21","type":""}],"src":"10802:333:21"},{"body":{"nativeSrc":"11188:77:21","nodeType":"YulBlock","src":"11188:77:21","statements":[{"nativeSrc":"11198:16:21","nodeType":"YulAssignment","src":"11198:16:21","value":{"arguments":[{"name":"x","nativeSrc":"11209:1:21","nodeType":"YulIdentifier","src":"11209:1:21"},{"name":"y","nativeSrc":"11212:1:21","nodeType":"YulIdentifier","src":"11212:1:21"}],"functionName":{"name":"add","nativeSrc":"11205:3:21","nodeType":"YulIdentifier","src":"11205:3:21"},"nativeSrc":"11205:9:21","nodeType":"YulFunctionCall","src":"11205:9:21"},"variableNames":[{"name":"sum","nativeSrc":"11198:3:21","nodeType":"YulIdentifier","src":"11198:3:21"}]},{"body":{"nativeSrc":"11237:22:21","nodeType":"YulBlock","src":"11237:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11239:16:21","nodeType":"YulIdentifier","src":"11239:16:21"},"nativeSrc":"11239:18:21","nodeType":"YulFunctionCall","src":"11239:18:21"},"nativeSrc":"11239:18:21","nodeType":"YulExpressionStatement","src":"11239:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11229:1:21","nodeType":"YulIdentifier","src":"11229:1:21"},{"name":"sum","nativeSrc":"11232:3:21","nodeType":"YulIdentifier","src":"11232:3:21"}],"functionName":{"name":"gt","nativeSrc":"11226:2:21","nodeType":"YulIdentifier","src":"11226:2:21"},"nativeSrc":"11226:10:21","nodeType":"YulFunctionCall","src":"11226:10:21"},"nativeSrc":"11223:36:21","nodeType":"YulIf","src":"11223:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"11140:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11171:1:21","nodeType":"YulTypedName","src":"11171:1:21","type":""},{"name":"y","nativeSrc":"11174:1:21","nodeType":"YulTypedName","src":"11174:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11180:3:21","nodeType":"YulTypedName","src":"11180:3:21","type":""}],"src":"11140:125:21"},{"body":{"nativeSrc":"11505:267:21","nodeType":"YulBlock","src":"11505:267:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11522:9:21","nodeType":"YulIdentifier","src":"11522:9:21"},{"name":"value0","nativeSrc":"11533:6:21","nodeType":"YulIdentifier","src":"11533:6:21"}],"functionName":{"name":"mstore","nativeSrc":"11515:6:21","nodeType":"YulIdentifier","src":"11515:6:21"},"nativeSrc":"11515:25:21","nodeType":"YulFunctionCall","src":"11515:25:21"},"nativeSrc":"11515:25:21","nodeType":"YulExpressionStatement","src":"11515:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11560:9:21","nodeType":"YulIdentifier","src":"11560:9:21"},{"kind":"number","nativeSrc":"11571:2:21","nodeType":"YulLiteral","src":"11571:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11556:3:21","nodeType":"YulIdentifier","src":"11556:3:21"},"nativeSrc":"11556:18:21","nodeType":"YulFunctionCall","src":"11556:18:21"},{"kind":"number","nativeSrc":"11576:3:21","nodeType":"YulLiteral","src":"11576:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"11549:6:21","nodeType":"YulIdentifier","src":"11549:6:21"},"nativeSrc":"11549:31:21","nodeType":"YulFunctionCall","src":"11549:31:21"},"nativeSrc":"11549:31:21","nodeType":"YulExpressionStatement","src":"11549:31:21"},{"nativeSrc":"11589:65:21","nodeType":"YulAssignment","src":"11589:65:21","value":{"arguments":[{"name":"value1","nativeSrc":"11626:6:21","nodeType":"YulIdentifier","src":"11626:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"11638:9:21","nodeType":"YulIdentifier","src":"11638:9:21"},{"kind":"number","nativeSrc":"11649:3:21","nodeType":"YulLiteral","src":"11649:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11634:3:21","nodeType":"YulIdentifier","src":"11634:3:21"},"nativeSrc":"11634:19:21","nodeType":"YulFunctionCall","src":"11634:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"11597:28:21","nodeType":"YulIdentifier","src":"11597:28:21"},"nativeSrc":"11597:57:21","nodeType":"YulFunctionCall","src":"11597:57:21"},"variableNames":[{"name":"tail","nativeSrc":"11589:4:21","nodeType":"YulIdentifier","src":"11589:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11674:9:21","nodeType":"YulIdentifier","src":"11674:9:21"},{"kind":"number","nativeSrc":"11685:2:21","nodeType":"YulLiteral","src":"11685:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11670:3:21","nodeType":"YulIdentifier","src":"11670:3:21"},"nativeSrc":"11670:18:21","nodeType":"YulFunctionCall","src":"11670:18:21"},{"arguments":[{"name":"value2","nativeSrc":"11694:6:21","nodeType":"YulIdentifier","src":"11694:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11710:3:21","nodeType":"YulLiteral","src":"11710:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"11715:1:21","nodeType":"YulLiteral","src":"11715:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11706:3:21","nodeType":"YulIdentifier","src":"11706:3:21"},"nativeSrc":"11706:11:21","nodeType":"YulFunctionCall","src":"11706:11:21"},{"kind":"number","nativeSrc":"11719:1:21","nodeType":"YulLiteral","src":"11719:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11702:3:21","nodeType":"YulIdentifier","src":"11702:3:21"},"nativeSrc":"11702:19:21","nodeType":"YulFunctionCall","src":"11702:19:21"}],"functionName":{"name":"and","nativeSrc":"11690:3:21","nodeType":"YulIdentifier","src":"11690:3:21"},"nativeSrc":"11690:32:21","nodeType":"YulFunctionCall","src":"11690:32:21"}],"functionName":{"name":"mstore","nativeSrc":"11663:6:21","nodeType":"YulIdentifier","src":"11663:6:21"},"nativeSrc":"11663:60:21","nodeType":"YulFunctionCall","src":"11663:60:21"},"nativeSrc":"11663:60:21","nodeType":"YulExpressionStatement","src":"11663:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11743:9:21","nodeType":"YulIdentifier","src":"11743:9:21"},{"kind":"number","nativeSrc":"11754:2:21","nodeType":"YulLiteral","src":"11754:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11739:3:21","nodeType":"YulIdentifier","src":"11739:3:21"},"nativeSrc":"11739:18:21","nodeType":"YulFunctionCall","src":"11739:18:21"},{"name":"value3","nativeSrc":"11759:6:21","nodeType":"YulIdentifier","src":"11759:6:21"}],"functionName":{"name":"mstore","nativeSrc":"11732:6:21","nodeType":"YulIdentifier","src":"11732:6:21"},"nativeSrc":"11732:34:21","nodeType":"YulFunctionCall","src":"11732:34:21"},"nativeSrc":"11732:34:21","nodeType":"YulExpressionStatement","src":"11732:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nativeSrc":"11270:502:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11450:9:21","nodeType":"YulTypedName","src":"11450:9:21","type":""},{"name":"value3","nativeSrc":"11461:6:21","nodeType":"YulTypedName","src":"11461:6:21","type":""},{"name":"value2","nativeSrc":"11469:6:21","nodeType":"YulTypedName","src":"11469:6:21","type":""},{"name":"value1","nativeSrc":"11477:6:21","nodeType":"YulTypedName","src":"11477:6:21","type":""},{"name":"value0","nativeSrc":"11485:6:21","nodeType":"YulTypedName","src":"11485:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11496:4:21","nodeType":"YulTypedName","src":"11496:4:21","type":""}],"src":"11270:502:21"},{"body":{"nativeSrc":"11934:218:21","nodeType":"YulBlock","src":"11934:218:21","statements":[{"nativeSrc":"11944:26:21","nodeType":"YulAssignment","src":"11944:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11956:9:21","nodeType":"YulIdentifier","src":"11956:9:21"},{"kind":"number","nativeSrc":"11967:2:21","nodeType":"YulLiteral","src":"11967:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11952:3:21","nodeType":"YulIdentifier","src":"11952:3:21"},"nativeSrc":"11952:18:21","nodeType":"YulFunctionCall","src":"11952:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11944:4:21","nodeType":"YulIdentifier","src":"11944:4:21"}]},{"nativeSrc":"11979:29:21","nodeType":"YulVariableDeclaration","src":"11979:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11997:3:21","nodeType":"YulLiteral","src":"11997:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"12002:1:21","nodeType":"YulLiteral","src":"12002:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11993:3:21","nodeType":"YulIdentifier","src":"11993:3:21"},"nativeSrc":"11993:11:21","nodeType":"YulFunctionCall","src":"11993:11:21"},{"kind":"number","nativeSrc":"12006:1:21","nodeType":"YulLiteral","src":"12006:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11989:3:21","nodeType":"YulIdentifier","src":"11989:3:21"},"nativeSrc":"11989:19:21","nodeType":"YulFunctionCall","src":"11989:19:21"},"variables":[{"name":"_1","nativeSrc":"11983:2:21","nodeType":"YulTypedName","src":"11983:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12024:9:21","nodeType":"YulIdentifier","src":"12024:9:21"},{"arguments":[{"name":"value0","nativeSrc":"12039:6:21","nodeType":"YulIdentifier","src":"12039:6:21"},{"name":"_1","nativeSrc":"12047:2:21","nodeType":"YulIdentifier","src":"12047:2:21"}],"functionName":{"name":"and","nativeSrc":"12035:3:21","nodeType":"YulIdentifier","src":"12035:3:21"},"nativeSrc":"12035:15:21","nodeType":"YulFunctionCall","src":"12035:15:21"}],"functionName":{"name":"mstore","nativeSrc":"12017:6:21","nodeType":"YulIdentifier","src":"12017:6:21"},"nativeSrc":"12017:34:21","nodeType":"YulFunctionCall","src":"12017:34:21"},"nativeSrc":"12017:34:21","nodeType":"YulExpressionStatement","src":"12017:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12071:9:21","nodeType":"YulIdentifier","src":"12071:9:21"},{"kind":"number","nativeSrc":"12082:2:21","nodeType":"YulLiteral","src":"12082:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12067:3:21","nodeType":"YulIdentifier","src":"12067:3:21"},"nativeSrc":"12067:18:21","nodeType":"YulFunctionCall","src":"12067:18:21"},{"arguments":[{"name":"value1","nativeSrc":"12091:6:21","nodeType":"YulIdentifier","src":"12091:6:21"},{"name":"_1","nativeSrc":"12099:2:21","nodeType":"YulIdentifier","src":"12099:2:21"}],"functionName":{"name":"and","nativeSrc":"12087:3:21","nodeType":"YulIdentifier","src":"12087:3:21"},"nativeSrc":"12087:15:21","nodeType":"YulFunctionCall","src":"12087:15:21"}],"functionName":{"name":"mstore","nativeSrc":"12060:6:21","nodeType":"YulIdentifier","src":"12060:6:21"},"nativeSrc":"12060:43:21","nodeType":"YulFunctionCall","src":"12060:43:21"},"nativeSrc":"12060:43:21","nodeType":"YulExpressionStatement","src":"12060:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12123:9:21","nodeType":"YulIdentifier","src":"12123:9:21"},{"kind":"number","nativeSrc":"12134:2:21","nodeType":"YulLiteral","src":"12134:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12119:3:21","nodeType":"YulIdentifier","src":"12119:3:21"},"nativeSrc":"12119:18:21","nodeType":"YulFunctionCall","src":"12119:18:21"},{"name":"value2","nativeSrc":"12139:6:21","nodeType":"YulIdentifier","src":"12139:6:21"}],"functionName":{"name":"mstore","nativeSrc":"12112:6:21","nodeType":"YulIdentifier","src":"12112:6:21"},"nativeSrc":"12112:34:21","nodeType":"YulFunctionCall","src":"12112:34:21"},"nativeSrc":"12112:34:21","nodeType":"YulExpressionStatement","src":"12112:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"11777:375:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11887:9:21","nodeType":"YulTypedName","src":"11887:9:21","type":""},{"name":"value2","nativeSrc":"11898:6:21","nodeType":"YulTypedName","src":"11898:6:21","type":""},{"name":"value1","nativeSrc":"11906:6:21","nodeType":"YulTypedName","src":"11906:6:21","type":""},{"name":"value0","nativeSrc":"11914:6:21","nodeType":"YulTypedName","src":"11914:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11925:4:21","nodeType":"YulTypedName","src":"11925:4:21","type":""}],"src":"11777:375:21"},{"body":{"nativeSrc":"12331:170:21","nodeType":"YulBlock","src":"12331:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12348:9:21","nodeType":"YulIdentifier","src":"12348:9:21"},{"kind":"number","nativeSrc":"12359:2:21","nodeType":"YulLiteral","src":"12359:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12341:6:21","nodeType":"YulIdentifier","src":"12341:6:21"},"nativeSrc":"12341:21:21","nodeType":"YulFunctionCall","src":"12341:21:21"},"nativeSrc":"12341:21:21","nodeType":"YulExpressionStatement","src":"12341:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12382:9:21","nodeType":"YulIdentifier","src":"12382:9:21"},{"kind":"number","nativeSrc":"12393:2:21","nodeType":"YulLiteral","src":"12393:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12378:3:21","nodeType":"YulIdentifier","src":"12378:3:21"},"nativeSrc":"12378:18:21","nodeType":"YulFunctionCall","src":"12378:18:21"},{"kind":"number","nativeSrc":"12398:2:21","nodeType":"YulLiteral","src":"12398:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"12371:6:21","nodeType":"YulIdentifier","src":"12371:6:21"},"nativeSrc":"12371:30:21","nodeType":"YulFunctionCall","src":"12371:30:21"},"nativeSrc":"12371:30:21","nodeType":"YulExpressionStatement","src":"12371:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12421:9:21","nodeType":"YulIdentifier","src":"12421:9:21"},{"kind":"number","nativeSrc":"12432:2:21","nodeType":"YulLiteral","src":"12432:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12417:3:21","nodeType":"YulIdentifier","src":"12417:3:21"},"nativeSrc":"12417:18:21","nodeType":"YulFunctionCall","src":"12417:18:21"},{"hexValue":"5472616e736665722066726f6d206661696c6564","kind":"string","nativeSrc":"12437:22:21","nodeType":"YulLiteral","src":"12437:22:21","type":"","value":"Transfer from failed"}],"functionName":{"name":"mstore","nativeSrc":"12410:6:21","nodeType":"YulIdentifier","src":"12410:6:21"},"nativeSrc":"12410:50:21","nodeType":"YulFunctionCall","src":"12410:50:21"},"nativeSrc":"12410:50:21","nodeType":"YulExpressionStatement","src":"12410:50:21"},{"nativeSrc":"12469:26:21","nodeType":"YulAssignment","src":"12469:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12481:9:21","nodeType":"YulIdentifier","src":"12481:9:21"},{"kind":"number","nativeSrc":"12492:2:21","nodeType":"YulLiteral","src":"12492:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12477:3:21","nodeType":"YulIdentifier","src":"12477:3:21"},"nativeSrc":"12477:18:21","nodeType":"YulFunctionCall","src":"12477:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12469:4:21","nodeType":"YulIdentifier","src":"12469:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12157:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12308:9:21","nodeType":"YulTypedName","src":"12308:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12322:4:21","nodeType":"YulTypedName","src":"12322:4:21","type":""}],"src":"12157:344:21"},{"body":{"nativeSrc":"12769:311:21","nodeType":"YulBlock","src":"12769:311:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12786:9:21","nodeType":"YulIdentifier","src":"12786:9:21"},{"name":"value0","nativeSrc":"12797:6:21","nodeType":"YulIdentifier","src":"12797:6:21"}],"functionName":{"name":"mstore","nativeSrc":"12779:6:21","nodeType":"YulIdentifier","src":"12779:6:21"},"nativeSrc":"12779:25:21","nodeType":"YulFunctionCall","src":"12779:25:21"},"nativeSrc":"12779:25:21","nodeType":"YulExpressionStatement","src":"12779:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12824:9:21","nodeType":"YulIdentifier","src":"12824:9:21"},{"kind":"number","nativeSrc":"12835:2:21","nodeType":"YulLiteral","src":"12835:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12820:3:21","nodeType":"YulIdentifier","src":"12820:3:21"},"nativeSrc":"12820:18:21","nodeType":"YulFunctionCall","src":"12820:18:21"},{"name":"value1","nativeSrc":"12840:6:21","nodeType":"YulIdentifier","src":"12840:6:21"}],"functionName":{"name":"mstore","nativeSrc":"12813:6:21","nodeType":"YulIdentifier","src":"12813:6:21"},"nativeSrc":"12813:34:21","nodeType":"YulFunctionCall","src":"12813:34:21"},"nativeSrc":"12813:34:21","nodeType":"YulExpressionStatement","src":"12813:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12867:9:21","nodeType":"YulIdentifier","src":"12867:9:21"},{"kind":"number","nativeSrc":"12878:2:21","nodeType":"YulLiteral","src":"12878:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12863:3:21","nodeType":"YulIdentifier","src":"12863:3:21"},"nativeSrc":"12863:18:21","nodeType":"YulFunctionCall","src":"12863:18:21"},{"kind":"number","nativeSrc":"12883:3:21","nodeType":"YulLiteral","src":"12883:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"12856:6:21","nodeType":"YulIdentifier","src":"12856:6:21"},"nativeSrc":"12856:31:21","nodeType":"YulFunctionCall","src":"12856:31:21"},"nativeSrc":"12856:31:21","nodeType":"YulExpressionStatement","src":"12856:31:21"},{"nativeSrc":"12896:65:21","nodeType":"YulAssignment","src":"12896:65:21","value":{"arguments":[{"name":"value2","nativeSrc":"12933:6:21","nodeType":"YulIdentifier","src":"12933:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12945:9:21","nodeType":"YulIdentifier","src":"12945:9:21"},{"kind":"number","nativeSrc":"12956:3:21","nodeType":"YulLiteral","src":"12956:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12941:3:21","nodeType":"YulIdentifier","src":"12941:3:21"},"nativeSrc":"12941:19:21","nodeType":"YulFunctionCall","src":"12941:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"12904:28:21","nodeType":"YulIdentifier","src":"12904:28:21"},"nativeSrc":"12904:57:21","nodeType":"YulFunctionCall","src":"12904:57:21"},"variableNames":[{"name":"tail","nativeSrc":"12896:4:21","nodeType":"YulIdentifier","src":"12896:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12981:9:21","nodeType":"YulIdentifier","src":"12981:9:21"},{"kind":"number","nativeSrc":"12992:2:21","nodeType":"YulLiteral","src":"12992:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12977:3:21","nodeType":"YulIdentifier","src":"12977:3:21"},"nativeSrc":"12977:18:21","nodeType":"YulFunctionCall","src":"12977:18:21"},{"arguments":[{"name":"value3","nativeSrc":"13001:6:21","nodeType":"YulIdentifier","src":"13001:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13017:3:21","nodeType":"YulLiteral","src":"13017:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"13022:1:21","nodeType":"YulLiteral","src":"13022:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13013:3:21","nodeType":"YulIdentifier","src":"13013:3:21"},"nativeSrc":"13013:11:21","nodeType":"YulFunctionCall","src":"13013:11:21"},{"kind":"number","nativeSrc":"13026:1:21","nodeType":"YulLiteral","src":"13026:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13009:3:21","nodeType":"YulIdentifier","src":"13009:3:21"},"nativeSrc":"13009:19:21","nodeType":"YulFunctionCall","src":"13009:19:21"}],"functionName":{"name":"and","nativeSrc":"12997:3:21","nodeType":"YulIdentifier","src":"12997:3:21"},"nativeSrc":"12997:32:21","nodeType":"YulFunctionCall","src":"12997:32:21"}],"functionName":{"name":"mstore","nativeSrc":"12970:6:21","nodeType":"YulIdentifier","src":"12970:6:21"},"nativeSrc":"12970:60:21","nodeType":"YulFunctionCall","src":"12970:60:21"},"nativeSrc":"12970:60:21","nodeType":"YulExpressionStatement","src":"12970:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13050:9:21","nodeType":"YulIdentifier","src":"13050:9:21"},{"kind":"number","nativeSrc":"13061:3:21","nodeType":"YulLiteral","src":"13061:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13046:3:21","nodeType":"YulIdentifier","src":"13046:3:21"},"nativeSrc":"13046:19:21","nodeType":"YulFunctionCall","src":"13046:19:21"},{"name":"value4","nativeSrc":"13067:6:21","nodeType":"YulIdentifier","src":"13067:6:21"}],"functionName":{"name":"mstore","nativeSrc":"13039:6:21","nodeType":"YulIdentifier","src":"13039:6:21"},"nativeSrc":"13039:35:21","nodeType":"YulFunctionCall","src":"13039:35:21"},"nativeSrc":"13039:35:21","nodeType":"YulExpressionStatement","src":"13039:35:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nativeSrc":"12506:574:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12706:9:21","nodeType":"YulTypedName","src":"12706:9:21","type":""},{"name":"value4","nativeSrc":"12717:6:21","nodeType":"YulTypedName","src":"12717:6:21","type":""},{"name":"value3","nativeSrc":"12725:6:21","nodeType":"YulTypedName","src":"12725:6:21","type":""},{"name":"value2","nativeSrc":"12733:6:21","nodeType":"YulTypedName","src":"12733:6:21","type":""},{"name":"value1","nativeSrc":"12741:6:21","nodeType":"YulTypedName","src":"12741:6:21","type":""},{"name":"value0","nativeSrc":"12749:6:21","nodeType":"YulTypedName","src":"12749:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12760:4:21","nodeType":"YulTypedName","src":"12760:4:21","type":""}],"src":"12506:574:21"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IBeanRouter_$3596__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a28601b0ae910b95731ae3334719dc00847820bdb91735e05dea6dbe2764dd3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid router address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d639fc955b36b67fa5448d3a34b9d4eac27c9aa0ce53caedf61483b0620a5241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid WMON address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Same tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c08743a62fbfc62b5113b364fb578a5efc244a19e22ea0a69b02007c3d9c0a6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid MON amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d6b048919902fd1284c6b3ff9fd909480608dbeb02bf16826ca8d3a9d48c2717__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Transfer from failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100f75760003560e01c80638da5cb5b1161008a578063af7be3d711610059578063af7be3d714610299578063c415b95c146102d9578063f2fde38b146102f9578063fe0291561461031957600080fd5b80638da5cb5b1461021b5780639b69c7c814610239578063a42dce8014610259578063ac29e1a11461027957600080fd5b8063715018a6116100c6578063715018a61461018e578063761de586146101a35780637d86b8a5146101c3578063858845d9146101fb57600080fd5b806334e1990714610103578063485cc955146101255780634aa066521461014557806354cf2aeb1461017857600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004611394565b61032c565b005b34801561013157600080fd5b506101236101403660046113c9565b6103b5565b34801561015157600080fd5b506101656101603660046113fc565b610508565b6040519081526020015b60405180910390f35b34801561018457600080fd5b5061016560675481565b34801561019a57600080fd5b506101236105ee565b3480156101af57600080fd5b506101236101be366004611446565b610602565b3480156101cf57600080fd5b506066546101e3906001600160a01b031681565b6040516001600160a01b03909116815260200161016f565b34801561020757600080fd5b5061012361021636600461148d565b610642565b34801561022757600080fd5b506033546001600160a01b03166101e3565b34801561024557600080fd5b5061012361025436600461148d565b6106bb565b34801561026557600080fd5b5061012361027436600461148d565b610732565b34801561028557600080fd5b506065546101e3906001600160a01b031681565b3480156102a557600080fd5b506102c96102b436600461148d565b60696020526000908152604090205460ff1681565b604051901515815260200161016f565b3480156102e557600080fd5b506068546101e3906001600160a01b031681565b34801561030557600080fd5b5061012361031436600461148d565b6107d0565b6101656103273660046114a8565b610849565b610334610a7b565b60648111156103795760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b60678190556040518181527f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76906020015b60405180910390a150565b600054610100900460ff16158080156103d55750600054600160ff909116105b806103ef5750303b1580156103ef575060005460ff166001145b6104525760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610370565b6000805460ff191660011790558015610475576000805461ff0019166101001790555b61047d610ad5565b606580546001600160a01b038086166001600160a01b0319928316179092556066805492851692821692909217909155601e60675560688054909116331790558015610503576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000806105158585610b04565b60655460405163d06ca61f60e01b81529192506000916001600160a01b039091169063d06ca61f9061054d908790869060040161152f565b600060405180830381865afa15801561056a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105929190810190611566565b905080600182516105a3919061163a565b815181106105b3576105b361164d565b602002602001015192506127106067546127106105d0919061163a565b6105da9085611663565b6105e4919061167a565b9695505050505050565b6105f6610a7b565b6106006000610ce3565b565b61060a610a7b565b60006106168484610d35565b6001600160a01b03166000908152606960205260409020805460ff191692151592909217909155505050565b61064a610a7b565b6001600160a01b0381166106995760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420726f75746572206164647265737360501b6044820152606401610370565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6106c3610a7b565b6001600160a01b0381166107105760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420574d4f4e206164647265737360601b6044820152606401610370565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61073a610a7b565b6001600160a01b0381166107825760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610370565b606880546001600160a01b0319166001600160a01b0383169081179091556040519081527fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f906020016103aa565b6107d8610a7b565b6001600160a01b03811661083d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610370565b61084681610ce3565b50565b600080831161088f5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610370565b836001600160a01b0316856001600160a01b0316036108de5760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b6044820152606401610370565b6001600160a01b038516610942578234146109305760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081353d388185b5bdd5b9d60721b6044820152606401610370565b61093b848484610ddb565b905061096a565b6001600160a01b03841661095b5761093b858484610f26565b6109678585858561115a565b90505b60006127106067548361097d9190611663565b610987919061167a565b90506000811180156109a157506001600160a01b03851615155b15610a1f5760685460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529086169063a9059cbb906044016020604051808303816000875af11580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d919061169c565b505b60408051858152602081018490529081018290526001600160a01b03808716919088169033907fe2bd3f957a9c89d5a58b7bf40f44d9249375545ef13817461d1c08e7f71e3a459060600160405180910390a450949350505050565b6033546001600160a01b031633146106005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610370565b600054610100900460ff16610afc5760405162461bcd60e51b8152600401610370906116b9565b610600611364565b60606001600160a01b038316610b23576066546001600160a01b031692505b6001600160a01b038216610b40576066546001600160a01b031691505b6000610b4c8484610d35565b6001600160a01b03811660009081526069602052604090205490915060ff1615610c0a57600060025b604051908082528060200260200182016040528015610b9e578160200160208202803683370190505b5090508481600081518110610bb557610bb561164d565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600181518110610be957610be961164d565b6001600160a01b03909216602092830291909101909101529150610cdd9050565b6066546001600160a01b0385811691161480610c3357506066546001600160a01b038481169116145b15610c415760006002610b75565b60408051600380825260808201909252600091602082016060803683370190505090508481600081518110610c7857610c7861164d565b6001600160a01b039283166020918202929092010152606654825191169082906001908110610ca957610ca961164d565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600281518110610be957610be961164d565b92915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000816001600160a01b0316836001600160a01b031610610d94576040516bffffffffffffffffffffffff19606084811b8216602084015285901b16603482015260480160405160208183030381529060405280519060200120610dd4565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b166034820152604801604051602081830303815290604052805190602001205b9392505050565b60408051600280825260608201835260009283929190602083019080368337505060665482519293506001600160a01b031691839150600090610e2057610e2061164d565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610e5457610e5461164d565b6001600160a01b03928316602091820292909201015260655460009116637ff36ab586868533610e86426104b0611704565b6040518663ffffffff1660e01b8152600401610ea59493929190611717565b60006040518083038185885af1158015610ec3573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610eec9190810190611566565b905060008160018351610eff919061163a565b81518110610f0f57610f0f61164d565b602002602001015190508093505050509392505050565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa0919061169c565b610fe35760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b6044820152606401610370565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529085169063095ea7b3906044016020604051808303816000875af1158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a919061169c565b5060408051600280825260608201835260009260208301908036833701905050905084816000815181106110905761109061164d565b6001600160a01b0392831660209182029290920101526066548251911690829060019081106110c1576110c161164d565b6001600160a01b039283166020918202929092010152606554600091166318cbafe5868685336110f3426104b0611704565b6040518663ffffffff1660e01b815260040161111395949392919061174c565b6000604051808303816000875af1158015611132573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eec9190810190611566565b6040516323b872dd60e01b8152336004820152306024820152604481018390526000906001600160a01b038616906323b872dd906064016020604051808303816000875af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d4919061169c565b6112175760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c88199c9bdb4819985a5b195960621b6044820152606401610370565b60655460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af115801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e919061169c565b50600061129b8686610b04565b6065549091506000906001600160a01b03166338ed1739868685336112c2426104b0611704565b6040518663ffffffff1660e01b81526004016112e295949392919061174c565b6000604051808303816000875af1158015611301573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113299190810190611566565b90506000816001835161133c919061163a565b8151811061134c5761134c61164d565b60200260200101519050809350505050949350505050565b600054610100900460ff1661138b5760405162461bcd60e51b8152600401610370906116b9565b61060033610ce3565b6000602082840312156113a657600080fd5b5035919050565b80356001600160a01b03811681146113c457600080fd5b919050565b600080604083850312156113dc57600080fd5b6113e5836113ad565b91506113f3602084016113ad565b90509250929050565b60008060006060848603121561141157600080fd5b61141a846113ad565b9250611428602085016113ad565b9150604084013590509250925092565b801515811461084657600080fd5b60008060006060848603121561145b57600080fd5b611464846113ad565b9250611472602085016113ad565b9150604084013561148281611438565b809150509250925092565b60006020828403121561149f57600080fd5b610dd4826113ad565b600080600080608085870312156114be57600080fd5b6114c7856113ad565b93506114d5602086016113ad565b93969395505050506040820135916060013590565b60008151808452602080850194506020840160005b838110156115245781516001600160a01b0316875295820195908201906001016114ff565b509495945050505050565b82815260406020820152600061154860408301846114ea565b949350505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561157957600080fd5b825167ffffffffffffffff8082111561159157600080fd5b818501915085601f8301126115a557600080fd5b8151818111156115b7576115b7611550565b8060051b604051601f19603f830116810181811085821117156115dc576115dc611550565b6040529182528482019250838101850191888311156115fa57600080fd5b938501935b82851015611618578451845293850193928501926115ff565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610cdd57610cdd611624565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610cdd57610cdd611624565b60008261169757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156116ae57600080fd5b8151610dd481611438565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80820180821115610cdd57610cdd611624565b84815260806020820152600061173060808301866114ea565b6001600160a01b03949094166040830152506060015292915050565b85815284602082015260a06040820152600061176b60a08301866114ea565b6001600160a01b039490941660608301525060800152939250505056fea164736f6c6343000816000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAF7BE3D7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAF7BE3D7 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xFE029156 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x9B69C7C8 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xAC29E1A1 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x761DE586 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x7D86B8A5 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x858845D9 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34E19907 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x54CF2AEB EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x5EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x66 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x68 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x334 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x67 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8C4D35E54A3F2EF1134138FD8EA3DAEE6A3C89E10D2665996BABDF70261E2C76 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3D5 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3EF JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x47D PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1E PUSH1 0x67 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x515 DUP6 DUP6 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x54D SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x152F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x592 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x5B3 JUMPI PUSH2 0x5B3 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x67 SLOAD PUSH2 0x2710 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x5DA SWAP1 DUP6 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x600 PUSH1 0x0 PUSH2 0xCE3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x60A PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 DUP5 DUP5 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x64A PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420726F757465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6C3 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420574D4F4E2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x73A PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x68 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F SWAP1 PUSH1 0x20 ADD PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x7D8 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x846 DUP2 PUSH2 0xCE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x942 JUMPI DUP3 CALLVALUE EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081353D388185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x93B DUP5 DUP5 DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP1 POP PUSH2 0x96A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x95B JUMPI PUSH2 0x93B DUP6 DUP5 DUP5 PUSH2 0xF26 JUMP JUMPDEST PUSH2 0x967 DUP6 DUP6 DUP6 DUP6 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x67 SLOAD DUP4 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x9A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xA1F JUMPI PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP2 SWAP1 DUP9 AND SWAP1 CALLER SWAP1 PUSH32 0xE2BD3F957A9C89D5A58B7BF40F44D9249375545EF13817461D1C08E7F71E3A45 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x600 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB40 JUMPI PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0xB4C DUP5 DUP5 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB9E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBB5 JUMPI PUSH2 0xBB5 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP2 POP PUSH2 0xCDD SWAP1 POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xC33 JUMPI POP PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC78 JUMPI PUSH2 0xC78 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xCA9 JUMPI PUSH2 0xCA9 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0x164D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP6 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x66 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xE20 JUMPI PUSH2 0xE20 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE54 JUMPI PUSH2 0xE54 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x7FF36AB5 DUP7 DUP7 DUP6 CALLER PUSH2 0xE86 TIMESTAMP PUSH2 0x4B0 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEEC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xF0F JUMPI PUSH2 0xF0F PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1090 JUMPI PUSH2 0x1090 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x66 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x10C1 JUMPI PUSH2 0x10C1 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x65 SLOAD PUSH1 0x0 SWAP2 AND PUSH4 0x18CBAFE5 DUP7 DUP7 DUP6 CALLER PUSH2 0x10F3 TIMESTAMP PUSH2 0x4B0 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEEC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C88199C9BDB4819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x129B DUP7 DUP7 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x65 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP7 DUP7 DUP6 CALLER PUSH2 0x12C2 TIMESTAMP PUSH2 0x4B0 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1329 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x134C JUMPI PUSH2 0x134C PUSH2 0x164D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x138B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x600 CALLER PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E5 DUP4 PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH2 0x13F3 PUSH1 0x20 DUP5 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141A DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP PUSH2 0x1428 PUSH1 0x20 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x145B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1464 DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP PUSH2 0x1472 PUSH1 0x20 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1482 DUP2 PUSH2 0x1438 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD4 DUP3 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C7 DUP6 PUSH2 0x13AD JUMP JUMPDEST SWAP4 POP PUSH2 0x14D5 PUSH1 0x20 DUP7 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1524 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14FF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1548 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B7 PUSH2 0x1550 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x15DC JUMPI PUSH2 0x15DC PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1618 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x15FF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0x1624 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1697 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDD4 DUP2 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0x1624 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1730 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x176B PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP EXP ","sourceMap":"1367:7358:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:183;;;;;;;;;;-1:-1:-1;2488:183:20;;;;;:::i;:::-;;:::i;:::-;;2204:254;;;;;;;;;;-1:-1:-1;2204:254:20;;;;;:::i;:::-;;:::i;3410:429::-;;;;;;;;;;-1:-1:-1;3410:429:20;;;;;:::i;:::-;;:::i;:::-;;;1121:25:21;;;1109:2;1094:18;3410:429:20;;;;;;;;1908:22;;;;;;;;;;;;;;;;2064:101:0;;;;;;;;;;;;;:::i;2909:221:20:-;;;;;;;;;;-1:-1:-1;2909:221:20;;;;;:::i;:::-;;:::i;1808:19::-;;;;;;;;;;-1:-1:-1;1808:19:20;;;;-1:-1:-1;;;;;1808:19:20;;;;;;-1:-1:-1;;;;;1838:32:21;;;1820:51;;1808:2;1793:18;1808:19:20;1674:203:21;8376:187:20;;;;;;;;;;-1:-1:-1;8376:187:20;;;;;:::i;:::-;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;8569:154:20;;;;;;;;;;-1:-1:-1;8569:154:20;;;;;:::i;:::-;;:::i;2677:226::-;;;;;;;;;;-1:-1:-1;2677:226:20;;;;;:::i;:::-;;:::i;1773:29::-;;;;;;;;;;-1:-1:-1;1773:29:20;;;;-1:-1:-1;;;;;1773:29:20;;;2003:46;;;;;;;;;;-1:-1:-1;2003:46:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2466:14:21;;2459:22;2441:41;;2429:2;2414:18;2003:46:20;2301:187:21;1970:27:20;;;;;;;;;;-1:-1:-1;1970:27:20;;;;-1:-1:-1;;;;;1970:27:20;;;2314:198:0;;;;;;;;;;-1:-1:-1;2314:198:0;;;;;:::i;:::-;;:::i;4879:963:20:-;;;;;;:::i;:::-;;:::i;2488:183::-;1334:13:0;:11;:13::i;:::-;2573:3:20::1;2562:7;:14;;2554:39;;;::::0;-1:-1:-1;;;2554:39:20;;3097:2:21;2554:39:20::1;::::0;::::1;3079:21:21::0;3136:2;3116:18;;;3109:30;-1:-1:-1;;;3155:18:21;;;3148:42;3207:18;;2554:39:20::1;;;;;;;;;2613:7;:17:::0;;;2645:19:::1;::::0;1121:25:21;;;2645:19:20::1;::::0;1109:2:21;1094:18;2645:19:20::1;;;;;;;;2488:183:::0;:::o;2204:254::-;3279:19:1;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:1;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:1;1713:19:2;:23;;;3387:66:1;;-1:-1:-1;3436:12:1;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:1;;3438:2:21;3325:201:1;;;3420:21:21;3477:2;3457:18;;;3450:30;3516:34;3496:18;;;3489:62;-1:-1:-1;;;3567:18:21;;;3560:44;3621:19;;3325:201:1;3236:410:21;3325:201:1;3536:12;:16;;-1:-1:-1;;3536:16:1;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:1;;;;;3562:65;2289:16:20::1;:14;:16::i;:::-;2315:10;:37:::0;;-1:-1:-1;;;;;2315:37:20;;::::1;-1:-1:-1::0;;;;;;2315:37:20;;::::1;;::::0;;;2362:4:::1;:12:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2394:2:::1;2384:7;:12:::0;2426::::1;:25:::0;;;;::::1;2441:10;2426:25;::::0;;3647:99:1;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:1;;;3721:14;;-1:-1:-1;3803:36:21;;3721:14:1;;3791:2:21;3776:18;3721:14:1;;;;;;;3647:99;3269:483;2204:254:20;;:::o;3410:429::-;3537:17;3566:21;3590:35;3606:9;3617:7;3590:15;:35::i;:::-;3662:10;;:40;;-1:-1:-1;;;3662:40:20;;3566:59;;-1:-1:-1;3635:24:20;;-1:-1:-1;;;;;3662:10:20;;;;:24;;:40;;3687:8;;3566:59;;3662:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3662:40:20;;;;;;;;;;;;:::i;:::-;3635:67;;3724:7;3749:1;3732:7;:14;:18;;;;:::i;:::-;3724:27;;;;;;;;:::i;:::-;;;;;;;3712:39;;3827:5;3816:7;;3808:5;:15;;;;:::i;:::-;3795:29;;:9;:29;:::i;:::-;:37;;;;:::i;:::-;3783:49;3410:429;-1:-1:-1;;;;;;3410:429:20:o;2064:101:0:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;2909:221:20:-;1334:13:0;:11;:13::i;:::-;3009:15:20::1;3027:27;3039:6;3047;3027:11;:27::i;:::-;-1:-1:-1::0;;;;;3064:50:20::1;;::::0;;;:14:::1;:50;::::0;;;;:59;;-1:-1:-1;;3064:59:20::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;2909:221:20:o;8376:187::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;8459:24:20;::::1;8451:59;;;::::0;-1:-1:-1;;;8451:59:20;;6893:2:21;8451:59:20::1;::::0;::::1;6875:21:21::0;6932:2;6912:18;;;6905:30;-1:-1:-1;;;6951:18:21;;;6944:52;7013:18;;8451:59:20::1;6691:346:21::0;8451:59:20::1;8520:10;:36:::0;;-1:-1:-1;;;;;;8520:36:20::1;-1:-1:-1::0;;;;;8520:36:20;;;::::1;::::0;;;::::1;::::0;;8376:187::o;8569:154::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;8644:22:20;::::1;8636:55;;;::::0;-1:-1:-1;;;8636:55:20;;7244:2:21;8636:55:20::1;::::0;::::1;7226:21:21::0;7283:2;7263:18;;;7256:30;-1:-1:-1;;;7302:18:21;;;7295:50;7362:18;;8636:55:20::1;7042:344:21::0;8636:55:20::1;8701:4;:15:::0;;-1:-1:-1;;;;;;8701:15:20::1;-1:-1:-1::0;;;;;8701:15:20;;;::::1;::::0;;;::::1;::::0;;8569:154::o;2677:226::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2762:27:20;::::1;2754:55;;;::::0;-1:-1:-1;;;2754:55:20;;7593:2:21;2754:55:20::1;::::0;::::1;7575:21:21::0;7632:2;7612:18;;;7605:30;-1:-1:-1;;;7651:18:21;;;7644:45;7706:18;;2754:55:20::1;7391:339:21::0;2754:55:20::1;2819:12;:28:::0;;-1:-1:-1;;;;;;2819:28:20::1;-1:-1:-1::0;;;;;2819:28:20;::::1;::::0;;::::1;::::0;;;2862:34:::1;::::0;1820:51:21;;;2862:34:20::1;::::0;1808:2:21;1793:18;2862:34:20::1;1674:203:21::0;2314:198:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:0;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:0;;7937:2:21;2394:73:0::1;::::0;::::1;7919:21:21::0;7976:2;7956:18;;;7949:30;8015:34;7995:18;;;7988:62;-1:-1:-1;;;8066:18:21;;;8059:36;8112:19;;2394:73:0::1;7735:402:21::0;2394:73:0::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;4879:963:20:-;5033:17;5081:1;5070:8;:12;5062:43;;;;-1:-1:-1;;;5062:43:20;;8344:2:21;5062:43:20;;;8326:21:21;8383:2;8363:18;;;8356:30;-1:-1:-1;;;8402:18:21;;;8395:48;8460:18;;5062:43:20;8142:342:21;5062:43:20;5136:7;-1:-1:-1;;;;;5123:20:20;:9;-1:-1:-1;;;;;5123:20:20;;5115:44;;;;-1:-1:-1;;;5115:44:20;;8691:2:21;5115:44:20;;;8673:21:21;8730:2;8710:18;;;8703:30;-1:-1:-1;;;8749:18:21;;;8742:41;8800:18;;5115:44:20;8489:335:21;5115:44:20;-1:-1:-1;;;;;5174:19:20;;5170:394;;5230:8;5217:9;:21;5209:52;;;;-1:-1:-1;;;5209:52:20;;9031:2:21;5209:52:20;;;9013:21:21;9070:2;9050:18;;;9043:30;-1:-1:-1;;;9089:18:21;;;9082:48;9147:18;;5209:52:20;8829:342:21;5209:52:20;5287:50;5305:7;5314:8;5324:12;5287:17;:50::i;:::-;5275:62;;5170:394;;;-1:-1:-1;;;;;5358:17:20;;5354:210;;5403:52;5421:9;5432:8;5442:12;5403:17;:52::i;5354:210::-;5498:55;5510:9;5521:7;5530:8;5540:12;5498:11;:55::i;:::-;5486:67;;5354:210;5597:11;5633:5;5623:7;;5611:9;:19;;;;:::i;:::-;:27;;;;:::i;:::-;5597:41;;5658:1;5652:3;:7;:28;;;;-1:-1:-1;;;;;;5663:17:20;;;;5652:28;5648:102;;;5721:12;;5696:43;;-1:-1:-1;;;5696:43:20;;-1:-1:-1;;;;;5721:12:20;;;5696:43;;;9350:51:21;9417:18;;;9410:34;;;5696:24:20;;;;;;9323:18:21;;5696:43:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5648:102;5765:70;;;9907:25:21;;;9963:2;9948:18;;9941:34;;;9991:18;;;9984:34;;;-1:-1:-1;;;;;5765:70:20;;;;;;;;5778:10;;5765:70;;9895:2:21;9880:18;5765:70:20;;;;;;;5052:790;4879:963;;;;;;:::o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:3;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;10231:2:21;1654:68:0;;;10213:21:21;;;10250:18;;;10243:30;10309:34;10289:18;;;10282:62;10361:18;;1654:68:0;10029:356:21;1003:95:0;5374:13:1;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;3845:983:20:-:0;3929:16;-1:-1:-1;;;;;3961:19:20;;3957:41;;3994:4;;-1:-1:-1;;;;;3994:4:20;;-1:-1:-1;3957:41:20;-1:-1:-1;;;;;4012:17:20;;4008:37;;4041:4;;-1:-1:-1;;;;;4041:4:20;;-1:-1:-1;4008:37:20;4100:15;4118:31;4130:9;4141:7;4118:11;:31::i;:::-;-1:-1:-1;;;;;4163:50:20;;;;;;:14;:50;;;;;;4100:49;;-1:-1:-1;4163:50:20;;4159:234;;;4229:27;4273:1;4259:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4259:16:20;;4229:46;;4305:9;4289:10;4300:1;4289:13;;;;;;;;:::i;:::-;;;;;;:25;-1:-1:-1;;;;;4289:25:20;;;-1:-1:-1;;;;;4289:25:20;;;;;4344:7;4328:10;4339:1;4328:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4328:23:20;;;:13;;;;;;;;;;;:23;4372:10;-1:-1:-1;4365:17:20;;-1:-1:-1;4365:17:20;4159:234;4455:4;;-1:-1:-1;;;;;4442:17:20;;;4455:4;;4442:17;;:36;;-1:-1:-1;4474:4:20;;-1:-1:-1;;;;;4463:15:20;;;4474:4;;4463:15;4442:36;4438:384;;;4494:21;4532:1;4518:16;;4438:384;4678:16;;;4692:1;4678:16;;;;;;;;;4654:21;;4678:16;;;;;;;;;;-1:-1:-1;4678:16:20;4654:40;;4718:9;4708:4;4713:1;4708:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4708:19:20;;;:7;;;;;;;;;:19;4751:4;;4741:7;;4751:4;;;4741;;4751;;4741:7;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;4741:14:20;;;-1:-1:-1;;;;;4741:14:20;;;;;4779:7;4769:4;4774:1;4769:7;;;;;;;;:::i;3845:983::-;;;;;:::o;2666:187:0:-;2758:6;;;-1:-1:-1;;;;;2774:17:0;;;-1:-1:-1;;;;;;2774:17:0;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;3136:240:20:-;3212:7;3247:6;-1:-1:-1;;;;;3238:15:20;:6;-1:-1:-1;;;;;3238:15:20;;:131;;3336:32;;-1:-1:-1;;11029:2:21;11025:15;;;11021:24;;3336:32:20;;;11009:37:21;11080:15;;;11076:24;11062:12;;;11055:46;11117:12;;3336:32:20;;;;;;;;;;;;3326:43;;;;;;3238:131;;;3278:32;;-1:-1:-1;;11029:2:21;11025:15;;;11021:24;;3278:32:20;;;11009:37:21;11080:15;;;11076:24;11062:12;;;11055:46;11117:12;;3278:32:20;;;;;;;;;;;;3268:43;;;;;;3238:131;3231:138;3136:240;-1:-1:-1;;;3136:240:20:o;5897:585::-;6094:16;;;6108:1;6094:16;;;;;;;;6029:7;;;;6094:16;6108:1;6094:16;;;;;;;;-1:-1:-1;;6130:4:20;;6120:7;;;;-1:-1:-1;;;;;;6130:4:20;;6120:7;;-1:-1:-1;6130:4:20;;6120:7;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;6120:14:20;;;-1:-1:-1;;;;;6120:14:20;;;;;6154:7;6144:4;6149:1;6144:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6144:17:20;;;:7;;;;;;;;;:17;6228:10;;6201:24;;6228:10;:32;6268:8;6291:12;6317:4;6335:10;6359:22;:15;6377:4;6359:22;:::i;:::-;6228:163;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6228:163:20;;;;;;;;;;;;:::i;:::-;6201:190;;6402:17;6422:7;6447:1;6430:7;:14;:18;;;;:::i;:::-;6422:27;;;;;;;;:::i;:::-;;;;;;;6402:47;;6466:9;6459:16;;;;;5897:585;;;;;:::o;6537:869::-;6748:67;;-1:-1:-1;;;6748:67:20;;6779:10;6748:67;;;12017:34:21;6799:4:20;12067:18:21;;;12060:43;12119:18;;;12112:34;;;6671:7:20;;-1:-1:-1;;;;;6748:30:20;;;;;11952:18:21;;6748:67:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6727:134;;;;-1:-1:-1;;;6727:134:20;;12359:2:21;6727:134:20;;;12341:21:21;12398:2;12378:18;;;12371:30;-1:-1:-1;;;12417:18:21;;;12410:50;12477:18;;6727:134:20;12157:344:21;6727:134:20;6932:10;;6898:56;;-1:-1:-1;;;6898:56:20;;-1:-1:-1;;;;;6932:10:20;;;6898:56;;;9350:51:21;9417:18;;;9410:34;;;6898:25:20;;;;;;9323:18:21;;6898:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7011:16:20;;;7025:1;7011:16;;;;;;;;6987:21;;7011:16;;;;;;;;;;-1:-1:-1;7011:16:20;6987:40;;7047:9;7037:4;7042:1;7037:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7037:19:20;;;:7;;;;;;;;;:19;7076:4;;7066:7;;7076:4;;;7066;;7076;;7066:7;;;;;;:::i;:::-;-1:-1:-1;;;;;7066:14:20;;;:7;;;;;;;;;:14;7147:10;;7120:24;;7147:10;:32;7193:8;7215:12;7241:4;7259:10;7283:22;:15;7301:4;7283:22;:::i;:::-;7147:168;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7147:168:20;;;;;;;;;;;;:::i;7460:852::-;7690:67;;-1:-1:-1;;;7690:67:20;;7721:10;7690:67;;;12017:34:21;7741:4:20;12067:18:21;;;12060:43;12119:18;;;12112:34;;;7613:7:20;;-1:-1:-1;;;;;7690:30:20;;;;;11952:18:21;;7690:67:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7669:134;;;;-1:-1:-1;;;7669:134:20;;12359:2:21;7669:134:20;;;12341:21:21;12398:2;12378:18;;;12371:30;-1:-1:-1;;;12417:18:21;;;12410:50;12477:18;;7669:134:20;12157:344:21;7669:134:20;7874:10;;7840:56;;-1:-1:-1;;;7840:56:20;;-1:-1:-1;;;;;7874:10:20;;;7840:56;;;9350:51:21;9417:18;;;9410:34;;;7840:25:20;;;;;;9323:18:21;;7840:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7929:21;7953:35;7969:9;7980:7;7953:15;:35::i;:::-;8050:10;;7929:59;;-1:-1:-1;8023:24:20;;-1:-1:-1;;;;;8050:10:20;:35;8099:8;8121:12;7929:59;8165:10;8189:22;:15;8207:4;8189:22;:::i;:::-;8050:171;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8050:171:20;;;;;;;;;;;;:::i;:::-;8023:198;;8232:17;8252:7;8277:1;8260:7;:14;:18;;;;:::i;:::-;8252:27;;;;;;;;:::i;:::-;;;;;;;8232:47;;8296:9;8289:16;;;;;7460:852;;;;;;:::o;1104:111:0:-;5374:13:1;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:3::0;1176:18:0::1;:32::i;14:180:21:-:0;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:21;;14:180;-1:-1:-1;14:180:21:o;199:173::-;267:20;;-1:-1:-1;;;;;316:31:21;;306:42;;296:70;;362:1;359;352:12;296:70;199:173;;;:::o;377:260::-;445:6;453;506:2;494:9;485:7;481:23;477:32;474:52;;;522:1;519;512:12;474:52;545:29;564:9;545:29;:::i;:::-;535:39;;593:38;627:2;616:9;612:18;593:38;:::i;:::-;583:48;;377:260;;;;;:::o;642:328::-;719:6;727;735;788:2;776:9;767:7;763:23;759:32;756:52;;;804:1;801;794:12;756:52;827:29;846:9;827:29;:::i;:::-;817:39;;875:38;909:2;898:9;894:18;875:38;:::i;:::-;865:48;;960:2;949:9;945:18;932:32;922:42;;642:328;;;;;:::o;1157:118::-;1243:5;1236:13;1229:21;1222:5;1219:32;1209:60;;1265:1;1262;1255:12;1280:389;1354:6;1362;1370;1423:2;1411:9;1402:7;1398:23;1394:32;1391:52;;;1439:1;1436;1429:12;1391:52;1462:29;1481:9;1462:29;:::i;:::-;1452:39;;1510:38;1544:2;1533:9;1529:18;1510:38;:::i;:::-;1500:48;;1598:2;1587:9;1583:18;1570:32;1611:28;1633:5;1611:28;:::i;:::-;1658:5;1648:15;;;1280:389;;;;;:::o;1882:186::-;1941:6;1994:2;1982:9;1973:7;1969:23;1965:32;1962:52;;;2010:1;2007;2000:12;1962:52;2033:29;2052:9;2033:29;:::i;2493:397::-;2579:6;2587;2595;2603;2656:3;2644:9;2635:7;2631:23;2627:33;2624:53;;;2673:1;2670;2663:12;2624:53;2696:29;2715:9;2696:29;:::i;:::-;2686:39;;2744:38;2778:2;2767:9;2763:18;2744:38;:::i;:::-;2493:397;;2734:48;;-1:-1:-1;;;;2829:2:21;2814:18;;2801:32;;2880:2;2865:18;2852:32;;2493:397::o;3850:465::-;3903:3;3941:5;3935:12;3968:6;3963:3;3956:19;3994:4;4023;4018:3;4014:14;4007:21;;4062:4;4055:5;4051:16;4085:1;4095:195;4109:6;4106:1;4103:13;4095:195;;;4174:13;;-1:-1:-1;;;;;4170:39:21;4158:52;;4230:12;;;;4265:15;;;;4206:1;4124:9;4095:195;;;-1:-1:-1;4306:3:21;;3850:465;-1:-1:-1;;;;;3850:465:21:o;4320:332::-;4527:6;4516:9;4509:25;4570:2;4565;4554:9;4550:18;4543:30;4490:4;4590:56;4642:2;4631:9;4627:18;4619:6;4590:56;:::i;:::-;4582:64;4320:332;-1:-1:-1;;;;4320:332:21:o;4657:127::-;4718:10;4713:3;4709:20;4706:1;4699:31;4749:4;4746:1;4739:15;4773:4;4770:1;4763:15;4789:1105;4884:6;4915:2;4958;4946:9;4937:7;4933:23;4929:32;4926:52;;;4974:1;4971;4964:12;4926:52;5007:9;5001:16;5036:18;5077:2;5069:6;5066:14;5063:34;;;5093:1;5090;5083:12;5063:34;5131:6;5120:9;5116:22;5106:32;;5176:7;5169:4;5165:2;5161:13;5157:27;5147:55;;5198:1;5195;5188:12;5147:55;5227:2;5221:9;5249:2;5245;5242:10;5239:36;;;5255:18;;:::i;:::-;5301:2;5298:1;5294:10;5333:2;5327:9;5396:2;5392:7;5387:2;5383;5379:11;5375:25;5367:6;5363:38;5451:6;5439:10;5436:22;5431:2;5419:10;5416:18;5413:46;5410:72;;;5462:18;;:::i;:::-;5498:2;5491:22;5548:18;;;5582:15;;;;-1:-1:-1;5624:11:21;;;5620:20;;;5652:19;;;5649:39;;;5684:1;5681;5674:12;5649:39;5708:11;;;;5728:135;5744:6;5739:3;5736:15;5728:135;;;5810:10;;5798:23;;5761:12;;;;5841;;;;5728:135;;;5882:6;4789:1105;-1:-1:-1;;;;;;;;4789:1105:21:o;5899:127::-;5960:10;5955:3;5951:20;5948:1;5941:31;5991:4;5988:1;5981:15;6015:4;6012:1;6005:15;6031:128;6098:9;;;6119:11;;;6116:37;;;6133:18;;:::i;6164:127::-;6225:10;6220:3;6216:20;6213:1;6206:31;6256:4;6253:1;6246:15;6280:4;6277:1;6270:15;6296:168;6369:9;;;6400;;6417:15;;;6411:22;;6397:37;6387:71;;6438:18;;:::i;6469:217::-;6509:1;6535;6525:132;;6579:10;6574:3;6570:20;6567:1;6560:31;6614:4;6611:1;6604:15;6642:4;6639:1;6632:15;6525:132;-1:-1:-1;6671:9:21;;6469:217::o;9455:245::-;9522:6;9575:2;9563:9;9554:7;9550:23;9546:32;9543:52;;;9591:1;9588;9581:12;9543:52;9623:9;9617:16;9642:28;9664:5;9642:28;:::i;10390:407::-;10592:2;10574:21;;;10631:2;10611:18;;;10604:30;10670:34;10665:2;10650:18;;10643:62;-1:-1:-1;;;10736:2:21;10721:18;;10714:41;10787:3;10772:19;;10390:407::o;11140:125::-;11205:9;;;11226:10;;;11223:36;;;11239:18;;:::i;11270:502::-;11533:6;11522:9;11515:25;11576:3;11571:2;11560:9;11556:18;11549:31;11496:4;11597:57;11649:3;11638:9;11634:19;11626:6;11597:57;:::i;:::-;-1:-1:-1;;;;;11690:32:21;;;;11685:2;11670:18;;11663:60;-1:-1:-1;11754:2:21;11739:18;11732:34;11589:65;11270:502;-1:-1:-1;;11270:502:21:o;12506:574::-;12797:6;12786:9;12779:25;12840:6;12835:2;12824:9;12820:18;12813:34;12883:3;12878:2;12867:9;12863:18;12856:31;12760:4;12904:57;12956:3;12945:9;12941:19;12933:6;12904:57;:::i;:::-;-1:-1:-1;;;;;12997:32:21;;;;12992:2;12977:18;;12970:60;-1:-1:-1;13061:3:21;13046:19;13039:35;12896:65;12506:574;-1:-1:-1;;;12506:574:21:o"},"methodIdentifiers":{"beanRouter()":"ac29e1a1","feeCollector()":"c415b95c","getAmountOut(address,address,uint256)":"4aa06652","initialize(address,address)":"485cc955","owner()":"8da5cb5b","preferredPairs(address)":"af7be3d7","renounceOwnership()":"715018a6","setFeeCollector(address)":"a42dce80","setPreferredPair(address,address,bool)":"761de586","setSwapFee(uint256)":"34e19907","swap(address,address,uint256,uint256)":"fe029156","swapFee()":"54cf2aeb","transferOwnership(address)":"f2fde38b","updateBeanRouter(address)":"858845d9","updateWMON(address)":"9b69c7c8","wmon()":"7d86b8a5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beanRouter\",\"outputs\":[{\"internalType\":\"contract IBeanRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beanRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wmon\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"preferredPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPreferredPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouter\",\"type\":\"address\"}],\"name\":\"updateBeanRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWMON\",\"type\":\"address\"}],\"name\":\"updateWMON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wmon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MonadSwapAggregatorV2.sol\":\"MonadSwapAggregatorV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/MonadSwapAggregatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBeanRouter {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ncontract MonadSwapAggregatorV2 is Initializable, OwnableUpgradeable {\\n    // Events\\n    event TokenSwapped(\\n        address indexed user,\\n        address indexed fromToken,\\n        address indexed toToken,\\n        uint256 amountIn,\\n        uint256 amountOut,\\n        uint256 fee\\n    );\\n\\n    event FeeUpdated(uint256 newFee);\\n    event FeeCollectorUpdated(address newCollector);\\n\\n    // State variables\\n    IBeanRouter public beanRouter;\\n    address public wmon;\\n    address private constant NATIVE = address(0);\\n\\n    // New V2 variables\\n    uint256 public swapFee; // dalam basis points (1 = 0.01%)\\n    address public feeCollector;\\n    mapping(address => bool) public preferredPairs; // Pairs yang bisa di-swap langsung\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _beanRouter, address _wmon) public initializer {\\n        __Ownable_init();\\n        beanRouter = IBeanRouter(_beanRouter);\\n        wmon = _wmon;\\n        swapFee = 30; // 0.3% fee default\\n        feeCollector = msg.sender;\\n    }\\n\\n    // New V2 functions\\n    function setSwapFee(uint256 _newFee) external onlyOwner {\\n        require(_newFee <= 100, \\\"Fee too high\\\"); // Max 1%\\n        swapFee = _newFee;\\n        emit FeeUpdated(_newFee);\\n    }\\n\\n    function setFeeCollector(address _newCollector) external onlyOwner {\\n        require(_newCollector != address(0), \\\"Invalid address\\\");\\n        feeCollector = _newCollector;\\n        emit FeeCollectorUpdated(_newCollector);\\n    }\\n\\n    function setPreferredPair(address token0, address token1, bool status) external onlyOwner {\\n        bytes32 pairKey = _getPairKey(token0, token1);\\n        preferredPairs[address(uint160(uint256(pairKey)))] = status;\\n    }\\n\\n    function _getPairKey(address token0, address token1) internal pure returns (bytes32) {\\n        return token0 < token1\\n            ? keccak256(abi.encodePacked(token0, token1))\\n            : keccak256(abi.encodePacked(token1, token0));\\n    }\\n\\n    // Updated V2 functions\\n    function getAmountOut(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn\\n    ) public view returns (uint256 amountOut) {\\n        address[] memory path = _getOptimalPath(fromToken, toToken);\\n        uint256[] memory amounts = beanRouter.getAmountsOut(amountIn, path);\\n        amountOut = amounts[amounts.length - 1];\\n\\n        // Apply fee\\n        amountOut = amountOut * (10000 - swapFee) / 10000;\\n    }\\n\\n    function _getOptimalPath(address fromToken, address toToken) internal view returns (address[] memory) {\\n        if (fromToken == NATIVE) fromToken = wmon;\\n        if (toToken == NATIVE) toToken = wmon;\\n\\n        // Check if direct swap is possible\\n        bytes32 pairKey = _getPairKey(fromToken, toToken);\\n        if (preferredPairs[address(uint160(uint256(pairKey)))]) {\\n            address[] memory directPath = new address[](2);\\n            directPath[0] = fromToken;\\n            directPath[1] = toToken;\\n            return directPath;\\n        }\\n\\n        // Default to WMON routing\\n        if (fromToken == wmon || toToken == wmon) {\\n            address[] memory path = new address[](2);\\n            path[0] = fromToken;\\n            path[1] = toToken;\\n            return path;\\n        } else {\\n            address[] memory path = new address[](3);\\n            path[0] = fromToken;\\n            path[1] = wmon;\\n            path[2] = toToken;\\n            return path;\\n        }\\n    }\\n\\n    // Main swap function (updated with fee)\\n    function swap(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) external payable returns (uint256 amountOut) {\\n        require(amountIn > 0, \\\"Amount must be > 0\\\");\\n        require(fromToken != toToken, \\\"Same tokens\\\");\\n\\n        if (fromToken == NATIVE) {\\n            require(msg.value == amountIn, \\\"Invalid MON amount\\\");\\n            amountOut = _swapMonForTokens(toToken, amountIn, amountOutMin);\\n        } else if (toToken == NATIVE) {\\n            amountOut = _swapTokensForMon(fromToken, amountIn, amountOutMin);\\n        } else {\\n            amountOut = _swapTokens(fromToken, toToken, amountIn, amountOutMin);\\n        }\\n\\n        // Collect fee\\n        uint256 fee = amountOut * swapFee / 10000;\\n        if (fee > 0 && toToken != NATIVE) {\\n            IERC20(toToken).transfer(feeCollector, fee);\\n        }\\n\\n        emit TokenSwapped(msg.sender, fromToken, toToken, amountIn, amountOut, fee);\\n    }\\n\\n    // Internal function untuk swap MON ke token\\n    function _swapMonForTokens(\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = wmon;\\n        path[1] = toToken;\\n\\n        // Swap MON ke token\\n        uint256[] memory amounts = beanRouter.swapExactETHForTokens{value: amountIn}(\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap token ke MON\\n    function _swapTokensForMon(\\n        address fromToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = new address[](2);\\n        path[0] = fromToken;\\n        path[1] = wmon;\\n\\n        // Swap token ke MON\\n        uint256[] memory amounts = beanRouter.swapExactTokensForETH(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    // Internal function untuk swap antar token\\n    function _swapTokens(\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin\\n    ) internal returns (uint256) {\\n        // Transfer tokens from user\\n        require(\\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn),\\n            \\\"Transfer from failed\\\"\\n        );\\n\\n        // Approve router\\n        IERC20(fromToken).approve(address(beanRouter), amountIn);\\n\\n        // Setup path\\n        address[] memory path = _getOptimalPath(fromToken, toToken);\\n\\n        // Execute swap\\n        uint256[] memory amounts = beanRouter.swapExactTokensForTokens(\\n            amountIn,\\n            amountOutMin,\\n            path,\\n            msg.sender,\\n            block.timestamp + 1200\\n        );\\n\\n        uint256 amountOut = amounts[amounts.length - 1];\\n        return amountOut;\\n    }\\n\\n    receive() external payable {}\\n\\n    // Admin functions\\n    function updateBeanRouter(address _newRouter) external onlyOwner {\\n        require(_newRouter != address(0), \\\"Invalid router address\\\");\\n        beanRouter = IBeanRouter(_newRouter);\\n    }\\n\\n    function updateWMON(address _newWMON) external onlyOwner {\\n        require(_newWMON != address(0), \\\"Invalid WMON address\\\");\\n        wmon = _newWMON;\\n    }\\n}\",\"keccak256\":\"0x9e5cf584487eeee3a3cdcafffcbaae85cbc186ac4fb6a2e048046711dbf9bc17\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":141,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":671,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":3625,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"beanRouter","offset":0,"slot":"101","type":"t_contract(IBeanRouter)3596"},{"astId":3627,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"wmon","offset":0,"slot":"102","type":"t_address"},{"astId":3635,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"swapFee","offset":0,"slot":"103","type":"t_uint256"},{"astId":3637,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"feeCollector","offset":0,"slot":"104","type":"t_address"},{"astId":3641,"contract":"contracts/MonadSwapAggregatorV2.sol:MonadSwapAggregatorV2","label":"preferredPairs","offset":0,"slot":"105","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IBeanRouter)3596":{"encoding":"inplace","label":"contract IBeanRouter","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}